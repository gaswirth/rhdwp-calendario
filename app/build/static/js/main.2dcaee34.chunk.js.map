{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","components/Header.js","components/Day.js","lib/updatePost.js","PostsContext.js","components/PostLinks.js","DragContext.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","nonce","routeBase","postStatuses","window","rhdReactPlugin","restBase","dateFormat","filterUnchangedParams","params","post","length","key","omit","renderWidget","ViewContext","createContext","viewReducer","state","action","type","viewMode","viewRange","range","start","startOfWeek","end","endOfWeek","date","addMonths","subMonths","statuses","status","initialViewOptions","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","Header","Day","day","monthName","classes","isToday","push","isPast","join","format","initialUpdateState","updateNow","trash","unscheduled","updateReducer","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","refetch","dateRange","scheduled","trashed","postsReducer","scheduledPosts","posts","forEach","index","Date","unscheduledPosts","trashedPosts","field","PostLinks","edit_link","view_link","postsDispatch","useReducer","updatePost","updatePostDispatch","url","postData","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","message","fetchData","href","rel","decode","DragContext","dragReducer","isDragging","draggedFrom","draggedTo","draggedOver","overUnscheduled","initialDrag","Post","allowDrag","draggedPost","draggedPostDispatch","useState","colors","setColors","setDate","isHovered","setIsHovered","color","backgroundColor","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","style","visibility","data-index","draggable","onDragStart","onDragEnd","onMouseEnter","onMouseLeave","scope","renderPost","Loading","PostList","allowDrop","loadingState","isLoading","setIsLoading","undefined","data","error","handleDragOver","overNow","isNaN","targetRect","getBoundingClientRect","mouseY","clientY","top","listItems","childNodes","itemCount","offsetTop","handleDrop","listProps","onDragOver","onDrop","map","renderPostList","NewPostButton","useFetchScheduledPosts","res","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","newDate","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleClickOutside","current","removeEventListener","addEventListener","handleInputChange","onSubmit","post_excerpt","disabled","checked","Object","keys","image","src","alt","fontWeight","autoFocus","Main","UnscheduledDrafts","useFetchUnscheduledPosts","StatusFilters","toggleStatus","item","borderColor","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","Provider","min","max","getTime","scroll","behavior","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2dcaee34.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\n// TODO: DEV MODE\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\nexport var nonce, routeBase, postStatuses;\nif (DEBUG_MODE !== true) {\n\t// WP mode\n\tnonce = window.rhdReactPlugin.nonce; // Live\n\trouteBase = window.rhdReactPlugin.restBase; // Live\n\tpostStatuses = window.rhdReactPlugin.postStatuses; // Live\n} else {\n\t// non-WP mode\n\tnonce = 0;\n\trouteBase = \"http://localhost/wp-json/calendario/v1/posts\";\n\tpostStatuses = {\n\t\tpublish: {\n\t\t\tname: \"Published\",\n\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tdraft: {\n\t\t\tname: \"Draft\",\n\t\t\tbackgroundColor: \"silver\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tfuture: {\n\t\t\tname: \"Scheduled\",\n\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tpending: {\n\t\t\tname: \"Pending Review\",\n\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tprivate: {\n\t\t\tname: \"Private\",\n\t\t\tbackgroundColor: \"maroon\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t};\n}\n// ODOT\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Filters unchanged values from a post object.\n *\n * @param {object} params  Key/value post parameters to update\n * @param {object} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (params[key] === post[key]) {\n\t\t\t\tparams = omit(params, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n *\n * @param {Date} date The target date\n * @param {*} min Start of the range\n * @param {*} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n","import { createContext } from \"react\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\nimport { postStatuses } from \"./lib/utils\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\t// TODO combine this with _END case\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatuses: {\n\t\t\t\t\t...state.statuses,\n\t\t\t\t\t[action.status]: !state.statuses[action.status],\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nvar statuses = {};\nfor (const status in postStatuses) {\n\tstatuses[status] = true;\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tstatuses,\n};\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\n\nexport default function Header({ handleTodayClick }) {\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\tthe editorial calendorial\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import React, { forwardRef } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")} ref={isToday(day) ? ref : null}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n});\nexport default Day;\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_TRASHED\":\n\t\t\tlet trashedPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\ttrashedPosts.forEach((post, index) => {\n\t\t\t\ttrashedPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrashed: trashedPosts,\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { routeBase } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nexport default function PostLinks({ post, className, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}`;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={`postLinks ${className}`}>\n\t\t\t<a\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\thref={view_link}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\thref={decode(edit_link)}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</a>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>delete_forever</button>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_SCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: null,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toverUnscheduled: false,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled, allowDrag }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging, draggedFrom, draggedTo },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { statuses },\n\t} = useContext(ViewContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\tconst [isHovered, setIsHovered] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet unscheduled =\n\t\t\te.target.classList.contains(\"unscheduledDrafts\") ||\n\t\t\te.target.parentNode.classList.contains(\"unscheduledDrafts\")\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (isDragging) {\n\t\t\tif (draggedTo === Number(index)) {\n\t\t\t\tclasses.push(\"dropArea\");\n\n\t\t\t\tif (draggedFrom === false) {\n\t\t\t\t\tclasses.push(\"fromNowhere\");\n\t\t\t\t} else if (draggedFrom < draggedTo) {\n\t\t\t\t\tclasses.push(\"fromAbove\");\n\t\t\t\t} else if (draggedFrom > draggedTo) {\n\t\t\t\t\tclasses.push(\"fromBelow\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tid={post.id}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tstyle={\n\t\t\t\t\tunscheduled === false && statuses[post.post_status] === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: unscheduled === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: { visibility: \"hidden\" }\n\t\t\t\t}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t>\n\t\t\t\t<PostLinks\n\t\t\t\t\tclassName={isHovered && !isDragging ? \"visible\" : \"hidden\"}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t/>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","import React from \"react\";\n\nexport default function Loading({ className }) {\n\treturn (\n\t\t<div className={`loadingOverlay ${className}`}>\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n\tloadingState,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post, draggedTo, draggedFrom, overUnscheduled },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (loadingState === undefined || loadingState === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading(loadingState);\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [loadingState]);\n\n\t// Fire the update!\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (draggedTo !== null) {\n\t\t\t\tpostData.draggedTo = draggedTo;\n\t\t\t}\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedTo, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag === false) return;\n\n\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\tlet overNow = Number(e.target.dataset.index);\n\n\t\t\tlet draggedOver = false;\n\t\t\tif (draggedFrom === overNow) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tdraggedOver = Number.isNaN(overNow) ? false : overNow;\n\t\t\t}\n\n\t\t\tif (draggedOver !== draggedTo) {\n\t\t\t\tif (draggedOver === false) {\n\t\t\t\t\tlet targetRect = e.currentTarget.getBoundingClientRect();\n\t\t\t\t\tlet mouseY = e.clientY - targetRect.top;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedOver = 0;\n\t\t\t\t\t} else if (mouseY >= listItems[itemCount - 1].offsetTop) {\n\t\t\t\t\t\tdraggedOver = itemCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedOver = itemCount - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedOver,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (overUnscheduled === true) {\n\t\t\t// Only update if necessary\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_SCHEDULED\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date:\n\t\t\t\t\t\tdate === false\n\t\t\t\t\t\t\t? format(post.post_date, dateFormat.date)\n\t\t\t\t\t\t\t: format(date, dateFormat.date),\n\t\t\t\t},\n\t\t\t\tunscheduled: overUnscheduled,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loading className={isLoading ? \"active\" : null} />\n\t\t\t\t<ul {...listProps}>\n\t\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tunscheduled={date === false ? true : false}\n\t\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { format, isSameDay } from \"date-fns\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"../lib/utils\";\nvar headers = {};\nif (DEBUG_MODE !== true) {\n\theaders[\"X-WP-Nonce\"] = nonce;\n}\n// ODOT\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n// export const useFetchTrashedPosts = () => {\n// \tconst {\n// \t\tposts: { refetch },\n// \t\tpostsDispatch,\n// \t} = useContext(PostsContext);\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tuseEffect(() => {\n// \t\tlet url = `${routeBase}/trashed`;\n\n// \t\tconst fetchData = async () => {\n// \t\t\tsetIsLoading(true);\n\n// \t\t\ttry {\n// \t\t\t\tconst res = await fetch(url, {\n// \t\t\t\t\theaders,\n// \t\t\t\t});\n// \t\t\t\tconst data = await res.json();\n\n// \t\t\t\tpostsDispatch({\n// \t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n// \t\t\t\t\tposts: data.posts,\n// \t\t\t\t\tunscheduled: true,\n// \t\t\t\t});\n\n// \t\t\t\tsetIsLoading(false);\n// \t\t\t} catch (error) {\n// \t\t\t\tconsole.log(\"REST error\", error.message);\n// \t\t\t\tsetIsLoading(false);\n// \t\t\t}\n// \t\t};\n\n// \t\tfetchData();\n\n// \t\treturn () => {\n// \t\t\tsetIsLoading(false);\n// \t\t};\n// \t}, [postsDispatch, refetch]);\n\n// \treturn isLoading;\n// };\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({\n\tposts,\n\tdate,\n\tallowDrag,\n\tallowDrop,\n\ttitle,\n\tloadingState,\n}) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t\tloadingState,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"DATE_CHANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tpost_date: action.newDate,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\n// TODO Date/time display, add time picker\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO keep this?\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tuseEffect(() => {\n\t\tif (editMode === false) return;\n\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\tcloseModal();\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [editMode, currentPost, postsDispatch, closeModal]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(new Date(post.post_date), dateFormat.date),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => editPostDispatch({ type: \"CLEAR\" });\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\thighlight_off\n\t\t\t\t\t</button>\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`fieldGroup__field post_date ${\n\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__field unscheduled\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">Unscheduled</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"post_status\" label=\"Status\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\" label=\"Categories & Tags\">\n\t\t\t\t\t\t\t<p>Coming soon</p>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t<ViewOptions className=\"view__options\" />\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tconst isLoading = useFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t\tloadingState={isLoading}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t</>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\tconst {\n\t\tviewOptions: { statuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_STATUS\",\n\t\t\tstatus: e.target.name,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`dot ${\n\t\t\t\t\t\t\t\t\tstatuses[item] ? \"visible\" : \"hidden\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tname={item}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tstatuses[item] === true\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor, // TODO use it or lose it\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={toggleStatus}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\"\", \"statusFilters\", <StatusFilters />)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Dev Links + Info\",\n\t\t\t\t\t\"dev\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTODO/Readme\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tGitHub:{\" \"}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tgaswirth/rhdwp-calendario\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport { dateIsBetween } from \"./lib/utils\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\t// TODO add/save user filtered statuses here?\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tfunction handleTodayClick() {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n// ODOT\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}