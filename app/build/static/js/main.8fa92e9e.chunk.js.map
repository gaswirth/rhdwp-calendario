{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","PostsContext.js","lib/hooks.js","components/Header.js","DragContext.js","components/Day.js","components/common/PostLink.js","components/PostLinks.js","components/Post.js","components/PostList.js","components/common/NewPostButton.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/common/ColorPickerPopover.js","components/common/ToggleButton.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","wp","window","rhdReactPlugin","dateFormat","filterUnchangedParams","params","post","length","key","Array","isArray","every","value","index","omit","renderWidget","dayKey","date","format","isDraggingUnscheduled","item","source","droppableId","getPostList","id","posts","unscheduled","scheduled","moveItem","destination","droppableSource","droppableDestination","sourceClone","from","destClone","isEmpty","splice","removed","destinationIndex","undefined","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","postStatuses","defaultStatusColors","viewReducer","state","action","type","range","startOfWeek","endOfWeek","addMonths","subMonths","statuses","status","visible","postStatus","color","reset","Object","keys","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","PostsContext","initialPosts","currentPost","post_title","post_status","post_date","updatePost","updateNow","trash","newIndex","refetch","dateRange","trashed","taxonomies","locale","postsReducer","scheduledPosts","forEach","Date","post_date_day","scheduledByDate","groupBy","unscheduledPosts","sourceId","destinationId","taxonomy","terms","field","routeBase","headers","nonce","useFetchScheduledPosts","postsDispatch","useState","isLoading","setIsLoading","url","a","fetch","res","json","data","console","log","message","fetchData","useFetchTaxonomyTerms","useClickOutside","handler","startedInside","startedWhenMounted","listener","event","current","contains","validateEventStart","addEventListener","removeEventListener","Header","useFetchPostStatuses","pluginUrl","href","rel","src","alt","DragContext","initialDrag","isDragging","currentIndex","overUnscheduled","dragReducer","draggedOver","Day","day","monthName","dragOver","setDragOver","draggedPost","isUnscheduled","classes","handleDragOver","isSameDay","isToday","push","isPast","join","onDragOver","onDragLeave","onDrop","PostLink","icon","PostLinks","edit_link","view_link","open","decode","result","findIndex","Post","setColor","handleClick","classList","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","data-index","style","backgroundColor","scope","renderPost","PostList","renderPosts","hovered","setHovered","renderPostList","useMemo","map","droppableProps","onMouseEnter","onMouseLeave","marginBottom","placeholder","NewPostButton","DayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","allowDrag","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","slice","EditPost","useReducer","editPost","editPostDispatch","node","useRef","setDate","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleInputChange","handleTermCheckboxChange","onSubmit","post_excerpt","timeInputLabel","showTimeInput","disabled","checked","category","term","post_tag","image","fontWeight","autoFocus","Main","AdminLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","ColorPickerPopover","presetStatusColors","popover","previous","colorValue","setColorValue","isOpen","setIsOpen","close","background","ToggleButton","toggleSelected","StatusFilters","firstUpdate","colorsChanged","setColorsChanged","currentStatusColors","isEqual","haveColorsChanged","colors","method","body","JSON","stringify","response","toggleStatus","Sidebar","App","draggedPostDispatch","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","user","postData","Provider","min","max","getTime","scroll","top","offsetTop","behavior","onDragEnd","formatted","parseISO","time","h","getHours","m","getMinutes","setHours","setMinutes","draggedPostDate","items","list","startIndex","endIndex","reorderUnscheduled","onDragStart","draggingUnscheduled","find","p","Number","onDragUpdate","isOverUnscheduled","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8fa92e9e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import Widget from \"../components/common/Widget\";\nimport { omit, isEmpty, isEqual } from \"lodash\";\nimport {\n\tformat,\n\tparseISO,\n\tgetHours,\n\tgetMinutes,\n\tsetHours,\n\tsetMinutes,\n} from \"date-fns\";\n\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\n\nexport const wp =\n\tDEBUG_MODE === true\n\t\t? {\n\t\t\t\tnonce: 0,\n\t\t\t\trouteBase: \"http://localhost/wp-json/calendario/v1\",\n\t\t\t\tuser: 1,\n\t\t\t\tadminUrl: \"\",\n\t\t\t\tpluginUrl: \"//localhost/wp-content/plugins/rhdwp-calendario/\",\n\t\t\t\tpostsUrl: \"\",\n\t\t\t\ttrashUrl: \"\",\n\t\t\t\tblogUrl: \"//localhost\",\n\t\t\t\tdefaultStatusColors: {\n\t\t\t\t\tpublish: \"dodgerblue\",\n\t\t\t\t\tfuture: \"olivedrab\",\n\t\t\t\t\tdraft: \"darkgray\",\n\t\t\t\t\tpending: \"orange\",\n\t\t\t\t\tprivate: \"brown\",\n\t\t\t\t},\n\t\t\t\tpresetStatusColors: [\n\t\t\t\t\t\"darkgray\",\n\t\t\t\t\t\"violet\",\n\t\t\t\t\t\"darkorchid\",\n\t\t\t\t\t\"dodgerblue\",\n\t\t\t\t\t\"skyblue\",\n\t\t\t\t\t\"olivedrab\",\n\t\t\t\t\t\"mediumseagreen\",\n\t\t\t\t\t\"lightsalmon\",\n\t\t\t\t\t\"orange\",\n\t\t\t\t\t\"brown\",\n\t\t\t\t],\n\t\t  }\n\t\t: {\n\t\t\t\t...window.rhdReactPlugin,\n\t\t  };\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(statuses, exclude = []) {\n\tlet filtered = statuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in filtered) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Checks whether or not the user has customized the color palette.\n *\n * @param {Object} statuses\n * @returns {boolean}\n */\nexport function haveColorsChanged(statuses) {\n\tconst { defaultStatusColors } = wp;\n\tlet currentStatusColors = {};\n\tfor (const status in statuses) {\n\t\tcurrentStatusColors[status] = statuses[status].color;\n\t}\n\n\treturn !isEqual(defaultStatusColors, currentStatusColors);\n}\n\n/**\n * Filters unchanged values from a post object.\n *\n * @param {object} params  Key/value post parameters to update\n * @param {object} post The post to check against\n * @returns {object} The filtered params object\n */\n// TODO bumpy road, clean it up\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (Array.isArray(params[key])) {\n\t\t\t\tif (\n\t\t\t\t\tparams[key].length === post[key].length &&\n\t\t\t\t\tparams[key].every(\n\t\t\t\t\t\t(value, index) => value === post[key][index]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (params[key] === post[key]) {\n\t\t\t\t\tparams = omit(params, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n * Retrieves a calendar day's key (format: yyyy-MM-dd)\n *\n * @param {Date}\n * @returns {string}\n */\nexport const dayKey = (date) => format(date, dateFormat.date);\n\n/**\n *\n * @param {Date} date The target date\n * @param {*} min Start of the range\n * @param {*} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n\n/**\n *\n * @param {Post} item Dragged item // TODO figure out documenting this \"Post\" type for post arrays\n * @returns {boolean} True if unscheduled, false otherwise\n */\nexport const isDraggingUnscheduled = (item) =>\n\titem.source.droppableId === \"unscheduled\" ? true : false;\n\n/**\n *\n * @param {Post} item Dragged item // TODO figure out documenting this \"Post\" type for post arrays\n * @returns {boolean} True if dragged item is over 'unscheduled' area, false otherwise\n */\nexport const isOverUnscheduled = (item) =>\n\titem.destination.droppableId === \"unscheduled\" ? true : false;\n\n/**\n * Retrieves a list of posts.\n *\n * @param {string} id\n * @param {array|object} posts All posts\n * @returns {array} The posts list\n */\nexport const getPostList = (id, posts) => {\n\tlet list;\n\tif (id === \"unscheduled\") {\n\t\tlist = posts.unscheduled;\n\t} else {\n\t\tlist = posts.scheduled[id];\n\t}\n\n\treturn list;\n};\n\n/**\n *\n * @param {object|array} list The post list\n * @param {number} startIndex\n * @param {number} endIndex\n * @returns\n */\nexport const reorderUnscheduled = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n *\n * @param {array} source\n * @param {array} destination\n * @param {object} droppableSource\n * @param {string} droppableSource.droppableId List ID\n * @param {number} [droppableSource.index = null] The starting index of the item to move\n * @param {object} droppableDestination\n * @param {string} droppableDestination.droppableId List ID\n * @param {number} [droppableDestination.index = null] The ending index of the item to move\n * @returns\n */\nexport const moveItem = (\n\tsource,\n\tdestination,\n\tdroppableSource,\n\tdroppableDestination\n) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = !isEmpty(destination) ? Array.from(destination) : [];\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tlet destinationIndex =\n\t\tdroppableDestination.index !== undefined\n\t\t\t? droppableDestination.index\n\t\t\t: !isEmpty(destination)\n\t\t\t? destination.length\n\t\t\t: 0;\n\n\tdestClone.splice(destinationIndex, 0, removed);\n\n\tconst result = {\n\t\t[droppableSource.droppableId]: sourceClone,\n\t\t[droppableDestination.droppableId]: destClone,\n\t\tsourceId: droppableSource.droppableId,\n\t\tdestinationId: droppableDestination.droppableId,\n\t};\n\n\treturn result;\n};\n\n/**\n *\n * @param {Date} post_date\n * @param {string} droppableId\n * @param {boolean} overUnscheduled\n * @returns\n */\nexport const draggedPostDate = (post_date, droppableId, overUnscheduled) => {\n\tlet date, formatted;\n\n\tif (overUnscheduled === true) {\n\t\tformatted = format(post_date, dateFormat.dateTime);\n\t} else {\n\t\tdate = parseISO(droppableId);\n\n\t\tconst time = {\n\t\t\th: getHours(post_date),\n\t\t\tm: getMinutes(post_date),\n\t\t};\n\t\tdate = setHours(date, time.h);\n\t\tdate = setMinutes(date, time.m);\n\n\t\tformatted = format(date, dateFormat.dateTime);\n\t}\n\n\treturn { date, formatted };\n};\n","import { createContext } from \"react\";\nimport { wp } from \"./lib/utils\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tpostStatuses: {},\n};\n\nconst { defaultStatusColors } = wp;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUSES\":\n\t\t\tlet statuses = action.postStatuses;\n\n\t\t\t// Don't overwrite visibility, if set\n\t\t\tfor (let status in statuses) {\n\t\t\t\tstatuses[status].visible =\n\t\t\t\t\t\"visible\" in statuses[status]\n\t\t\t\t\t\t? statuses[status].visible\n\t\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: statuses,\n\t\t\t};\n\n\t\tcase \"TOGGLE_POST_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tvisible: !state.postStatuses[action.postStatus].visible,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUS_COLOR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"RESET_POST_STATUS_COLORS\":\n\t\t\tlet reset = state.postStatuses;\n\t\t\tlet statusKeys = Object.keys(state.postStatuses);\n\n\t\t\tfor (let status of statusKeys) {\n\t\t\t\treset[status].color = defaultStatusColors[status];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: { ...reset },\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon viewMode__input ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon viewMode__input ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today todayButton\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\nimport { dateFormat } from \"./lib/utils\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\tupdatePost: {\n\t\tupdateNow: false,\n\t\ttrash: false,\n\t\tpost: {},\n\t\tparams: {},\n\t\tnewIndex: null,\n\t\tunscheduled: false,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t\tscheduledPosts[index].post_date_day = format(\n\t\t\t\t\tscheduledPosts[index].post_date,\n\t\t\t\t\tdateFormat.date\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet scheduledByDate = groupBy(scheduledPosts, \"post_date_day\");\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start ? action.start : state.dateRange.start,\n\t\t\t\t\tend: action.end ? action.end : state.dateRange.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledByDate,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"MOVE\":\n\t\t\tlet scheduled = state.scheduled;\n\t\t\tlet unscheduled = state.unscheduled;\n\n\t\t\tif (action.sourceId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.source;\n\t\t\t} else {\n\t\t\t\tscheduled[action.sourceId] = action.source;\n\t\t\t}\n\n\t\t\tif (action.destinationId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.destination;\n\t\t\t} else {\n\t\t\t\tscheduled[action.destinationId] = action.destination;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled,\n\t\t\t\tscheduled,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\tpost: action.post,\n\t\t\t\t\tparams: action.params,\n\t\t\t\t\tnewIndex: action.newIndex,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\t...state.updatePost,\n\t\t\t\t\tupdateNow: false,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tpost: action.post,\n\t\t\t\t\tparams: action.params,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: initialPosts.updatePost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { useState, useEffect, useContext /* useRef */ } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst { routeBase, nonce } = wp;\n\nconst headers = DEBUG_MODE !== true ? { \"X-WP-Nonce\": nonce } : {};\n\n/**\n * Uses localStorage to save view-specific user options.\n *\n * @param {*} defaultValue The default option value\n * @param {string} key The option key\n * @returns {[state, setter]} The useState state and setter\n */\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Date} start The range's start\n * @param {Date} end The range's end\n * @returns {boolean} The current loading state\n */\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/posts/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'unscheduled' posts from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/posts/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves the set of post statuses from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchPostStatuses = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\ttype: \"SET_POST_STATUSES\",\n\t\t\t\t\tpostStatuses: data,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [viewOptionsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves all terms of a taxonomy\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns {boolean} The current loading state\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Object} ref The element's ref\n * @param {Function} end The handler function\n * @returns {void}\n */\nexport const useClickOutside = (ref, handler) => {\n\tuseEffect(() => {\n\t\tlet startedInside = false;\n\t\tlet startedWhenMounted = false;\n\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if `mousedown` or `touchstart` started inside ref element\n\t\t\tif (startedInside || !startedWhenMounted) return;\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) return;\n\n\t\t\thandler(event);\n\t\t};\n\n\t\tconst validateEventStart = (event) => {\n\t\t\tstartedWhenMounted = ref.current;\n\t\t\tstartedInside = ref.current && ref.current.contains(event.target);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", validateEventStart);\n\t\tdocument.addEventListener(\"touchstart\", validateEventStart);\n\t\tdocument.addEventListener(\"click\", listener);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"touchstart\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t};\n\t}, [ref, handler]);\n};\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { useFetchPostStatuses } from \"../lib/hooks\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Header({ handleTodayClick }) {\n\tuseFetchPostStatuses();\n\n\tconst { pluginUrl } = wp;\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">editorial calendar.io</h1>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"calendario__logo\"\n\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tcurrentIndex: null,\n\tnewIndex: null,\n\toverUnscheduled: false,\n};\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tcurrentIndex:\n\t\t\t\t\taction.currentIndex >= 0 ? action.currentIndex : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_CALENDAR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: initialDrag.newIndex,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { forwardRef, useContext, useState } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast, isSameDay } from \"date-fns\";\n\nimport DragContext from \"../DragContext\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tconst [dragOver, setDragOver] = useState(false);\n\tconst {\n\t\tdraggedPost: {\n\t\t\tpost: { post_date },\n\t\t\tisUnscheduled,\n\t\t},\n\t} = useContext(DragContext);\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tconst handleDragOver = () => {\n\t\tif (!isUnscheduled && isSameDay(day, post_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDragOver(true);\n\t};\n\n\tconst renderDay = () => {\n\t\tif (isToday(day)) {\n\t\t\tclasses.push(\"today\");\n\t\t}\n\n\t\tif (isPast(day) && !isToday(day)) {\n\t\t\tclasses.push(\"past\");\n\t\t}\n\n\t\tif (dragOver) {\n\t\t\tclasses.push(\"dragOver\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tref={isToday(day) ? ref : null}\n\t\t\t\tonDragOver={handleDragOver}\n\t\t\t\tonDragLeave={() => setDragOver(false)}\n\t\t\t\tonDrop={() => setDragOver(false)}\n\t\t\t>\n\t\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderDay();\n});\n\nexport default Day;\n","import React from \"react\";\n\nexport default function PostLink({ title, icon, onClick, target, children }) {\n\treturn (\n\t\t<button\n\t\t\ttitle={title}\n\t\t\tclassName={`icon postLink icon__${icon}`}\n\t\t\tonClick={onClick}\n\t\t\ttarget={target ? target : \"\"}\n\t\t\trel=\"noreferrer\"\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostLink from \"./common/PostLink\";\nimport { getPostList, moveItem, dayKey } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function PostLinks({ post, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { posts, postsDispatch } = useContext(PostsContext);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { post_date } = post;\n\t\tconst sourceId = dayKey(post_date);\n\t\tconst destinationId = \"unscheduled\";\n\n\t\tconst result = moveItem(\n\t\t\tgetPostList(sourceId, posts),\n\t\t\tgetPostList(destinationId, posts),\n\t\t\t{ droppableId: sourceId },\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tpost,\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { id, post_date } = post;\n\t\tconst sourceId = \"unscheduled\";\n\t\tconst source = getPostList(sourceId, posts);\n\t\tconst destinationId = dayKey(post_date);\n\t\tconst destination = getPostList(destinationId, posts);\n\n\t\tconst result = moveItem(\n\t\t\tsource,\n\t\t\tdestination,\n\t\t\t{\n\t\t\t\tdroppableId: sourceId,\n\t\t\t\tindex: source.findIndex((item) => item.id === id),\n\t\t\t},\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tpost,\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tpost,\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"postLinks\">\n\t\t\t<PostLink\n\t\t\t\ticon=\"view\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</PostLink>\n\t\t\t<PostLink\n\t\t\t\ticon=\"edit\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</PostLink>\n\t\t\t{/* <PostLink icon=\"view\" title=\"View Post\" onClick={() => window.open(view_link, \"_blank\")} target=\"_blank\">open_in_new</PostLink>\n\t\t\t<PostLink icon=\"view\" title=\"View Post\" onClick={() => window.open(view_link, \"_blank\")} target=\"_blank\">open_in_new</PostLink>\n\t\t\t<PostLink icon=\"view\" title=\"View Post\" onClick={() => window.open(view_link, \"_blank\")} target=\"_blank\">open_in_new</PostLink> */}\n\t\t\t{unscheduled ? (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"schedule\"\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</PostLink>\n\t\t\t) : (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"unschedule\"\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</PostLink>\n\t\t\t)}\n\t\t\t<PostLink icon=\"trash\" title=\"Trash this post\" onClick={trashPost}>\n\t\t\t\tdelete_forever\n\t\t\t</PostLink>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\n\tconst [color, setColor] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (postStatuses === undefined || isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColor(postStatuses[post.post_status].color);\n\n\t\treturn () => {\n\t\t\tsetColor(\"\");\n\t\t};\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\n\t\tif (\n\t\t\t(unscheduled === false &&\n\t\t\t\tpostStatuses[post.post_status].visible === true) ||\n\t\t\tunscheduled === true\n\t\t) {\n\t\t\tclasses.push(\"visible\");\n\t\t} else {\n\t\t\tclasses.push(\"hidden\");\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\tif ( isDragging ) {\n\t\t\tclasses.push(\"dragging\");\n\t\t}\n\n\t\treturn (\n\t\t\t<Draggable draggableId={`${post.id}`} index={index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\t\t\tdata-index={index}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<PostLinks\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t);\n\t};\n\n\treturn !isEmpty(postStatuses) ? renderPost() : null;\n}\n","import React, { useState, useMemo } from \"react\";\nimport Post from \"./Post\";\nimport { dateFormat } from \"../lib/utils\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nexport default function PostList({ renderPosts, className, date }) {\n\tconst [hovered, setHovered] = useState(false);\n\n\tconst droppableId =\n\t\tdate === false ? \"unscheduled\" : format(date, dateFormat.date);\n\n\tconst posts = () => {\n\t\tif (isEmpty(renderPosts)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn renderPosts.map((post, index) => (\n\t\t\t<Post\n\t\t\t\tpost={post}\n\t\t\t\tkey={post.id}\n\t\t\t\tindex={index}\n\t\t\t\tunscheduled={droppableId === \"unscheduled\" ? true : false}\n\t\t\t/>\n\t\t));\n\t};\n\n\tconst renderPostList = useMemo(posts, [renderPosts, droppableId]);\n\n\treturn (\n\t\t<Droppable droppableId={droppableId}>\n\t\t\t{(provided, snapshot) => (\n\t\t\t\t<ul\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\tclassName={`postList ${className}`}\n\t\t\t\t\tonMouseEnter={() => setHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setHovered(false)}\n\t\t\t\t\tstyle={hovered ? { marginBottom: 0 } : null}\n\t\t\t\t>\n\t\t\t\t\t{renderPostList}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</Droppable>\n\t);\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport DragContext from \"../DragContext\";\n\nexport default function DayPosts({ posts, date, title }) {\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\n\tconst renderPostList = () => {\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t{!isDragging ? (\n\t\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t) : null}\n\t\t\t\t<PostList\n\t\t\t\t\tclassName=\"dayPosts\"\n\t\t\t\t\tdate={date}\n\t\t\t\t\trenderPosts={posts}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day < viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { useClickOutside } from \"../lib/hooks\";\nimport { dateFormat, filterStatusList } from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nexport default function EditPost() {\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst {\n\t\tposts: { currentPost, taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(postStatuses, exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\n\t\treturn () => {\n\t\t\tsetAllowedStatuses({});\n\t\t};\n\t}, [date, post.unscheduled, postStatuses]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\n\t\treturn () => {\n\t\t\tsetDatePickerDisabled(false);\n\t\t};\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t};\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tpost,\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(\n\t\t\t\t\tnew Date(post.post_date),\n\t\t\t\t\tdateFormat.dateTime\n\t\t\t\t),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t\ttaxonomies: post.taxonomies,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tpost,\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t\teditPostDispatch({ type: \"CLEAR\" });\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\tuseClickOutside(node, closeModal);\n\n\treturn (\n\t\t<div className={`editPost ${editMode ? \"active\" : \"inactive\"}`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\t\thighlight_off\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"date_status\">\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__date\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">\n\t\t\t\t\t\t\t\t\t\t\tPost Date\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">\n\t\t\t\t\t\t\t\t\t\tPost Status\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"category\">\n\t\t\t\t\t\t\t\t\tCategories\n\t\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_tag\">\n\t\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\tpost.id === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Update\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst { blogUrl, trashUrl } = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t} = useContext(PostsContext);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\trenderPosts={unscheduled}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, {\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport { wp } from \"../../lib/utils\";\nimport { useClickOutside } from \"../../lib/hooks\";\n\nimport ViewContext from \"../../ViewContext\";\n\nimport { HexColorPicker } from \"react-colorful\";\n\nexport default function ColorPickerPopover({ color, name }) {\n\tconst { presetStatusColors } = wp;\n\tconst popover = useRef();\n\tconst previous = useRef(color);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [colorValue, setColorValue] = useState(\"\");\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (popover.current === undefined && !color) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorValue(color);\n\t}, [color]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tpopover.current === undefined ||\n\t\t\tpostStatuses[name].color === colorValue ||\n\t\t\tprevious.current === colorValue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_POST_STATUS_COLOR\",\n\t\t\tpostStatus: name,\n\t\t\tcolor: colorValue,\n\t\t});\n\n\t\tprevious.current = colorValue;\n\t}, [colorValue, name, postStatuses, viewOptionsDispatch]);\n\n\tconst close = useCallback(() => setIsOpen(false), []);\n\tuseClickOutside(popover, close);\n\n\treturn (\n\t\t<div className=\"picker\">\n\t\t\t<div\n\t\t\t\tclassName=\"swatch\"\n\t\t\t\tstyle={{ backgroundColor: colorValue }}\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t/>\n\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"popover\" ref={popover}>\n\t\t\t\t\t<HexColorPicker\n\t\t\t\t\t\tcolor={colorValue}\n\t\t\t\t\t\tonChange={setColorValue}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"picker__swatches\">\n\t\t\t\t\t\t{presetStatusColors === undefined\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: presetStatusColors.map((color) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"picker__swatch\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorValue(color)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ selected, toggleSelected, name }) {\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<button\n\t\t\t\tname={name}\n\t\t\t\tclassName={`dialog-button ${selected ? \"\" : \"disabled\"}`}\n\t\t\t\tonClick={toggleSelected}\n\t\t\t>\n\t\t\t\t{selected ? \"ON\" : \"OFF\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ColorPickerPopover from \"./common/ColorPickerPopover\";\nimport ToggleButton from \"./common/ToggleButton\";\nimport { wp, haveColorsChanged } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { routeBase } = wp;\n\tconst firstUpdate = useRef(true);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst keys = Object.keys(postStatuses);\n\tconst [colorsChanged, setColorsChanged] = useState(false);\n\n\t// Maintain state for color defaults\n\tuseEffect(() => {\n\t\tsetColorsChanged(haveColorsChanged(postStatuses));\n\t}, [postStatuses]);\n\n\t// Updates the server when the dispatch is updated (after debounce)\n\tuseEffect(() => {\n\t\tif (isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate.current === true) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// update server\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tlet colors = {};\n\t\t\tfor (let status in postStatuses) {\n\t\t\t\tcolors[status] = postStatuses[status].color;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(colors),\n\t\t\t\t});\n\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\tawait response.json();\n\n\t\t\t\t// do something else?\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [firstUpdate, routeBase, postStatuses]);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_POST_STATUS\",\n\t\t\tpostStatus: e.target.name,\n\t\t});\n\t};\n\n\tconst handleResetColors = () => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"RESET_POST_STATUS_COLORS\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((status, index) => {\n\t\t\t\t\tconst { color, name } = postStatuses[status];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${status}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ColorPickerPopover color={color} name={status} />\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\tpostStatuses[status].visible ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggleSelected={toggleStatus}\n\t\t\t\t\t\t\t\tname={status}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{colorsChanged ? (\n\t\t\t\t<button className=\"reset\" onClick={handleResetColors}>\n\t\t\t\t\tReset Colors\n\t\t\t\t</button>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\tconst { pluginUrl } = wp;\n\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Post Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"support\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul className=\"docs\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tHelp + Documentation (dummy link)\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSupport (dummy link)\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"rhdLogo\"\n\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, /*useState,*/ useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport {\n\tdateIsBetween,\n\tisDraggingUnscheduled,\n\tisOverUnscheduled,\n\treorderUnscheduled,\n\tgetPostList,\n\tmoveItem,\n\tfilterUnchangedParams,\n\twp,\n\tdraggedPostDate,\n\tDEBUG_MODE,\n} from \"./lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tconst { routeBase, user, nonce } = wp;\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\t// Send the update!\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tupdatePost: {\n\t\t\t\tupdateNow,\n\t\t\t\tpost,\n\t\t\t\tparams,\n\t\t\t\tunscheduled,\n\t\t\t\tnewIndex,\n\t\t\t\ttrash,\n\t\t\t},\n\t\t} = posts;\n\t\t\n\t\tif (updateNow === true && post.id !== \"undefined\") {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post, a post to trash, or an existing post,\n\t\t\t//   and set the proper URL\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (trash === true) {\n\t\t\t\turl += `trash/${post.id}/${user}`;\n\t\t\t} else {\n\t\t\t\tif (post.id === 0) {\n\t\t\t\t\turl += `new/${user}`;\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${post.id}/${user}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\t// TODO decide if `filterUnchangedParams` is even necessary\n\t\t\t\tparams: isEmpty(params)\n\t\t\t\t\t? {}\n\t\t\t\t\t: filterUnchangedParams(params, post),\n\t\t\t\tunscheduled,\n\t\t\t};\n\n\t\t\tif (newIndex !== null) {\n\t\t\t\tpostData.newIndex = newIndex;\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\t// setIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\trouteBase,\n\t\tuser,\n\t\tnonce,\n\t\tposts,\n\t\tdraggedPost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t]);\n\n\tconst handleTodayClick = () => {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragStart = (item) => {\n\t\tlet draggingUnscheduled = isDraggingUnscheduled(item);\n\n\t\tlet postList;\n\t\tif (draggingUnscheduled === true) {\n\t\t\tpostList = posts.unscheduled;\n\t\t} else {\n\t\t\tpostList = posts.scheduled[item.source.droppableId];\n\t\t}\n\n\t\tconst post = postList.find((p) => {\n\t\t\treturn Number(item.draggableId) === Number(p.id);\n\t\t});\n\t\tlet currentIndex = isDraggingUnscheduled(item)\n\t\t\t? item.source.draggableId\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggingUnscheduled,\n\t\t\tcurrentIndex,\n\t\t});\n\t};\n\n\tconst onDragUpdate = (item) => {\n\t\tif (item.destination === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(item);\n\n\t\t// only dispatch if an update is necessary\n\t\tif (overUnscheduled === true && draggedPost.overUnscheduled === false) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\tdraggedOver: item.destination.index,\n\t\t\t});\n\t\t} else if (\n\t\t\toverUnscheduled === false &&\n\t\t\tdraggedPost.overUnscheduled === true\n\t\t) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_CALENDAR\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragEnd = (item) => {\n\t\tconst { source, destination } = item;\n\t\tconst { post } = draggedPost;\n\n\t\t// dropped outside a list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled =\n\t\t\tdestination.droppableId === \"unscheduled\" ? true : false;\n\n\t\tconst post_date = draggedPostDate(\n\t\t\tpost.post_date,\n\t\t\tdestination.droppableId,\n\t\t\toverUnscheduled\n\t\t);\n\n\t\tif (overUnscheduled && source.droppableId === destination.droppableId) {\n\t\t\t// Reorder\n\t\t\tconst items = reorderUnscheduled(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\tposts: items,\n\t\t\t});\n\t\t} else if (source.droppableId !== destination.droppableId) {\n\t\t\t// Move\n\t\t\tconst result = moveItem(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tgetPostList(destination.droppableId, posts),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"MOVE\",\n\t\t\t\tsource: result[source.droppableId],\n\t\t\t\tdestination: result[destination.droppableId],\n\t\t\t\tsourceId: result.sourceId,\n\t\t\t\tdestinationId: result.destinationId,\n\t\t\t});\n\t\t}\n\n\t\t// Run the update\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tpost,\n\t\t\tunscheduled: overUnscheduled,\n\t\t\tparams: { post_date: post_date.formatted },\n\t\t\tnewIndex: overUnscheduled ? destination.index : null,\n\t\t});\n\n\t\t// If doing a post edit, save the post date\n\t\tif (posts.currentPost.id === post.id) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\tfield: \"post_date\",\n\t\t\t\tvalue: post_date.date,\n\t\t\t});\n\t\t}\n\n\t\tdraggedPostDispatch({ type: \"END\" });\n\t};\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\t\tonDragUpdate={onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}