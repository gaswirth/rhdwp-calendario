{"version":3,"sources":["components/FieldGroup.js","ViewContext.js","components/ViewOptions.js","components/Widget.js","lib/utils.js","components/StatusFilters.js","components/Header.js","components/CalendarListHeader.js","components/Day.js","PostsContext.js","DragContext.js","components/Post.js","lib/updatePost.js","components/PostList.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["FieldGroup","name","label","inlineLabel","children","className","htmlFor","ViewContext","createContext","viewReducer","state","action","type","viewMode","monthCount","viewRange","start","end","addMonths","subMonths","initialViewOptions","Date","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onChange","checked","min","Widget","title","nonce","window","rhdReactPlugin","routeBase","restBase","postStatuses","dateFormat","filterUnchangedParams","params","post","length","key","omit","StatusFilters","keys","Object","map","item","index","color","backgroundColor","style","Header","CalendarListHeader","onClick","format","Day","props","dayNumber","monthName","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","unscheduled","refetch","dateRange","scheduled","postsReducer","scheduledPosts","posts","forEach","unscheduledPosts","field","DragContext","dragReducer","isDragging","draggedFrom","originalUnscheduledOrder","updatedUnscheduledOrder","draggedTo","Set","arrayMove","initialDrag","Post","allowDrag","order","postsDispatch","draggedPost","draggedPostDispatch","useState","colors","setColors","date","setDate","useEffect","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","classes","push","isEmpty","join","data-index","draggable","isToday","isPast","onDragStart","onDragEnd","decode","scope","renderPost","initialUpdateState","updateNow","updateReducer","PostList","allowDrop","useReducer","updatePost","updatePostDispatch","url","postData","data","error","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","message","fetchData","handleDragOver","preventDefault","mouseY","pageY","offsetTop","listItems","childNodes","itemCount","handleDrop","listProps","onDragOver","onDrop","renderPostList","useFetchScheduledPosts","startDate","endDate","res","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","today","startOfToday","startOfWeek","endOfWeek","renderDaysHeaderRow","useCallback","days","i","addDays","renderDays","formattedDay","rows","day","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","dayIsToday","dayIsPast","renderEmpty","List","parseISO","endOfDay","initialEditPost","editMode","editPostReducer","newDate","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","exclude","isFuture","statusList","filtered","includes","filterStatusList","handleClickOutside","current","document","removeEventListener","addEventListener","handleInputChange","ref","onSubmit","post_excerpt","closeOnScroll","selected","disabled","status","image","href","edit_link","rel","src","alt","Main","UnscheduledDrafts","useFetchUnscheduledPosts","Sidebar","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","Provider","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","appAnchorElement","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2adcc8f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`sidebarInput fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import { createContext } from \"react\";\nimport { addMonths, subMonths } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\n// function viewRangeReducer(state, action) {\n// \tswitch (action.type) {\n// \t\tcase \"SET\":\n// \t\t\treturn {\n// \t\t\t\t...state,\n// \t\t\t\tstart: action.start,\n// \t\t\t\tend: action.end,\n// \t\t\t};\n\n// \t\t// case \"END\":\n// \t\t// \treturn {\n// \t\t// \t\t...state,\n// \t\t// \t\tend: action.end,\n// \t\t// \t};\n\n// \t\tcase \"NEXT_MONTH\":\n// \t\t\treturn {\n// \t\t\t\t...state,\n// \t\t\t\tstart: addMonths(state.start, 1),\n// \t\t\t\tend: addMonths(state.end, 1),\n// \t\t\t};\n\n// \t\tcase \"PREV_MONTH\":\n// \t\t\treturn {\n// \t\t\t\t...state,\n// \t\t\t\tstart: subMonths(state.start, 1),\n// \t\t\t\tend: subMonths(state.end, 1),\n// \t\t\t};\n\n// \t\tcase \"RESET\":\n// \t\t\treturn initialViewRange;\n\n// \t\tdefault:\n// \t\t\treturn state;\n// \t}\n// }\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE_OPTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tmonthCount: action.monthCount\n\t\t\t\t\t? action.monthCount\n\t\t\t\t\t: state.monthCount,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\t// TODO see if RESET_VIEW is used...\n\t\tcase \"RESET_VIEW\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: initialViewOptions.viewRange,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"calendar\",\n\tmonthCount: 1,\n\tviewRange: {\n\t\tstart: new Date(),\n\t\tend: new Date(),\n\t},\n};\n","import React, { useContext } from \"react\";\nimport FieldGroup from \"./FieldGroup\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode, monthCount },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleMonthCountChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: e.target.value,\n\t\t});\n\t};\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<FieldGroup name=\"viewMode\">\n\t\t\t\t<div className=\"options\">\n\t\t\t\t\t<label htmlFor=\"calendar\">Calendar</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\t\tonChange={handleViewModeChange}\n\t\t\t\t\t\tchecked={viewMode === \"calendar\"}\n\t\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"list\">List</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\t\tonChange={handleViewModeChange}\n\t\t\t\t\t\tchecked={viewMode === \"list\"}\n\t\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</FieldGroup>\n\t\t\t<FieldGroup\n\t\t\t\tname=\"monthCount\"\n\t\t\t\tlabel=\"Months to view\"\n\t\t\t\tinlineLabel={true}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin={1}\n\t\t\t\t\tvalue={monthCount}\n\t\t\t\t\tonChange={handleMonthCountChange}\n\t\t\t\t\tclassName=\"mini\"\n\t\t\t\t/>\n\t\t\t</FieldGroup>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t<h3 className=\"widgetTitle\">{title}</h3>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/Widget\";\n\nexport const nonce = window.rhdReactPlugin.nonce; // Live\n\nexport const routeBase = window.rhdReactPlugin.restBase; // Live\n// export const routeBase = \"http://localhost/wp-json/calendario/v1/posts\"; // Dev\n\nexport const postStatuses = window.rhdReactPlugin.postStatuses; // Live\n// export const postStatuses = { // Dev\n// \tpublish: {\n// \t\tname: \"Publish\",\n// \t\tbackgroundColor: \"cornflowerblue\",\n// \t\tcolor: \"white\",\n// \t},\n// \tdraft: {\n// \t\tname: \"Draft\",\n// \t\tbackgroundColor: \"silver\",\n// \t\tcolor: \"white\",\n// \t},\n// \tfuture: {\n// \t\tname: \"Future\",\n// \t\tbackgroundColor: \"lightseagreen\",\n// \t\tcolor: \"white\",\n// \t},\n// \tpending: {\n// \t\tname: \"Pending\",\n// \t\tbackgroundColor: \"lightcoral\",\n// \t\tcolor: \"white\",\n// \t},\n// \tprivate: {\n// \t\tname: \"Private\",\n// \t\tbackgroundColor: \"maroon\",\n// \t\tcolor: \"white\",\n// \t},\n// };\n\nexport const dateFormat = {\n\tday: \"d\",\n\t// date: \"MM-dd-yyyy\",\n\tdate: \"yyyy-MM-dd\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n *\n * @param {object} params  Key/value post parameters to update\n * @param {*} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (params[key] === post[key]) {\n\t\t\t\tparams = omit(params, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n","import React from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"dot\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport StatusFilters from \"./StatusFilters\";\n\nexport default function Header() {\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<h1 className=\"page-title\">Calendario II: The Datening</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<ViewOptions />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { format } from \"date-fns\";\nimport { useContext } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function CalendarListHeader({ start, end }) {\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\treturn (\n\t\t<div className=\"header row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"icon\"\n\t\t\t\t\tonClick={() => viewOptionsDispatch({ type: \"PREV_MONTH\" })}\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center\">\n\t\t\t\t<h3 className=\"viewTitle\">Scheduled Posts</h3>\n\t\t\t\t<p className=\"viewRange\">{`${format(\n\t\t\t\t\tstart,\n\t\t\t\t\tdateFormat.daylessDate\n\t\t\t\t)} \\u2014 ${format(end, dateFormat.daylessDate)}`}</p>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"col col__end\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\ttype: \"NEXT_MONTH\",\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<div className=\"icon\">chevron_right</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function Day(props) {\n\tconst { className, dayNumber, monthName, children } = props;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{dayNumber}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\nimport arrayMove from \"array-move\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t\toriginalUnscheduledOrder: action.originalUnscheduledOrder,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\tlet updatedUnscheduledOrder = state.originalUnscheduledOrder;\n\n\t\t\tif (state.draggedTo === false) {\n\t\t\t\t// for now, just add to end of list.\n\t\t\t\t// TODO: position before/after\n\t\t\t\tupdatedUnscheduledOrder = [\n\t\t\t\t\t...new Set([...state.originalUnscheduledOrder, state.post]),\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t// reordering\n\t\t\t\tlet draggedFrom = null;\n\n\t\t\t\tif (state.draggedFrom === false) {\n\t\t\t\t\tdraggedFrom = updatedUnscheduledOrder.length;\n\n\t\t\t\t\tupdatedUnscheduledOrder = [\n\t\t\t\t\t\t...new Set([\n\t\t\t\t\t\t\t...state.originalUnscheduledOrder,\n\t\t\t\t\t\t\tstate.post,\n\t\t\t\t\t\t]),\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tdraggedFrom = state.draggedFrom;\n\t\t\t\t}\n\n\t\t\t\tif (draggedFrom !== action.draggedTo) {\n\t\t\t\t\tupdatedUnscheduledOrder = arrayMove(\n\t\t\t\t\t\tupdatedUnscheduledOrder,\n\t\t\t\t\t\tdraggedFrom,\n\t\t\t\t\t\taction.draggedTo\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedTo,\n\t\t\t\tupdatedUnscheduledOrder: updatedUnscheduledOrder,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toriginalUnscheduledOrder: [],\n\tupdatedUnscheduledOrder: [],\n};\n","import React, { useContext, useEffect, /*useRef,*/ useState } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function Post({ post, index, allowDrag, order }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPost, draggedPostDispatch } = useContext(DragContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\t// const node = useRef();\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\t// useEffect(() => {\n\t// \tconst handleClickOutside = (e) => {\n\t// \t\t// TODO figure out how to include editPost component also -- currentPost getting unset before submit\n\t// \t\tif (node.current && node.current.contains(e.target)) {\n\t// \t\t\t// inside click\n\t// \t\t\treturn;\n\t// \t\t}\n\n\t// \t\t// outside click\n\t// \t\tpostsDispatch({\n\t// \t\t\ttype: \"UNSET_CURRENTPOST\",\n\t// \t\t});\n\t// \t};\n\n\t// \tif (!isEmpty(currentPost)) {\n\t// \t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t// \t} else {\n\t// \t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t// \t}\n\n\t// \treturn function cleanup() {\n\t// \t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t// \t};\n\t// }, [currentPost, postsDispatch]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t\toriginalUnscheduledOrder: order,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\tlet unscheduled =\n\t\t\te.target.classList.contains(\"unscheduledDrafts\") ||\n\t\t\te.target.parentNode.classList.contains(\"unscheduledDrafts\")\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled: unscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (draggedPost.isDragging) {\n\t\t\tif (\n\t\t\t\tdraggedPost.draggedTo === Number(index) &&\n\t\t\t\tdraggedPost.draggedTo !== draggedPost.draggedFrom\n\t\t\t) {\n\t\t\t\tclasses.push(\"dropArea\");\n\t\t\t}\n\n\t\t\tif (draggedPost.draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\t// ref={node}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","export const initialUpdateState = {\n\tupdateNow: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext, useEffect, useReducer } from \"react\";\nimport Post from \"./Post\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t\t\"X-WP-Nonce\": nonce,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag !== false) {\n\t\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\t\tlet draggedTo = e.target.dataset.index\n\t\t\t\t\t? Number(e.target.dataset.index)\n\t\t\t\t\t: false;\n\n\t\t\t\tif (draggedTo === false) {\n\t\t\t\t\tlet mouseY = e.pageY - e.currentTarget.offsetTop;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedTo = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedTo = itemCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedTo: draggedTo,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date:\n\t\t\t\t\t\tdate === false\n\t\t\t\t\t\t\t? format(post.post_date, dateFormat.date)\n\t\t\t\t\t\t\t: format(date, dateFormat.date),\n\t\t\t\t},\n\t\t\t\tunscheduled: date === false ? true : false,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<ul {...listProps}>\n\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\torder={posts}\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { format, isSameDay } from \"date-fns\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"X-WP-Nonce\": nonce,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [start, end, postsDispatch]);\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-WP-Nonce\": nonce,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [postsDispatch, refetch]);\n};\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({ posts, date, allowDrag, allowDrop, title }) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = <PostList {...listProps} />;\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<li className=\"listDay\">\n\t\t\t\t\t<h4 className=\"listDay__title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</li>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport CalendarListHeader from \"./CalendarListHeader\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport {\n\tformat,\n\tisPast,\n\tisToday,\n\taddDays,\n\taddMonths,\n\tstartOfWeek,\n\tendOfWeek,\n\tisFirstDayOfMonth,\n\tstartOfToday,\n} from \"date-fns\";\n\nimport { dateFormat } from \"../lib/utils\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar() {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: startOfWeek(today),\n\t\t\tend: endOfWeek(addMonths(today, monthCount)),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderCalendarHeader = () => {\n\t\treturn (\n\t\t\t<CalendarListHeader start={viewRange.start} end={viewRange.end} />\n\t\t);\n\t};\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet formattedDay;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\t\t\t\tconst dayIsToday = isToday(day);\n\t\t\t\tconst dayIsPast = isPast(day);\n\n\t\t\t\tformattedDay = format(day, dateFormat.day);\n\n\t\t\t\tvar classes = [];\n\t\t\t\tif (dayIsToday) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\n\t\t\t\tif (dayIsPast && !dayIsToday) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tclassName={`col cell ${classes.join(\" \")}`}\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tdayNumber={formattedDay}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled]);\n\n\treturn (\n\t\t<div className=\"view view__calendar\">\n\t\t\t{renderCalendarHeader()}\n\t\t\t{renderDaysHeaderRow()}\n\t\t\t{renderDays()}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport CalendarListHeader from \"./CalendarListHeader\";\nimport DayPosts from \"./DayPosts\";\nimport {\n\tformat,\n\taddMonths,\n\taddDays,\n\tendOfDay,\n\tparseISO,\n\tstartOfToday,\n} from \"date-fns\";\n\nimport { dateFormat } from \"../lib/utils\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List() {\n\tconst {\n\t\tposts: { scheduled, refetch, dateRange },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\t//TODO Maybe split this into a separate monthCount for list and calendar (currently shared value)?\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\t// Set the fetch range\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tconst renderCalendarHeader = () => {\n\t\treturn (\n\t\t\t<CalendarListHeader start={viewRange.start} end={viewRange.end} />\n\t\t);\n\t};\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = parseISO(dateRange.start);\n\n\t\tif (\n\t\t\tdateRange.end !== \"undefined\" &&\n\t\t\tdateRange.end !== null &&\n\t\t\tdateRange.end\n\t\t) {\n\t\t\twhile (endOfDay(day) <= endOfDay(new Date(dateRange.end))) {\n\t\t\t\tdays.push(\n\t\t\t\t\t<DayPosts\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\tallowDrop={true}\n\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\treturn (\n\t\t<div className=\"view view__list\">\n\t\t\t{renderCalendarHeader()}\n\t\t\t<div className=\"view__list__days\">\n\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n} from \"react\";\nimport FieldGroup from \"./FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"DATE_CHANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tpost_date: action.newDate,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\n// TODO Date/time display, add time picker\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn function cleanup() {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\t// Handle post updating\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${currentPost.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id && currentPost.id > 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t\t});\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn function cleanup() {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [currentPost, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(new Date(post.post_date), dateFormat.date),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst cancelHandler = () => editPostDispatch({ type: \"CLEAR\" });\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleStatusChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Post Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t{post.unscheduled === false ? (\n\t\t\t\t\t\t\t<FieldGroup name=\"post_date\" label=\"Post Date\">\n\t\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tcurrentPost.post_date &&\n\t\t\t\t\t\t\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\t\t\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\t\t\t\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<FieldGroup name=\"post_status\" label=\"Post Status\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\tonChange={handleStatusChange}\n\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\" label=\"Categories & Tags\">\n\t\t\t\t\t\t\t<p>Coming soon</p>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{decode(post.post_excerpt, { scope: \"strict\" })}\n\t\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\tvalue=\"Update\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Main() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t{viewMode === \"calendar\" ? <Calendar /> : <List />}\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<PostList\n\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\tdate={false}\n\t\t\tposts={unscheduled}\n\t\t\tallowDrag={true}\n\t\t/>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\"\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t{renderWidget(\n\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t<UnscheduledDrafts />\n\t\t\t)}\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, Profiler } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\tmonthCount: 1,\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tuseEffect(() => {\n\t\t// Update the context just initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: view.monthCount,\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t\tmonthCount: viewOptions.monthCount,\n\t\t});\n\t}, [setView, viewOptions.viewMode, viewOptions.monthCount]);\n\n\tfunction mainRenderCallback(\n\t\tid,\n\t\tphase,\n\t\tactualDuration,\n\t\tbaseDuration,\n\t\tstartTime,\n\t\tcommitTime,\n\t\tinteractions\n\t) {}\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Profiler id=\"Main\" onRender={mainRenderCallback}>\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Main />\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</Profiler>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// WP Dashboard admin rendering\nconst reactAppData = window.rhdReactPlugin || {};\nconst { appSelector } = reactAppData;\nconst appAnchorElement = document.querySelector(appSelector);\n\n// dev only\n// const appAnchorElement = document.getElementById(\"root\");\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}