{"version":3,"sources":["lib/utils.js","ViewContext.js","components/MainHeader.js","PostsContext.js","lib/hooks.js","svg/calendariologo.svg","components/Header.js","DragContext.js","components/Day.js","components/common/PostLink.js","components/PostLinks.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/common/Icon.js","components/EditPost.js","components/Main.js","components/common/DrawerHandle.js","components/common/Widget.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/common/ColorPickerPopover.js","components/common/ToggleButton.js","components/StatusFilters.js","components/ViewOptions.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["wp","window","rhdReactPlugin","dateFormat","dayKey","date","format","dateIsBetween","min","max","getTime","isDraggingUnscheduled","source","droppableId","getPostList","id","posts","unscheduled","scheduled","moveItem","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","isEmpty","splice","index","removed","destinationIndex","undefined","length","filterPostStatus","post_status","status","includes","sanitizeParamsForUpdate","params","key","Date","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","postStatuses","sidebarOpen","defaultStatusColors","viewReducer","state","action","type","startOfWeek","endOfWeek","newStart","newEnd","direction","addMonths","subMonths","statuses","visible","postStatus","color","reset","Object","keys","MainHeader","handleTodayClick","useContext","viewOptions","viewOptionsDispatch","useState","todayInRange","setTodayInRange","today","startOfToday","DateInput","forwardRef","ref","value","onClick","className","useEffect","startOfMonth","endOfMonth","addDays","e","preventDefault","title","disabled","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","target","document","selectsEnd","minDate","monthsShown","PostsContext","initialPosts","currentPost","post_title","post_date","updatePost","updateNow","trash","newIndex","refetch","dateRange","isUpdating","trashed","taxonomies","locale","postsReducer","scheduledPosts","forEach","post","post_date_day","scheduledByDate","groupBy","unscheduledPosts","sourceId","destinationId","name","taxonomy","terms","field","push","hasOwnProperty","isUnscheduled","item","filter","_desc","_g","routeBase","headers","nonce","useFetchScheduledPosts","postsDispatch","isLoading","setIsLoading","url","a","fetch","res","json","data","console","log","message","fetchData","useFetchTaxonomyTerms","useClickOutside","handler","startedInside","startedWhenMounted","listener","event","current","contains","validateEventStart","addEventListener","removeEventListener","_extends","assign","i","arguments","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCalendariologo","_ref","svgRef","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","d","ForwardRef","Header","useFetchPostStatuses","postsUrl","location","href","DragContext","initialDrag","isDragging","currentIndex","overUnscheduled","dragReducer","draggedOver","Day","day","monthName","children","dragOver","setDragOver","draggedPost","classes","isToday","isPast","join","getStyles","onDragOver","isSameDay","onDragLeave","onDrop","PostLink","icon","rel","PostLinks","edit_link","view_link","open","decode","result","findIndex","Post","setColor","animationRequestId","setAnimationRequestId","handleClick","classList","handleMouseEnter","element","timing","draw","duration","performance","now","requestAnimationFrame","time","progress","animateLinks","currentTarget","timeFraction","style","paddingBottom","handleMouseLeave","cancelAnimationFrame","handleMouseDown","snapshot","draggingOver","draggableId","isDragDisabled","innerRef","draggableProps","dragHandleProps","data-index","onMouseEnter","onMouseLeave","onMouseDown","backgroundColor","scope","replace","Loading","PostList","hovered","setHovered","droppableProps","placeholder","isDraggingOver","marginBottom","map","NewPostButton","DayPosts","renderList","renderPostList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","allowDrag","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","Icon","initialEditPost","editMode","ogPost","initialTaxFilter","category","post_tag","editPostReducer","term_id","parseInt","termList","slice","taxFilterReducer","EditPost","useReducer","editPost","editPostDispatch","taxFilter","taxFilterDispatch","node","useRef","initial","setDate","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","post_name","post_excerpt","image","post_taxonomies","slug","exclude","isFuture","statusList","filtered","omit","filterStatusList","closeModal","handleInputChange","handleTermCheckboxChange","closest","onSubmit","postLists","timeInputLabel","showTimeInput","checked","fontWeight","autoFocus","src","alt","toLowerCase","Main","DrawerHandle","toggle","Widget","widgetClass","widgetTitle","widgetClassLabel","AdminLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","ColorPickerPopover","presetStatusColors","popover","previous","colorValue","setColorValue","isOpen","setIsOpen","close","background","ToggleButton","toggleSelected","StatusFilters","firstUpdate","colorsChanged","setColorsChanged","currentStatusColors","isEqual","haveColorsChanged","colors","method","body","JSON","stringify","response","toggleStatus","ViewOptions","handleViewModeChange","Sidebar","pluginUrl","App","draggedPostDispatch","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","user","postData","sendUpdate","useUpdate","isOverUnscheduled","appClass","Provider","scroll","top","offsetTop","behavior","weekDiff","differenceInWeeks","addWeeks","onDragEnd","post_date_source","parseISO","h","getHours","m","getMinutes","setHours","setMinutes","draggedPostDestination","items","list","startIndex","endIndex","reorderUnscheduled","onDragStart","draggingUnscheduled","find","p","Number","onDragUpdate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","appAnchorElement","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a76661d0.chunk.js","sourcesContent":["// import Widget from \"../components/common/Widget\";\nimport { omit, find, isEmpty, isEqual } from \"lodash\";\nimport {\n\tformat,\n\tparseISO,\n\tgetHours,\n\tgetMinutes,\n\tsetHours,\n\tsetMinutes,\n} from \"date-fns\";\n\nexport const wp = {\n\t...window.rhdReactPlugin,\n};\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {Array} exclude keys to exclude.\n * @return {Object} The filtered postStatuses object.\n */\nexport function filterStatusList(statuses, exclude = []) {\n\tlet filtered = statuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in filtered) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Checks whether or not the user has customized the color palette.\n *\n * @param {Object} statuses\n * @returns {boolean}\n */\nexport function haveColorsChanged(statuses) {\n\tconst { defaultStatusColors } = wp;\n\tlet currentStatusColors = {};\n\tfor (const status in statuses) {\n\t\tcurrentStatusColors[status] = statuses[status].color;\n\t}\n\n\treturn !isEqual(defaultStatusColors, currentStatusColors);\n}\n\n/**\n * Retrieves a calendar day's key (format: yyyy-MM-dd)\n *\n * @param {Date}\n * @returns {string}\n */\nexport const dayKey = (date) => format(date, dateFormat.date);\n\n/**\n * Checks if a date is between 2 dates.\n *\n * @param {Date} date The target date\n * @param {Date} min Start of the range\n * @param {Date} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n\n/**\n * Determines if an item is being dragged is coming from the Unscheduled drafts area.\n *\n * @param {Post} item Dragged post\n * @param {string} item.source.droppableId The drop area ID\n * @returns {boolean} True if unscheduled, false otherwise\n */\nexport const isDraggingUnscheduled = ({ source: { droppableId } }) =>\n\tdroppableId === \"unscheduled\" ? true : false;\n\n/**\n * Retrieves a list of posts.\n *\n * @param {string} id\n * @param {Array|Object} posts All posts\n * @returns {Array} The posts list\n */\nexport const getPostList = (id, posts) => {\n\tlet list;\n\tif (id === \"unscheduled\") {\n\t\tlist = posts.unscheduled;\n\t} else {\n\t\tlist = posts.scheduled[id];\n\t}\n\n\treturn list;\n};\n\n/**\n *\n * @param {Object|Array} list The post list\n * @param {number} startIndex\n * @param {number} endIndex\n * @returns\n */\nexport const reorderUnscheduled = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n *\n * @param {Array} source The \"from\" post list\n * @param {Array} destination The \"to\" post list\n * @param {DroppableList} droppableSource\n * @param {DroppableList} droppableDestination\n * @returns {Object}\n */\nexport const moveItem = (\n\tsource,\n\tdestination,\n\tdroppableSource,\n\tdroppableDestination\n) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = !isEmpty(destination) ? Array.from(destination) : [];\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tlet destinationIndex =\n\t\tdroppableDestination.index !== undefined\n\t\t\t? droppableDestination.index\n\t\t\t: !isEmpty(destination)\n\t\t\t? destination.length\n\t\t\t: 0;\n\n\tdestClone.splice(destinationIndex, 0, removed);\n\n\tconst result = {\n\t\t[droppableSource.droppableId]: sourceClone,\n\t\t[droppableDestination.droppableId]: destClone,\n\t\tsourceId: droppableSource.droppableId,\n\t\tdestinationId: droppableDestination.droppableId,\n\t};\n\n\treturn result;\n};\n\n/**\n * Prepares the post_date for a dragged post's destination using\n * its droppableID.\n *\n * @param {Date} post_date\n * @param {string} droppableId\n * @returns {draggedPostDestination}\n */\nexport const draggedPostDestination = (post_date_source, droppableId) => {\n\tlet post_date = post_date_source;\n\n\tif (droppableId !== \"unscheduled\") {\n\t\tpost_date = parseISO(droppableId); // The new date\n\n\t\t// Conserve the existing date's time value\n\t\tconst time = {\n\t\t\th: getHours(post_date_source),\n\t\t\tm: getMinutes(post_date_source),\n\t\t};\n\t\tpost_date = setHours(post_date, time.h);\n\t\tpost_date = setMinutes(post_date, time.m);\n\t}\n\n\treturn post_date;\n};\n\n/**\n * Converts non-allowed unscheduled post statuses to \"draft\"\n *\n * @param {string} post_status\n * @param {boolean} unscheduled\n * @returns {string} The filtered post status\n */\nexport function filterPostStatus(post_status, unscheduled) {\n\tlet allowedUnscheduledStatuses = [\"draft\", \"private\", \"pending\"];\n\tlet status = post_status;\n\n\tif (unscheduled === true) {\n\t\tstatus = allowedUnscheduledStatuses.includes(status) ? status : \"draft\";\n\t}\n\n\treturn status;\n}\n\n/**\n * Strips a slug from a permalink\n *\n * @param {string} url The permalink\n * @param {string} slug The post slug\n * @returns {string} The filtered URL\n */\nexport const stripPermalinkSlug = (url) => {\n\t// Remove trailing slash, if necessary\n\tif (url.substr(-1) === \"/\") {\n\t\turl = url.slice(0, -1);\n\t}\n\n\tlet parts = url.split(\"/\");\n\tparts.pop();\n\n\treturn `${parts.join(\"/\")}/`;\n};\n\n/**\n * Sanitizes post parameters for sending to the server\n *\n * @param {Object} params The post parameters\n * @returns {Object} The sanitized post parameters\n */\nexport function sanitizeParamsForUpdate(params) {\n\tfor (let key in params) {\n\t\tswitch (key) {\n\t\t\tcase \"post_date\":\n\t\t\t\tif (params[key] instanceof Date) {\n\t\t\t\t\tparams[key] = format(params[key], dateFormat.dateTime);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n *\n * @param {int} id\n * @param {Array} scheduled Scheduled posts, keyed by day\n * @param {Array} unscheduled Unscheduled posts\n * @returns {string|null} The post's droppableId, or null if not found\n */\nexport function getPostSourceDroppableId(id, scheduled, unscheduled) {\n\tlet droppableId = null;\n\tlet found = find(unscheduled, { id: id });\n\n\tif (found) {\n\t\tdroppableId = \"unscheduled\";\n\t} else {\n\t\tfor (let key in scheduled) {\n\t\t\tfound = find(scheduled[key], { id: id });\n\t\t\tif (found) {\n\t\t\t\tdroppableId = dayKey(found.post_date);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn droppableId;\n}\n","import { createContext } from \"react\";\nimport { wp } from \"./lib/utils\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tpostStatuses: {},\n\tsidebarOpen: true,\n};\n\nconst { defaultStatusColors } = wp;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_VIEW_MODE\": {\n\t\t\tconst { viewMode } = action;\n\t\t\tconst {\n\t\t\t\tviewRange: { start, end },\n\t\t\t} = state;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: viewMode === \"calendar\" ? startOfWeek(start) : start,\n\t\t\t\t\tend: viewMode === \"calendar\" ? endOfWeek(end) : end,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"SET_RANGE\": {\n\t\t\tconst { viewMode, viewRange } = state;\n\t\t\tconst start = action.start ? action.start : viewRange.start;\n\t\t\tconst end = action.end ? action.end : viewRange.end;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: viewMode === \"list\" ? start : startOfWeek(start),\n\t\t\t\t\tend: viewMode === \"list\" ? end : endOfWeek(end),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"CHANGE_MONTH\": {\n\t\t\tconst { viewMode } = state;\n\t\t\tconst { direction } = action;\n\t\t\tlet newStart, newEnd;\n\n\t\t\tif (direction === \"next\") {\n\t\t\t\tnewStart = addMonths(state.viewRange.start, 1);\n\t\t\t\tnewEnd = addMonths(state.viewRange.end, 1);\n\t\t\t} else if (direction === \"previous\") {\n\t\t\t\tnewStart = subMonths(state.viewRange.start, 1);\n\t\t\t\tnewEnd = subMonths(state.viewRange.end, 1);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart:\n\t\t\t\t\t\tviewMode === \"list\" ? newStart : startOfWeek(newStart),\n\t\t\t\t\tend: viewMode === \"list\" ? newEnd : endOfWeek(newEnd),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"SET_POST_STATUSES\": {\n\t\t\tlet statuses = action.postStatuses;\n\n\t\t\t// Don't overwrite visibility, if set\n\t\t\tfor (let status in statuses) {\n\t\t\t\tstatuses[status].visible =\n\t\t\t\t\t\"visible\" in statuses[status]\n\t\t\t\t\t\t? statuses[status].visible\n\t\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: statuses,\n\t\t\t};\n\t\t}\n\n\t\tcase \"TOGGLE_POST_STATUS\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tvisible: !state.postStatuses[action.postStatus].visible,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"SET_POST_STATUS_COLOR\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"RESET_POST_STATUS_COLORS\": {\n\t\t\tlet reset = state.postStatuses;\n\t\t\tconst statusKeys = Object.keys(state.postStatuses);\n\n\t\t\tfor (let status of statusKeys) {\n\t\t\t\treset[status].color = defaultStatusColors[status];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: { ...reset },\n\t\t\t};\n\t\t}\n\n\t\tcase \"TOGGLE_SIDEBAR\": {\n\t\t\tconst { sidebarOpen } = state;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsidebarOpen: !sidebarOpen,\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","import { forwardRef, useContext, useEffect, useState } from \"react\";\n// import ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\n// import PostsContext from \"../PostsContext\";\nimport { dateFormat, dateIsBetween } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\t// const { postsDispatch } = useContext(PostsContext);\n\tconst [todayInRange, setTodayInRange] = useState(true);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\tconst { start, end } = viewRange;\n\t\tif (start !== null && end !== null) {\n\t\t\tsetTodayInRange(dateIsBetween(new Date(), start, end));\n\t\t}\n\t}, [viewRange]);\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"CHANGE_MONTH\", direction: \"next\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"CHANGE_MONTH\", direction: \"previous\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarHeaderControls\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon control dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"viewControl\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"today control todayButton\"\n\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\tdisabled={todayInRange}\n\t\t\t\t>\n\t\t\t\t\tToday\n\t\t\t\t</button>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\t\t\t\t\tstart: date,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\t\t\t\t\tend: date,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon control dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\nimport { dateFormat, dayKey } from \"./lib/utils\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\tupdatePost: {\n\t\tupdateNow: false,\n\t\ttrash: false,\n\t\tid: null,\n\t\tparams: {},\n\t\tnewIndex: null,\n\t\tunscheduled: false,\n\t},\n\trefetch: false, // Toggle value to trigger refetch\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tisUpdating: null,\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\": {\n\t\t\tlet { posts: scheduledPosts } = action;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t\tscheduledPosts[index].post_date_day = format(\n\t\t\t\t\tscheduledPosts[index].post_date,\n\t\t\t\t\tdateFormat.date\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet scheduledByDate = groupBy(scheduledPosts, \"post_date_day\");\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start ? action.start : state.dateRange.start,\n\t\t\t\t\tend: action.end ? action.end : state.dateRange.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledByDate,\n\t\t\t};\n\t\t}\n\n\t\tcase \"SET_UNSCHEDULED\": {\n\t\t\tlet { posts: unscheduledPosts } = action;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\t\t}\n\n\t\tcase \"MOVE_POST\": {\n\t\t\t//TODO kill this and let UPDATE_POST handle\n\t\t\tlet { scheduled, unscheduled } = state;\n\t\t\tconst { source, sourceId, destination, destinationId } = action;\n\n\t\t\tif (action.sourceId === \"unscheduled\") {\n\t\t\t\tunscheduled = source;\n\t\t\t} else {\n\t\t\t\tscheduled[sourceId] = source;\n\t\t\t}\n\n\t\t\tif (destinationId === \"unscheduled\") {\n\t\t\t\tunscheduled = destination;\n\t\t\t} else {\n\t\t\t\tscheduled[destinationId] = destination;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled,\n\t\t\t\tscheduled,\n\t\t\t};\n\t\t}\n\n\t\tcase \"SET_TAXONOMY_TERMS\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"SET_CURRENTPOST\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"REFETCH\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\t\t}\n\n\t\tcase \"CREATE_NEW_POST\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tpost_status: \"draft\",\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"UNSET_CURRENTPOST\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\t\t}\n\n\t\tcase \"PREPARE_UPDATE\": {\n\t\t\tconst { id, params, newIndex, unscheduled } = action;\n\n\t\t\tconst index =\n\t\t\t\tunscheduled && newIndex === -1 ? unscheduled.length : newIndex;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\tid,\n\t\t\t\t\tparams,\n\t\t\t\t\tunscheduled,\n\t\t\t\t\tnewIndex: index,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"UPDATE_INIT\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\t...state.updatePost,\n\t\t\t\t\tupdateNow: false,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase \"ADD_POST\": {\n\t\t\tconst { droppableId } = action;\n\t\t\tconst {\n\t\t\t\tupdatePost: { id, params },\n\t\t\t} = state;\n\t\t\tlet { scheduled, unscheduled } = state;\n\n\t\t\tconst post = {\n\t\t\t\tid,\n\t\t\t\t...params,\n\t\t\t};\n\n\t\t\tif (droppableId === \"unscheduled\") {\n\t\t\t\tunscheduled.push(post);\n\t\t\t} else {\n\t\t\t\tif (scheduled.hasOwnProperty(droppableId)) {\n\t\t\t\t\tscheduled[droppableId].push(post);\n\t\t\t\t} else {\n\t\t\t\t\tscheduled = {\n\t\t\t\t\t\t...scheduled,\n\t\t\t\t\t\t[droppableId]: [post],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduled,\n\t\t\t\tunscheduled,\n\t\t\t\tisUpdating: droppableId,\n\t\t\t};\n\t\t}\n\n\t\tcase \"UPDATE_POST\": {\n\t\t\tconst { droppableId, unscheduled: isUnscheduled } = action;\n\t\t\tlet {\n\t\t\t\tupdatePost: { id, params },\n\t\t\t\tscheduled,\n\t\t\t\tunscheduled,\n\t\t\t} = state;\n\n\t\t\t// Cast the date as a Date\n\t\t\tif (typeof params.post_date === \"string\") {\n\t\t\t\tparams.post_date = new Date(params.post_date);\n\t\t\t}\n\n\t\t\tif (isUnscheduled) {\n\t\t\t\tunscheduled.forEach((item, index) => {\n\t\t\t\t\tif (item.id === id) {\n\t\t\t\t\t\tunscheduled[index] = {\n\t\t\t\t\t\t\t...unscheduled[index],\n\t\t\t\t\t\t\t...params,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst key = dayKey(params.post_date);\n\t\t\t\tscheduled[key].forEach((item, index) => {\n\t\t\t\t\tif (item.id === id) {\n\t\t\t\t\t\tscheduled[key][index] = {\n\t\t\t\t\t\t\t...scheduled[key][index],\n\t\t\t\t\t\t\t...params,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduled,\n\t\t\t\tunscheduled,\n\t\t\t\tisUpdating: droppableId,\n\t\t\t};\n\t\t}\n\n\t\tcase \"REMOVE_POST\": {\n\t\t\tconst { droppableId } = action;\n\t\t\tconst {\n\t\t\t\tupdatePost: { id },\n\t\t\t} = state;\n\t\t\tlet { scheduled, unscheduled } = state;\n\n\t\t\tif (droppableId === \"unscheduled\") {\n\t\t\t\tunscheduled = unscheduled.filter((item) => item.id !== id);\n\t\t\t} else {\n\t\t\t\tscheduled[droppableId] = scheduled[droppableId].filter(\n\t\t\t\t\t(item) => item.id !== id\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscheduled,\n\t\t\t\tunscheduled,\n\t\t\t\tisUpdating: droppableId,\n\t\t\t};\n\t\t}\n\n\t\tcase \"UPDATE_SUCCESS\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisUpdating: initialPosts.isUpdating,\n\t\t\t\tupdatePost: initialPosts.updatePost,\n\t\t\t};\n\t\t}\n\n\t\tcase \"UPDATE_ERROR\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisUpdating: initialPosts.isUpdating,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t\tupdatePost: initialPosts.updatePost,\n\t\t\t};\n\t\t}\n\n\t\tcase \"SEND_TO_TRASH\": {\n\t\t\tconst { id, params, unscheduled } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tid,\n\t\t\t\t\tparams,\n\t\t\t\t\tunscheduled,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","import { useState, useEffect, useContext /* useRef */ } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { sanitizeParamsForUpdate } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst { routeBase, nonce } = wp;\nconst headers = { \"X-WP-Nonce\": nonce, \"Content-Type\": \"application/json\" };\n\n/**\n * Uses localStorage to save view-specific user options.\n *\n * @param {*} defaultValue The default option value\n * @param {string} key The option key\n * @returns {[state, setter]} The useState state and setter\n */\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Date} start The range's start\n * @param {Date} end The range's end\n * @returns {boolean} The current loading state\n */\n// TODO pass in context\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/posts/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'unscheduled' posts from the server\n *\n * @returns {boolean} The current loading state\n */\n// TODO pass in context\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/posts/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves the set of post statuses from the server\n *\n * @returns {boolean} The current loading state\n */\n// TODO pass in context\nexport const useFetchPostStatuses = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\ttype: \"SET_POST_STATUSES\",\n\t\t\t\t\tpostStatuses: data,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [viewOptionsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves all terms of a taxonomy\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns {boolean} The current loading state\n */\n// TODO pass in context\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n *\n * @param {Object} posts PostsContext\n * @param {Function} postsDispatch PostsContext\n * @param {Object} draggedPost DragContext\n * @param {Function} draggedPostDispatch DragContext\n * @param {number} user User ID\n * @returns {void}\n */\nexport const useUpdate = (\n\tposts,\n\tpostsDispatch,\n\tdraggedPost,\n\tdraggedPostDispatch,\n\tuser\n) => {\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tupdatePost: { updateNow, id, params, unscheduled, newIndex, trash },\n\t\t} = posts;\n\n\t\tif (updateNow === true && id !== undefined) {\n\t\t\tconst droppableId =\n\t\t\t\tunscheduled === true\n\t\t\t\t\t? \"unscheduled\"\n\t\t\t\t\t: format(new Date(params.post_date), dateFormat.date);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATE_INIT\",\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Check if this is a new post, a post to trash, or an existing post,\n\t\t\t * and set the proper URL\n\t\t\t */\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (trash === true) {\n\t\t\t\turl += `trash/${id}/${user}`;\n\t\t\t\tpostsDispatch({ type: \"REMOVE_POST\", droppableId });\n\t\t\t} else if (id === 0) {\n\t\t\t\turl += `new/${user}`;\n\t\t\t\tpostsDispatch({ type: \"ADD_POST\", droppableId });\n\t\t\t} else {\n\t\t\t\turl += `update/${id}/${user}`;\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_POST\",\n\t\t\t\t\tdroppableId,\n\t\t\t\t\tunscheduled,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: sanitizeParamsForUpdate(params),\n\t\t\t\tunscheduled,\n\t\t\t};\n\n\t\t\tif (newIndex !== null) {\n\t\t\t\tpostData.newIndex = newIndex;\n\t\t\t}\n\n\t\t\tconst sendUpdate = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\tif (data && data > 0) {\n\t\t\t\t\t\tpostsDispatch({ type: \"UPDATE_SUCCESS\", id, params });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\t\ttype: \"UPDATE_ERROR\",\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tsendUpdate();\n\t\t}\n\t}, [user, posts, draggedPost, draggedPostDispatch, postsDispatch]);\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Object} ref The element's ref\n * @param {Function} end The handler function\n * @returns {void}\n */\nexport const useClickOutside = (ref, handler) => {\n\tuseEffect(() => {\n\t\tlet startedInside = false;\n\t\tlet startedWhenMounted = false;\n\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if `mousedown` or `touchstart` started inside ref element\n\t\t\tif (startedInside || !startedWhenMounted) return;\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) return;\n\n\t\t\thandler(event);\n\t\t};\n\n\t\tconst validateEventStart = (event) => {\n\t\t\tstartedWhenMounted = ref.current;\n\t\t\tstartedInside = ref.current && ref.current.contains(event.target);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", validateEventStart);\n\t\tdocument.addEventListener(\"touchstart\", validateEventStart);\n\t\tdocument.addEventListener(\"click\", listener);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"touchstart\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t};\n\t}, [ref, handler]);\n};\n","var _desc, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCalendariologo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"707px\",\n    height: \"100px\",\n    viewBox: \"0 0 707 257\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Group 3\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#000000\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.9355469,113.820312 C58.6894019,119.587268 48.5182734,121.847656 39.671875,121.847656 C28.1379632,121.847656 18.773799,117.956419 11.5791016,110.173828 C4.38440413,102.391237 0.787109375,92.425191 0.787109375,80.2753906 C0.787109375,68.5175193 4.18844255,58.5514732 10.9912109,50.3769531 C17.7939793,42.2024331 26.8781984,38.1152344 38.2441406,38.1152344 C48.322316,38.1152344 56.3847354,41.6145483 62.4316406,48.6132812 C68.4785459,55.6120142 71.5019531,64.9901756 71.5019531,76.7480469 L71.5019531,83.3828125 L27.6435547,83.3828125 C27.6435547,83.3828125 26.0322266,91.9637411 29.9951172,97.0722656 C33.9580078,102.18079 39.537122,104.143681 46.1113281,102.953125 C56.5458984,101.063477 59.1884766,98.6523437 62.4316406,97.0722656 L68.9355469,113.820312 Z M48.1542969,69.1894531 L48.1542969,66.5019531 C48.1542969,62.862612 47.2024835,59.7552212 45.2988281,57.1796875 C43.3951728,54.6041538 41.0156393,53.3164062 38.1601562,53.3164062 C34.8007645,53.3164062 32.2112721,54.6321483 30.3916016,57.2636719 C28.571931,59.8951954 27.5221368,63.8704161 27.2421875,69.1894531 L48.1542969,69.1894531 Z M126.175781,2.84179688 L152.966797,2.84179688 L152.966797,120 L129.367188,120 L126.931641,110.677734 C124.412097,114.373065 121.668635,117.158519 118.701172,119.03418 C115.733709,120.90984 112.542335,121.847656 109.126953,121.847656 C101.008423,121.847656 94.4017182,117.690471 89.3066406,109.375977 C84.2115631,101.061482 81.6640625,91.4453671 81.6640625,80.5273438 C81.6640625,69.1614015 84.3935274,59.2513444 89.8525391,50.796875 C95.3115507,42.3424056 102.268187,38.1152344 110.722656,38.1152344 C113.29819,38.1152344 115.873685,38.6611274 118.449219,39.7529297 C121.024752,40.844732 123.600248,42.5104055 126.175781,44.75 L126.175781,2.84179688 Z M126.175781,64.8222656 C124.999994,63.2545495 123.79623,62.07878 122.564453,61.2949219 C121.332676,60.5110638 120.044929,60.1191406 118.701172,60.1191406 C115.621729,60.1191406 113.158212,61.8827949 111.310547,65.4101562 C109.462881,68.9375176 108.539062,73.6126011 108.539062,79.4355469 C108.539062,85.0345332 109.42089,89.6116359 111.18457,93.1669922 C112.948251,96.7223485 115.285793,98.5 118.197266,98.5 C120.716809,98.5 122.676425,97.1982552 124.076172,94.5947266 C125.475918,91.9911979 126.175781,88.8698099 126.175781,85.2304688 L126.175781,64.8222656 Z M183.369141,0.91015625 C187.008482,0.91015625 190.311834,2.2258983 193.279297,4.85742188 C196.24676,7.48894545 197.730469,10.9042759 197.730469,15.1035156 C197.730469,19.0787959 196.316746,22.4381373 193.489258,25.1816406 C190.66177,27.9251439 187.288431,29.296875 183.369141,29.296875 C179.33787,29.296875 175.936537,27.8831522 173.165039,25.0556641 C170.393541,22.228176 169.007812,18.8828318 169.007812,15.0195312 C169.007812,11.1002408 170.435533,7.76889393 173.291016,5.02539062 C176.146499,2.28188732 179.50584,0.91015625 183.369141,0.91015625 Z M169.931641,39.9628906 L196.554688,39.9628906 L196.554688,120 L169.931641,120 L169.931641,39.9628906 Z M221.078125,15.859375 L243.25,15.859375 L243.25,39.9628906 L256.519531,39.9628906 L256.519531,59.53125 L244.425781,59.53125 L244.425781,92.2851562 C244.425781,97.3242439 246.441386,99.84375 250.472656,99.84375 C252.432301,99.84375 254.447906,99.0878982 256.519531,97.5761719 L256.519531,119.244141 C251.592423,120.979826 246.581406,121.847656 241.486328,121.847656 C233.199828,121.847656 227.111022,119.874043 223.219727,115.926758 C219.328431,111.979472 217.382812,105.862672 217.382812,97.5761719 L217.382812,59.53125 L207.556641,59.53125 L207.556641,39.9628906 L218.894531,39.9628906 L221.078125,15.859375 Z M302.878906,38.1152344 C313.908909,38.1152344 322.951137,41.7545209 330.005859,49.0332031 C337.060582,56.3118854 340.587891,66.5018876 340.587891,79.6035156 C340.587891,92.0332653 337.200555,102.181276 330.425781,110.047852 C323.651008,117.914427 314.440813,121.847656 302.794922,121.847656 C291.14903,121.847656 282.078809,117.956419 275.583984,110.173828 C269.08916,102.391237 265.841797,92.48118 265.841797,80.4433594 C265.841797,67.90163 269.24313,57.7116277 276.045898,49.8730469 C282.848667,42.034466 291.792913,38.1152344 302.878906,38.1152344 Z M303.130859,58.6074219 C299.827457,58.6074219 297.335946,60.3850734 295.65625,63.9404297 C293.976554,67.495786 293.136719,72.8287405 293.136719,79.9394531 C293.136719,86.938186 293.962557,92.2011542 295.614258,95.7285156 C297.265959,99.255877 299.743473,101.019531 303.046875,101.019531 C306.406267,101.019531 308.911776,99.2698743 310.563477,95.7705078 C312.215178,92.2711414 313.041016,87.0221704 313.041016,80.0234375 C313.041016,72.856735 312.215178,67.495786 310.563477,63.9404297 C308.911776,60.3850734 306.434261,58.6074219 303.130859,58.6074219 Z M379.304688,50.5449219 C380.928394,46.401672 382.916004,43.2942812 385.267578,41.2226562 C387.619152,39.1510313 390.362615,38.1152344 393.498047,38.1152344 C395.513682,38.1152344 397.669259,38.7311136 399.964844,39.9628906 L399.964844,65.1582031 C397.22134,63.8144464 394.729829,63.1425781 392.490234,63.1425781 C389.074853,63.1425781 386.247407,64.5283065 384.007812,67.2998047 C381.768218,70.0713029 380.648438,73.6126087 380.648438,77.9238281 L380.648438,120 L353.605469,120 L353.605469,39.9628906 L376.617188,39.9628906 L379.304688,50.5449219 Z M423.396484,0.91015625 C427.035825,0.91015625 430.339178,2.2258983 433.306641,4.85742188 C436.274103,7.48894545 437.757812,10.9042759 437.757812,15.1035156 C437.757812,19.0787959 436.34409,22.4381373 433.516602,25.1816406 C430.689113,27.9251439 427.315775,29.296875 423.396484,29.296875 C419.365214,29.296875 415.963881,27.8831522 413.192383,25.0556641 C410.420885,22.228176 409.035156,18.8828318 409.035156,15.0195312 C409.035156,11.1002408 410.462876,7.76889393 413.318359,5.02539062 C416.173842,2.28188732 419.533184,0.91015625 423.396484,0.91015625 Z M409.958984,39.9628906 L436.582031,39.9628906 L436.582031,120 L409.958984,120 L409.958984,39.9628906 Z M457.998047,44.5820312 C467.124395,40.2708118 475.774699,38.1152344 483.949219,38.1152344 C489.996124,38.1152344 495.273089,39.1790258 499.780273,41.3066406 C504.287457,43.4342554 508.080714,46.8775804 511.160156,51.6367188 C514.239599,56.3958571 515.779297,62.4706662 515.779297,69.8613281 L515.779297,96.7363281 C515.779297,104.518919 517.374984,112.273399 520.566406,120 L493.859375,120 C492.851557,117.760405 492.039717,115.212905 491.423828,112.357422 C488.792305,115.492854 486.034845,117.85839 483.151367,119.454102 C480.267889,121.049813 477.230485,121.847656 474.039062,121.847656 C467.824188,121.847656 462.267277,119.370142 457.368164,114.415039 C452.469051,109.459936 450.019531,103.427119 450.019531,96.3164062 C450.019531,80.3033054 463.820826,70.5332208 491.423828,67.0058594 C490.80794,64.0943865 489.296236,61.9108146 486.888672,60.4550781 C484.481108,58.9993417 481.177755,58.2714844 476.978516,58.2714844 C470.819631,58.2714844 464.492871,60.7909904 457.998047,65.8300781 L457.998047,44.5820312 Z M491.423828,80.2753906 C480.225855,81.2832082 474.626953,85.4543904 474.626953,92.7890625 C474.626953,95.5325658 475.466788,97.8561103 477.146484,99.7597656 C478.82618,101.663421 480.813791,102.615234 483.109375,102.615234 C485.796888,102.615234 487.854485,101.467459 489.282227,99.171875 C490.709968,96.8762906 491.423828,93.9928559 491.423828,90.5214844 L491.423828,80.2753906 Z M531.652344,2.84179688 L558.359375,2.84179688 L558.359375,120 L531.652344,120 L531.652344,2.84179688 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.3398438,248.597656 C55.9335938,256.847656 44.5117465,256.847656 38.96875,256.847656 C29.2265138,256.847656 21.0101246,252.830444 14.3193359,244.795898 C7.62854728,236.761353 4.28320312,226.865293 4.28320312,215.107422 C4.28320312,203.40554 7.71253081,193.481486 14.5712891,185.334961 C21.4300473,177.188436 30.0103652,173.115234 40.3125,173.115234 C44.8476789,173.115234 55.9335938,175.261719 63.3398438,181.679688 L55.9335938,200.578125 C52.2942526,197.946601 49.0468893,196.630859 46.1914063,196.630859 C42.1041462,196.630859 38.6608213,198.31053 35.8613281,201.669922 C33.061835,205.029314 31.6621094,209.284479 31.6621094,214.435547 C31.6621094,219.586614 33.0758322,223.911766 35.9033203,227.411133 C38.7308084,230.910499 42.048158,232.660156 45.8554688,232.660156 C49.1588707,232.660156 52.5182121,231.176447 55.9335938,228.208984 L63.3398438,248.597656 Z M78.3820313,179.582031 C87.508379,175.270812 96.1586831,173.115234 104.333203,173.115234 C110.380108,173.115234 115.657074,174.179026 120.164258,176.306641 C124.671442,178.434255 128.464698,181.87758 131.544141,186.636719 C134.623583,191.395857 136.163281,197.470666 136.163281,204.861328 L136.163281,231.736328 C136.163281,239.518919 137.758968,247.273399 140.950391,255 L114.243359,255 C113.235542,252.760405 112.423701,250.212905 111.807813,247.357422 C109.176289,250.492854 106.41883,252.85839 103.535352,254.454102 C100.651874,256.049813 97.6144691,256.847656 94.4230469,256.847656 C88.2081721,256.847656 82.6512615,254.370142 77.7521484,249.415039 C72.8530354,244.459936 70.4035156,238.427119 70.4035156,231.316406 C70.4035156,215.303305 84.2048099,205.533221 111.807813,202.005859 C111.191924,199.094386 109.68022,196.910815 107.272656,195.455078 C104.865092,193.999342 101.56174,193.271484 97.3625,193.271484 C91.2036151,193.271484 84.8768554,195.79099 78.3820313,200.830078 L78.3820313,179.582031 Z M111.807813,215.275391 C100.60984,216.283208 95.0109375,220.45439 95.0109375,227.789062 C95.0109375,230.532566 95.8507729,232.85611 97.5304688,234.759766 C99.2101647,236.663421 101.197775,237.615234 103.493359,237.615234 C106.180873,237.615234 108.238469,236.467459 109.666211,234.171875 C111.093952,231.876291 111.807813,228.992856 111.807813,225.521484 L111.807813,215.275391 Z M152.336328,137.841797 L179.043359,137.841797 L179.043359,255 L152.336328,255 L152.336328,137.841797 Z M299.436328,183.277344 C301.787902,179.861962 304.461378,177.314462 307.456836,175.634766 C310.452294,173.95507 313.797638,173.115234 317.492969,173.115234 C323.819823,173.115234 329.096789,175.424782 333.324023,180.043945 C337.551258,184.663109 339.664844,190.415981 339.664844,197.302734 L339.664844,255 L313.041797,255 L313.041797,202.845703 C313.041797,198.310524 311.362126,196.042969 308.002734,196.042969 C305.65116,196.042969 303.775528,197.274727 302.375781,199.738281 C300.976035,202.201835 300.276172,205.64516 300.276172,210.068359 L300.276172,255 L273.905078,255 L273.905078,174.962891 L296.832813,174.962891 L299.436328,183.277344 Z M395.578125,137.841797 L422.369141,137.841797 L422.369141,255 L398.769531,255 L396.333984,245.677734 C393.814441,249.373065 391.070978,252.158519 388.103516,254.03418 C385.136053,255.90984 381.944679,256.847656 378.529297,256.847656 C370.410767,256.847656 363.804062,252.690471 358.708984,244.375977 C353.613907,236.061482 351.066406,226.445367 351.066406,215.527344 C351.066406,204.161402 353.795871,194.251344 359.254883,185.796875 C364.713895,177.342406 371.670531,173.115234 380.125,173.115234 C382.700534,173.115234 385.276029,173.661127 387.851563,174.75293 C390.427096,175.844732 393.002591,177.510405 395.578125,179.75 L395.578125,137.841797 Z M395.578125,199.822266 C394.402338,198.254549 393.198574,197.07878 391.966797,196.294922 C390.73502,195.511064 389.447272,195.119141 388.103516,195.119141 C385.024073,195.119141 382.560556,196.882795 380.712891,200.410156 C378.865225,203.937518 377.941406,208.612601 377.941406,214.435547 C377.941406,220.034533 378.823233,224.611636 380.586914,228.166992 C382.350595,231.722349 384.688137,233.5 387.599609,233.5 C390.119153,233.5 392.078769,232.198255 393.478516,229.594727 C394.878262,226.991198 395.578125,223.86981 395.578125,220.230469 L395.578125,199.822266 Z M439.909375,179.582031 C449.035723,175.270812 457.686027,173.115234 465.860547,173.115234 C471.907452,173.115234 477.184418,174.179026 481.691602,176.306641 C486.198786,178.434255 489.992042,181.87758 493.071484,186.636719 C496.150927,191.395857 497.690625,197.470666 497.690625,204.861328 L497.690625,231.736328 C497.690625,239.518919 499.286312,247.273399 502.477734,255 L475.770703,255 C474.762886,252.760405 473.951045,250.212905 473.335156,247.357422 C470.703633,250.492854 467.946173,252.85839 465.062695,254.454102 C462.179217,256.049813 459.141813,256.847656 455.950391,256.847656 C449.735516,256.847656 444.178605,254.370142 439.279492,249.415039 C434.380379,244.459936 431.930859,238.427119 431.930859,231.316406 C431.930859,215.303305 445.732154,205.533221 473.335156,202.005859 C472.719268,199.094386 471.207564,196.910815 468.8,195.455078 C466.392436,193.999342 463.089084,193.271484 458.889844,193.271484 C452.730959,193.271484 446.404199,195.79099 439.909375,200.830078 L439.909375,179.582031 Z M473.335156,215.275391 C462.137184,216.283208 456.538281,220.45439 456.538281,227.789062 C456.538281,230.532566 457.378117,232.85611 459.057813,234.759766 C460.737508,236.663421 462.725119,237.615234 465.020703,237.615234 C467.708217,237.615234 469.765813,236.467459 471.193555,234.171875 C472.621296,231.876291 473.335156,228.992856 473.335156,225.521484 L473.335156,215.275391 Z M537.807031,185.544922 C539.430737,181.401672 541.418348,178.294281 543.769922,176.222656 C546.121496,174.151031 548.864958,173.115234 552.000391,173.115234 C554.016026,173.115234 556.171603,173.731114 558.467188,174.962891 L558.467188,200.158203 C555.723684,198.814446 553.232173,198.142578 550.992578,198.142578 C547.577197,198.142578 544.749751,199.528306 542.510156,202.299805 C540.270562,205.071303 539.150781,208.612609 539.150781,212.923828 L539.150781,255 L512.107813,255 L512.107813,174.962891 L535.119531,174.962891 L537.807031,185.544922 Z M258.148438,248.705078 C247.902293,254.472034 237.731164,256.732422 228.884766,256.732422 C217.350854,256.732422 207.98669,252.841185 200.791992,245.058594 C193.597295,237.276003 190,227.309957 190,215.160156 C190,203.402285 193.401333,193.436239 200.204102,185.261719 C207.00687,177.087199 216.091089,173 227.457031,173 C237.535207,173 245.597626,176.499314 251.644531,183.498047 C257.691436,190.49678 260.714844,199.874941 260.714844,211.632812 L260.714844,218.267578 L216.856445,218.267578 C216.856445,218.267578 215.245117,226.848507 219.208008,231.957031 C223.170898,237.065556 228.750013,239.028446 235.324219,237.837891 C245.758789,235.948242 248.401367,233.537109 251.644531,231.957031 L258.148438,248.705078 Z M236.912109,203.873047 L236.912109,201.185547 C236.912109,197.546206 235.960296,194.438815 234.056641,191.863281 C232.152985,189.287748 229.773452,188 226.917969,188 C223.558577,188 220.969085,189.315742 219.149414,191.947266 C217.329744,194.578789 216.279949,198.55401 216,203.873047 L236.912109,203.873047 Z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M566.523438,228.140625 C570.498718,228.140625 573.760078,229.456367 576.307617,232.087891 C578.855156,234.719414 580.128906,237.8548 580.128906,241.494141 C580.128906,245.189472 578.841159,248.338854 576.265625,250.942383 C573.690091,253.545911 570.610695,254.847656 567.027344,254.847656 C563.499982,254.847656 560.448581,253.545911 557.873047,250.942383 C555.297513,248.338854 554.009766,245.217466 554.009766,241.578125 C554.009766,237.770814 555.325508,234.57944 557.957031,232.003906 C560.588555,229.428373 563.443995,228.140625 566.523438,228.140625 Z M604.646484,133.910156 C608.285825,133.910156 611.589178,135.225898 614.556641,137.857422 C617.524103,140.488945 619.007812,143.904276 619.007812,148.103516 C619.007812,152.078796 617.59409,155.438137 614.766602,158.181641 C611.939113,160.925144 608.565775,162.296875 604.646484,162.296875 C600.615214,162.296875 597.213881,160.883152 594.442383,158.055664 C591.670885,155.228176 590.285156,151.882832 590.285156,148.019531 C590.285156,144.100241 591.712876,140.768894 594.568359,138.025391 C597.423842,135.281887 600.783184,133.910156 604.646484,133.910156 Z M591.208984,172.962891 L617.832031,172.962891 L617.832031,253 L591.208984,253 L591.208984,172.962891 Z M668.642578,171.115234 C679.672581,171.115234 688.714808,174.754521 695.769531,182.033203 C702.824254,189.311885 706.351562,199.501888 706.351562,212.603516 C706.351562,225.033265 702.964227,235.181276 696.189453,243.047852 C689.41468,250.914427 680.204485,254.847656 668.558594,254.847656 C656.912702,254.847656 647.84248,250.956419 641.347656,243.173828 C634.852832,235.391237 631.605469,225.48118 631.605469,213.443359 C631.605469,200.90163 635.006802,190.711628 641.80957,182.873047 C648.612339,175.034466 657.556585,171.115234 668.642578,171.115234 Z M668.894531,191.607422 C665.591129,191.607422 663.099618,193.385073 661.419922,196.94043 C659.740226,200.495786 658.900391,205.82874 658.900391,212.939453 C658.900391,219.938186 659.726229,225.201154 661.37793,228.728516 C663.029631,232.255877 665.507145,234.019531 668.810547,234.019531 C672.169939,234.019531 674.675447,232.269874 676.327148,228.770508 C677.978849,225.271141 678.804688,220.02217 678.804688,213.023438 C678.804688,205.856735 677.978849,200.495786 676.327148,196.94043 C674.675447,193.385073 672.197933,191.607422 668.894531,191.607422 Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendariologo);\nexport default __webpack_public_path__ + \"static/media/calendariologo.141d7820.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { useFetchPostStatuses } from \"../lib/hooks\";\nimport { wp } from \"../lib/utils\";\nimport { ReactComponent as Logo } from '../svg/calendariologo.svg';\n\nexport default function Header({ handleTodayClick }) {\n\tuseFetchPostStatuses();\n\n\tconst { postsUrl } = wp;\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"calendarHeader\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon closeCalendario\"\n\t\t\t\t\t\tonClick={() => (window.location.href = postsUrl)}\n\t\t\t\t\t\ttitle=\"Close\"\n\t\t\t\t\t>\n\t\t\t\t\t\tclose\n\t\t\t\t\t</button>\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\t<Logo />\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tcurrentIndex: null,\n\tnewIndex: null,\n\toverUnscheduled: false,\n};\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tcurrentIndex:\n\t\t\t\t\taction.currentIndex >= 0 ? action.currentIndex : false,\n\t\t\t};\n\t\t}\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\t\t}\n\n\t\tcase \"DRAGGING_OVER_CALENDAR\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: initialDrag.newIndex,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\t\t}\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","import React, { forwardRef, useContext, useState } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast, isSameDay } from \"date-fns\";\n\nimport DragContext from \"../DragContext\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tconst [dragOver, setDragOver] = useState(false);\n\tconst {\n\t\tdraggedPost: {\n\t\t\tpost: { post_date },\n\t\t\tisUnscheduled,\n\t\t},\n\t} = useContext(DragContext);\n\n\tconst handleDragOver = () => {\n\t\tif (!isUnscheduled && isSameDay(day, post_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDragOver(true);\n\t};\n\n\tfunction getStyles() {\n\t\tlet classes = [\"day\", \"col\", \"cell\"];\n\n\t\tif (isToday(day)) {\n\t\t\tclasses.push(\"today\");\n\t\t}\n\n\t\tif (isPast(day) && !isToday(day)) {\n\t\t\tclasses.push(\"past\");\n\t\t}\n\n\t\tif (dragOver) {\n\t\t\tclasses.push(\"dragOver\");\n\t\t}\n\n\t\treturn classes.join(\" \");\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={getStyles()}\n\t\t\tref={isToday(day) ? ref : null}\n\t\t\tonDragOver={handleDragOver}\n\t\t\tonDragLeave={() => setDragOver(false)}\n\t\t\tonDrop={() => setDragOver(false)}\n\t\t>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n});\n\nexport default Day;\n","import React from \"react\";\n\nexport default function PostLink({ title, icon, onClick, target, children }) {\n\treturn (\n\t\t<button\n\t\t\ttitle={title}\n\t\t\tclassName={`icon postLink icon__${icon}`}\n\t\t\tonClick={onClick}\n\t\t\ttarget={target ? target : \"\"}\n\t\t\trel=\"noreferrer\"\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostLink from \"./common/PostLink\";\nimport { getPostList, moveItem, dayKey, filterPostStatus } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function PostLinks({ post, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { posts, postsDispatch } = useContext(PostsContext);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { post_date, post_status } = post;\n\t\tconst sourceId = dayKey(post_date);\n\t\tconst destinationId = \"unscheduled\";\n\n\t\tconst result = moveItem(\n\t\t\tgetPostList(sourceId, posts),\n\t\t\tgetPostList(destinationId, posts),\n\t\t\t{ droppableId: sourceId },\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE_POST\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"PREPARE_UPDATE\",\n\t\t\tid,\n\t\t\tparams: {\n\t\t\t\tpost_status: filterPostStatus(post_status, true),\n\t\t\t},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { id, post_date } = post;\n\t\tconst sourceId = \"unscheduled\";\n\t\tconst source = getPostList(sourceId, posts);\n\t\tconst destinationId = dayKey(post_date);\n\t\tconst destination = getPostList(destinationId, posts);\n\n\t\tconst result = moveItem(\n\t\t\tsource,\n\t\t\tdestination,\n\t\t\t{\n\t\t\t\tdroppableId: sourceId,\n\t\t\t\tindex: source.findIndex((item) => item.id === id),\n\t\t\t},\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE_POST\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"PREPARE_UPDATE\",\n\t\t\tid,\n\t\t\tunscheduled: false,\n\t\t\tparams: {\n\t\t\t\tpost_date,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tconst { post_date } = post;\n\t\tpostsDispatch({\n\t\t\ttype: \"SEND_TO_TRASH\",\n\t\t\tid: id,\n\t\t\tparams: {\n\t\t\t\tpost_date,\n\t\t\t},\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"postLinks\">\n\t\t\t<PostLink\n\t\t\t\ticon=\"view\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</PostLink>\n\t\t\t<PostLink\n\t\t\t\ticon=\"edit\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</PostLink>\n\t\t\t{unscheduled ? (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"schedule\"\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</PostLink>\n\t\t\t) : (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"unschedule\"\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t>\n\t\t\t\t\tevent_busy\n\t\t\t\t</PostLink>\n\t\t\t)}\n\t\t\t<PostLink icon=\"trash\" title=\"Trash this post\" onClick={trashPost}>\n\t\t\t\tdelete_forever\n\t\t\t</PostLink>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled }) {\n\tconst {\n\t\tposts: { currentPost, isUpdating },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst [color, setColor] = useState(\"\");\n\tconst [animationRequestId, setAnimationRequestId] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (postStatuses === undefined || isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColor(postStatuses[post.post_status].color);\n\n\t\t// return () => {\n\t\t// \tsetColor(\"\");\n\t\t// };\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst handleMouseEnter = (e) => {\n\t\tanimateLinks(e.currentTarget, {\n\t\t\ttiming: function (timeFraction) {\n\t\t\t\treturn timeFraction;\n\t\t\t},\n\t\t\tdraw: function (element, progress) {\n\t\t\t\telement.style.paddingBottom = progress + 30 + \"px\";\n\t\t\t},\n\t\t\tduration: 50,\n\t\t});\n\t};\n\n\tfunction animateLinks(element, { timing, draw, duration }) {\n\t\tlet start = performance.now();\n\n\t\tsetAnimationRequestId(() =>\n\t\t\trequestAnimationFrame(function animate(time) {\n\t\t\t\tlet timeFraction = (time - start) / duration;\n\n\t\t\t\tlet progress = timing(timeFraction);\n\t\t\t\tdraw(element, progress);\n\t\t\t})\n\t\t);\n\t}\n\n\tconst handleMouseLeave = (e) => {\n\t\te.currentTarget.style.paddingBottom = 0;\n\t\tcancelAnimationFrame(animationRequestId);\n\t};\n\n\tconst handleMouseDown = (e) => {\n\t\t// Close the postLinks drawer if we're clicking or dragging, but not on the drawer itself\n\t\tif (\n\t\t\t!e.target.classList.contains(\"postLinks\") &&\n\t\t\t!e.target.classList.contains(\"postLink\")\n\t\t) {\n\t\t\tcancelAnimationFrame(animationRequestId);\n\t\t\te.currentTarget.style.paddingBottom = 0;\n\t\t}\n\t};\n\n\tfunction getStyles(snapshot) {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\n\t\tif (\n\t\t\t(unscheduled === false &&\n\t\t\t\tpostStatuses[post.post_status].visible === true) ||\n\t\t\tunscheduled === true\n\t\t) {\n\t\t\tclasses.push(\"visible\");\n\t\t} else {\n\t\t\tclasses.push(\"hidden\");\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\tif (snapshot.isDragging) {\n\t\t\tclasses.push(\"dragging\");\n\t\t}\n\n\t\tif (snapshot.draggingOver === \"unscheduled\") {\n\t\t\tclasses.push(\"over__unscheduled\");\n\t\t} else if (snapshot.draggingOver !== null) {\n\t\t\tclasses.push(\"over__calendar\");\n\t\t} else {\n\t\t\tclasses.push(\"over__none\");\n\t\t}\n\n\t\tif (isUpdating) {\n\t\t\tclasses.push(\"locked\");\n\t\t}\n\n\t\treturn classes.join(\" \");\n\t}\n\n\treturn !isEmpty(postStatuses) ? (\n\t\t<Draggable\n\t\t\tdraggableId={`${post.id}`}\n\t\t\tindex={index}\n\t\t\tisDragDisabled={isUpdating ? true : false}\n\t\t>\n\t\t\t{({ innerRef, draggableProps, dragHandleProps }, snapshot) => (\n\t\t\t\t<li\n\t\t\t\t\tref={innerRef}\n\t\t\t\t\t{...draggableProps}\n\t\t\t\t\t{...dragHandleProps}\n\t\t\t\t\tkey={post.id}\n\t\t\t\t\tclassName={getStyles(snapshot)}\n\t\t\t\t\tdata-index={index}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\tonMouseEnter={handleMouseEnter}\n\t\t\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\t\t\tonMouseDown={handleMouseDown}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className=\"postData__title\">\n\t\t\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!isDragging ? (\n\t\t\t\t\t\t<PostLinks\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: color.replace(\n\t\t\t\t\t\t\t\t\t/,1\\)/,\n\t\t\t\t\t\t\t\t\t\",0.75)\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</Draggable>\n\t) : null;\n}\n","import React from \"react\";\n\nexport default function Loading() {\n\treturn (\n\t\t<div className=\"loadingOverlay\">\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useState, useContext } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport { dateFormat } from \"../lib/utils\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function PostList({ posts, className, date }) {\n\tconst {\n\t\tposts: { isUpdating },\n\t} = useContext(PostsContext);\n\tconst [hovered, setHovered] = useState(false);\n\n\tconst droppableId =\n\t\tdate === false ? \"unscheduled\" : format(date, dateFormat.date);\n\n\treturn (\n\t\t<Droppable droppableId={droppableId}>\n\t\t\t{({ innerRef, droppableProps, placeholder }, snapshot) => (\n\t\t\t\t<>\n\t\t\t\t\t{isUpdating === droppableId ? <Loading /> : null}\n\t\t\t\t\t<ul\n\t\t\t\t\t\tref={innerRef}\n\t\t\t\t\t\t{...droppableProps}\n\t\t\t\t\t\tclassName={`postList ${className} ${\n\t\t\t\t\t\t\tsnapshot.isDraggingOver ? \"draggingOver\" : \"idle\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tonMouseEnter={() => setHovered(true)}\n\t\t\t\t\t\tonMouseLeave={() => setHovered(false)}\n\t\t\t\t\t\tstyle={hovered ? { marginBottom: 0 } : null}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!isEmpty(posts)\n\t\t\t\t\t\t\t? posts.map((post, index) => (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tunscheduled={\n\t\t\t\t\t\t\t\t\t\t\tdroppableId === \"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Droppable>\n\t);\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"CREATE_NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport DragContext from \"../DragContext\";\n\nexport default function DayPosts({ posts, date, title }) {\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\n\tconst renderPostList = () => {\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t{!isDragging ? (\n\t\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t) : null}\n\t\t\t\t<PostList\n\t\t\t\t\tclassName=\"dayPosts\"\n\t\t\t\t\tdate={date}\n\t\t\t\t\tposts={posts}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day < viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React from \"react\";\n\nexport default function Icon({ className, children }) {\n\treturn (\n\t\t<span className={className ? `icon ${className}` : \"icon\"}>\n\t\t\t{children}\n\t\t</span>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport Icon from \"./common/Icon\";\nimport { useClickOutside } from \"../lib/hooks\";\nimport {\n\tdateFormat,\n\tdayKey,\n\tfilterPostStatus,\n\tfilterStatusList,\n\tgetPostList,\n\tmoveItem,\n\t// stripPermalinkSlug,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n\togPost: null,\n};\n\nconst initialTaxFilter = {\n\tcategory: \"\",\n\tpost_tag: \"\",\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t\togPost: action.post,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nfunction taxFilterReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"category\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategory: action.filter,\n\t\t\t};\n\n\t\tcase \"post_tag\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost_tag: action.filter,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default function EditPost() {\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst {\n\t\tposts: { currentPost, taxonomies, scheduled, unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [taxFilter, taxFilterDispatch] = useReducer(\n\t\ttaxFilterReducer,\n\t\tinitialTaxFilter\n\t);\n\tconst node = useRef(null);\n\tconst initial = useRef({});\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\tconst {\n\t\tid,\n\t\tpost_title,\n\t\tpost_name,\n\t\tpost_date,\n\t\tpost_status,\n\t\tpost_excerpt,\n\t\timage,\n\t\tedit_link,\n\t\t// view_link,\n\t\ttaxonomies: post_taxonomies,\n\t\tunscheduled: isUnscheduled,\n\t} = post;\n\n\t// Save the original slug\n\tuseEffect(() => {\n\t\tif (!initial.current.post_status) {\n\t\t\tinitial.current.post_status = post_status;\n\t\t}\n\n\t\tif (!initial.current.slug) {\n\t\t\tinitial.current.slug = post_name;\n\t\t}\n\n\t\treturn () => {\n\t\t\tinitial.current = {};\n\t\t};\n\t}, [post_name, post_status]);\n\n\tuseEffect(() => {\n\t\tif (post_date && post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (isUnscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(postStatuses, exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\n\t\treturn () => {\n\t\t\tsetAllowedStatuses({});\n\t\t};\n\t}, [date, isUnscheduled, postStatuses]);\n\n\tuseEffect(() => {\n\t\tconst { post_date, post_status } = currentPost;\n\n\t\tsetDatePickerDisabled(\n\t\t\tpost_date &&\n\t\t\t\t(isToday(post_date) || isPast(post_date)) &&\n\t\t\t\tpost_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\n\t\treturn () => {\n\t\t\tsetDatePickerDisabled(false);\n\t\t};\n\t}, [currentPost]);\n\n\tuseEffect(() => {\n\t\tconst { id } = currentPost;\n\t\tif (id > 0 || id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t};\n\t}, [currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { ogPost, post } = editPost;\n\t\tconst posts = { scheduled, unscheduled };\n\n\t\tconst index = isUnscheduled\n\t\t\t? unscheduled.findIndex((item) => item.id === id)\n\t\t\t: null;\n\n\t\t// Move from one list to another\n\t\tconst postLists = {\n\t\t\tsource: ogPost.unscheduled\n\t\t\t\t? \"unscheduled\"\n\t\t\t\t: dayKey(ogPost.post_date),\n\t\t\tdestination: isUnscheduled ? \"unscheduled\" : dayKey(post.post_date),\n\t\t};\n\n\t\tif (postLists.source !== postLists.destination) {\n\t\t\tconst result = moveItem(\n\t\t\t\tgetPostList(postLists.source, posts),\n\t\t\t\tgetPostList(postLists.destination, posts),\n\t\t\t\t{ droppableId: postLists.source },\n\t\t\t\t{ droppableId: postLists.destination }\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"MOVE_POST\",\n\t\t\t\tsource: result[postLists.source],\n\t\t\t\tdestination: result[postLists.destination],\n\t\t\t\tsourceId: result.sourceId,\n\t\t\t\tdestinationId: result.destinationId,\n\t\t\t});\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"PREPARE_UPDATE\",\n\t\t\tid: id,\n\t\t\tparams: {\n\t\t\t\tpost_title,\n\t\t\t\tpost_name,\n\t\t\t\tpost_date: format(\n\t\t\t\t\tnew Date(post.post_date),\n\t\t\t\t\tdateFormat.dateTime\n\t\t\t\t),\n\t\t\t\tpost_status: filterPostStatus(post_status, isUnscheduled),\n\t\t\t\tpost_excerpt,\n\t\t\t\ttaxonomies: post_taxonomies,\n\t\t\t},\n\t\t\tunscheduled: isUnscheduled,\n\t\t\tnewIndex: index,\n\t\t});\n\t\t// }\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"SEND_TO_TRASH\",\n\t\t\tid,\n\t\t\tparams: {\n\t\t\t\tpost_date,\n\t\t\t},\n\t\t\tunscheduled: isUnscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.closest(\"fieldset\").name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\tuseClickOutside(node, closeModal);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`editPost ${editMode ? \"active\" : \"inactive\"}`}\n\t\t\tref={initial}\n\t\t>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\t\thighlight_off\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName={`editPost__form ${\n\t\t\t\t\t\t\t\ttrashPostClicked ? \"trashConfirm\" : \"\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"editPost__title\">\n\t\t\t\t\t\t\t\t<FieldGroup name=\"post_title\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\t\t\tid=\"post_title\"\n\t\t\t\t\t\t\t\t\t\tvalue={decode(post_title, {\n\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"New Post Title\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"editLink\"\n\t\t\t\t\t\t\t\t\thref={decode(edit_link)}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit{\" \"}\n\t\t\t\t\t\t\t\t\t<Icon className=\"open_in_new\">\n\t\t\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t\t<div className=\"header__left\">\n\t\t\t\t\t\t\t\t\t{/* {initial.current.post_status ===\n\t\t\t\t\t\t\t\t\t\"publish\" ? (\n\t\t\t\t\t\t\t\t\t\t<FieldGroup name=\"post_name\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"permalink\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"base\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{stripPermalinkSlug(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tview_link\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"post_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={post_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\t\t\tisUnscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">\n\t\t\t\t\t\t\t\t\t\t\t\tPost Date\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isUnscheduled}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Excerpt\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\t\t\tvalue={decode(post_excerpt, {\n\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"header__right\">\n\t\t\t\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"trash confirm\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to\n\t\t\t\t\t\t\t\t\t\t\t\t\tTrash this post?\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Update\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"trash\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">\n\t\t\t\t\t\t\t\t\t\t\tPost Status\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={post_status}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{renderStatusOptions(\n\t\t\t\t\t\t\t\t\t\t\t\tallowedStatuses\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<FieldGroup name=\"post_thumb\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={decode(edit_link)}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tFeatured Image{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Icon className=\"open_in_new\">\n\t\t\t\t\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t\t\t\t{image ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={`${post_title}`}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t\t<div className=\"taxonomy\">\n\t\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t\t<legend>Categories</legend>\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter\">\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"category_filter\">\n\t\t\t\t\t\t\t\t\t\t\t\tSearch Categories\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"category_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"category_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={taxFilter.category}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilterDispatch({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"category\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"terms\">\n\t\t\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ name, slug, term_id },\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.category.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.category ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"taxonomy\">\n\t\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t\t<legend>Tags</legend>\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter\">\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"category_filter\">\n\t\t\t\t\t\t\t\t\t\t\t\tSearch Post Tags\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"post_tag_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={taxFilter.post_tag}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilterDispatch({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"post_tag\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"terms\">\n\t\t\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ name, slug, term_id },\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.post_tag.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.post_tag ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\n\nexport default function DrawerHandle({ toggle }) {\n\treturn (\n\t\t<button className=\"drawerHandle icon\" onClick={toggle}>\n\t\t\tdrag_indicator\n\t\t</button>\n\t);\n}\n","import React from \"react\";\n\nexport default function Widget({ title, widgetClass, children }) {\n\tconst widgetTitle = title ? <h3 className=\"widgetTitle\">{title}</h3> : \"\";\n\tconst widgetClassLabel = widgetClass ? widgetClass : \"default\";\n\n\treturn (\n\t\t<div className={`widget widget__${widgetClassLabel}`}>\n\t\t\t{widgetTitle}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst { blogUrl, trashUrl } = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t} = useContext(PostsContext);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, {\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport { wp } from \"../../lib/utils\";\nimport { useClickOutside } from \"../../lib/hooks\";\n\nimport ViewContext from \"../../ViewContext\";\n\nimport { HexColorPicker } from \"react-colorful\";\n\nexport default function ColorPickerPopover({ color, name }) {\n\tconst { presetStatusColors } = wp;\n\tconst popover = useRef();\n\tconst previous = useRef(color);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [colorValue, setColorValue] = useState(\"\");\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (popover.current === undefined && !color) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorValue(color);\n\t}, [color]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tpopover.current === undefined ||\n\t\t\tpostStatuses[name].color === colorValue ||\n\t\t\tprevious.current === colorValue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_POST_STATUS_COLOR\",\n\t\t\tpostStatus: name,\n\t\t\tcolor: colorValue,\n\t\t});\n\n\t\tprevious.current = colorValue;\n\t}, [colorValue, name, postStatuses, viewOptionsDispatch]);\n\n\tconst close = useCallback(() => setIsOpen(false), []);\n\tuseClickOutside(popover, close);\n\n\treturn (\n\t\t<div className=\"picker\">\n\t\t\t<div\n\t\t\t\tclassName=\"swatch\"\n\t\t\t\tstyle={{ backgroundColor: colorValue }}\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t/>\n\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"popover\" ref={popover}>\n\t\t\t\t\t<HexColorPicker\n\t\t\t\t\t\tcolor={colorValue}\n\t\t\t\t\t\tonChange={setColorValue}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"picker__swatches\">\n\t\t\t\t\t\t{presetStatusColors === undefined\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: presetStatusColors.map((color) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"picker__swatch\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorValue(color)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ selected, toggleSelected, name }) {\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<button\n\t\t\t\tname={name}\n\t\t\t\tclassName={`dialog-button ${selected ? \"\" : \"disabled\"}`}\n\t\t\t\tonClick={toggleSelected}\n\t\t\t>\n\t\t\t\t{selected ? \"ON\" : \"OFF\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ColorPickerPopover from \"./common/ColorPickerPopover\";\nimport ToggleButton from \"./common/ToggleButton\";\nimport { wp, haveColorsChanged } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { routeBase } = wp;\n\tconst firstUpdate = useRef(true);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst keys = Object.keys(postStatuses);\n\tconst [colorsChanged, setColorsChanged] = useState(false);\n\n\t// Maintain state for color defaults\n\tuseEffect(() => {\n\t\tsetColorsChanged(haveColorsChanged(postStatuses));\n\t}, [postStatuses]);\n\n\t// Updates the server when the dispatch is updated (after debounce)\n\tuseEffect(() => {\n\t\tif (isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate.current === true) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// update server\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tlet colors = {};\n\t\t\tfor (let status in postStatuses) {\n\t\t\t\tcolors[status] = postStatuses[status].color;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(colors),\n\t\t\t\t});\n\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\tawait response.json();\n\n\t\t\t\t// do something else?\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [firstUpdate, routeBase, postStatuses]);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_POST_STATUS\",\n\t\t\tpostStatus: e.target.name,\n\t\t});\n\t};\n\n\tconst handleResetColors = () => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"RESET_POST_STATUS_COLORS\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((status, index) => {\n\t\t\t\t\tconst { color, name } = postStatuses[status];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${status}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ColorPickerPopover color={color} name={status} />\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\tpostStatuses[status].visible ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggleSelected={toggleStatus}\n\t\t\t\t\t\t\t\tname={status}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{colorsChanged ? (\n\t\t\t\t<button className=\"reset\" onClick={handleResetColors}>\n\t\t\t\t\tReset Colors\n\t\t\t\t</button>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_VIEW_MODE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewMode\">\n\t\t\t<button\n\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\tclassName={`icon control viewMode__input ${\n\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t}`}\n\t\t\t\tvalue=\"calendar\"\n\t\t\t\ttitle=\"Calendar\"\n\t\t\t>\n\t\t\t\tcalendar_view_month\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tname=\"viewMode\"\n\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\tclassName={`icon control viewMode__input ${\n\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t}`}\n\t\t\t\tvalue=\"list\"\n\t\t\t\ttitle=\"List\"\n\t\t\t>\n\t\t\t\tview_list\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport DrawerHandle from \"./common/DrawerHandle\";\nimport Widget from \"./common/Widget\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport RefetchButton from \"./RefetchButton\";\nimport ViewOptions from \"./ViewOptions\";\nimport { wp } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Sidebar() {\n\tconst { pluginUrl } = wp;\n\n\tconst {\n\t\tviewOptions: { sidebarOpen },\n\t\t// viewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<aside\n\t\t\tclassName={`calendario__sidebar ${sidebarOpen ? \"open\" : \"closed\"}`}\n\t\t>\n\t\t\t<DrawerHandle\n\t\t\t\ttoggle={() =>\n\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\ttype: \"TOGGLE_SIDEBAR\",\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t<Widget widgetClass=\"options\">\n\t\t\t\t\t<div className=\"options\">\n\t\t\t\t\t\t<ViewOptions />\n\t\t\t\t\t</div>\n\t\t\t\t</Widget>\n\t\t\t\t<Widget\n\t\t\t\t\ttitle=\"Unscheduled Drafts\"\n\t\t\t\t\twidgetClass=\"unscheduledDrafts\"\n\t\t\t\t>\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t</Widget>\n\n\t\t\t\t<Widget title=\"Post Status\" widgetClass=\"statusFilters\">\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t</Widget>\n\n\t\t\t\t<Widget widgetClass=\"support\">\n\t\t\t\t\t<div className=\"support-links\">\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"rhdLogo\"\n\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul className=\"docs\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/wiki\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSupport\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport a Bug\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</Widget>\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, /*useState,*/ useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport Icon from \"./components/common/Icon\";\nimport { useStickyState, useUpdate } from \"./lib/hooks\";\nimport {\n\tdateIsBetween,\n\tisDraggingUnscheduled,\n\treorderUnscheduled,\n\tgetPostList,\n\tmoveItem,\n\twp,\n\tdraggedPostDestination,\n\tfilterPostStatus,\n} from \"./lib/utils\";\nimport { differenceInWeeks, addWeeks } from \"date-fns\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst {\n\t\tviewRange: { start, end },\n\t} = viewOptions;\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tconst {\n\t\tunscheduled: unscheduledPosts,\n\t\tscheduled: scheduledPosts,\n\t\tcurrentPost,\n\t} = posts;\n\tconst { user } = wp;\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_VIEW_MODE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\t/**\n\t * Send the upaate\n\t */\n\tuseUpdate(posts, postsDispatch, draggedPost, draggedPostDispatch, user);\n\n\tconst isOverUnscheduled = (droppableId) =>\n\t\tdroppableId === \"unscheduled\" ? true : false;\n\n\tconst handleTodayClick = () => {\n\t\tconst today = new Date();\n\n\t\tif (dateIsBetween(today, start, end)) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tconst weekDiff = differenceInWeeks(end, start);\n\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: today,\n\t\t\t\tend: addWeeks(today, weekDiff),\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragStart = (item) => {\n\t\tlet draggingUnscheduled = isDraggingUnscheduled(item);\n\n\t\tlet postList;\n\t\tif (draggingUnscheduled === true) {\n\t\t\tpostList = unscheduledPosts;\n\t\t} else {\n\t\t\tpostList = scheduledPosts[item.source.droppableId];\n\t\t}\n\n\t\tconst post = postList.find((p) => {\n\t\t\treturn Number(item.draggableId) === Number(p.id);\n\t\t});\n\t\tlet currentIndex = isDraggingUnscheduled(item)\n\t\t\t? item.source.draggableId\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggingUnscheduled,\n\t\t\tcurrentIndex,\n\t\t});\n\t};\n\n\tconst onDragUpdate = (item) => {\n\t\tif (item.destination === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(item.source.droppableId);\n\n\t\t// only dispatch if an update is necessary\n\t\tif (overUnscheduled === true) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\tdraggedOver: item.destination.index,\n\t\t\t});\n\t\t} else if (draggedPost.overUnscheduled === true) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_CALENDAR\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragEnd = (item) => {\n\t\tconst { source, destination } = item;\n\t\tconst {\n\t\t\tpost: { id, post_date: post_date_source, post_status },\n\t\t} = draggedPost;\n\n\t\t// dropped outside a list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(destination.droppableId);\n\n\t\tconst post_date = draggedPostDestination(\n\t\t\tpost_date_source,\n\t\t\tdestination.droppableId,\n\t\t\toverUnscheduled\n\t\t);\n\n\t\tif (overUnscheduled && source.droppableId === destination.droppableId) {\n\t\t\t// Reorder\n\t\t\tconst items = reorderUnscheduled(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\tposts: items,\n\t\t\t});\n\t\t} else if (source.droppableId !== destination.droppableId) {\n\t\t\t// Move\n\t\t\tconst result = moveItem(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tgetPostList(destination.droppableId, posts),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"MOVE_POST\",\n\t\t\t\tsource: result[source.droppableId],\n\t\t\t\tdestination: result[destination.droppableId],\n\t\t\t\tsourceId: result.sourceId,\n\t\t\t\tdestinationId: result.destinationId,\n\t\t\t});\n\t\t}\n\n\t\t// Run the update\n\t\tpostsDispatch({\n\t\t\ttype: \"PREPARE_UPDATE\",\n\t\t\tid,\n\t\t\tunscheduled: overUnscheduled,\n\t\t\tparams: {\n\t\t\t\tpost_date,\n\t\t\t\tpost_status: filterPostStatus(post_status, overUnscheduled),\n\t\t\t},\n\t\t\tnewIndex: overUnscheduled ? destination.index : null,\n\t\t});\n\n\t\t// If doing a post edit, save the post date\n\t\tif (currentPost.id === id) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\tfield: \"post_date\",\n\t\t\t\tvalue: post_date,\n\t\t\t});\n\t\t}\n\n\t\tdraggedPostDispatch({ type: \"END\" });\n\t};\n\n\tfunction appClass() {\n\t\tconst { sidebarOpen } = viewOptions;\n\n\t\tlet classes = [\"calendario\"];\n\n\t\tif (sidebarOpen === true) {\n\t\t\tclasses.push(\"sidebarOpen\");\n\t\t} else {\n\t\t\tclasses.push(\"sidebarClosed\");\n\t\t}\n\n\t\treturn classes.join(\" \");\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mobileOrientationCheck\">\n\t\t\t\t<div className=\"message\">\n\t\t\t\t\t<Icon>screen_rotation</Icon>\n\t\t\t\t\t<p className=\"caption\">Please rotate your device</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={appClass()}>\n\t\t\t\t<ViewContext.Provider\n\t\t\t\t\tvalue={{ viewOptions, viewOptionsDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\t\t\tonDragUpdate={onDragUpdate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</PostsContext.Provider>\n\t\t\t\t</ViewContext.Provider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport \"./lib/typedefs\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nvar reactAppData = window.rhdReactPlugin || {};\nconst { appSelector } = reactAppData;\nvar appAnchorElement = document.querySelector(appSelector);\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}