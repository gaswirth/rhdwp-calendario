{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","PostsContext.js","lib/hooks.js","components/Header.js","DragContext.js","components/Day.js","lib/updatePost.js","components/PostLinks.js","components/Post.js","components/PostList.js","components/common/NewPostButton.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/common/ColorPickerPopover.js","components/common/ToggleButton.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","wp","window","rhdReactPlugin","dateFormat","filterUnchangedParams","params","post","length","key","Array","isArray","every","value","index","omit","renderWidget","dayKey","date","format","isDraggingUnscheduled","item","source","droppableId","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","postStatuses","defaultStatusColors","viewReducer","state","action","type","range","startOfWeek","endOfWeek","addMonths","subMonths","statuses","status","visible","postStatus","color","reset","Object","keys","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","unscheduled","refetch","dateRange","scheduled","trashed","taxonomies","locale","postsReducer","scheduledPosts","posts","forEach","Date","post_date_day","scheduledByDate","groupBy","unscheduledPosts","sourceId","destinationId","destination","taxonomy","terms","field","routeBase","headers","nonce","useFetchScheduledPosts","postsDispatch","useState","isLoading","setIsLoading","url","a","fetch","res","json","data","console","log","message","fetchData","useFetchTaxonomyTerms","isEmpty","useClickOutside","handler","startedInside","startedWhenMounted","listener","event","current","contains","validateEventStart","addEventListener","removeEventListener","Header","useFetchPostStatuses","pluginUrl","href","rel","src","alt","DragContext","initialDrag","isDragging","currentIndex","newIndex","overUnscheduled","dragReducer","draggedOver","Day","day","monthName","dragOver","setDragOver","draggedPost","isUnscheduled","classes","handleDragOver","isSameDay","isToday","push","isPast","join","onDragOver","onDragLeave","onDrop","initialUpdateState","updateNow","trash","updateReducer","PostLinks","user","DEBUG_MODE","edit_link","view_link","useReducer","updatePost","updatePostDispatch","postData","method","body","JSON","stringify","response","open","decode","Post","setColor","undefined","handleClick","classList","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","data-index","style","backgroundColor","scope","renderPost","PostList","renderPosts","hovered","setHovered","renderPostList","useMemo","map","droppableProps","onMouseEnter","onMouseLeave","marginBottom","placeholder","NewPostButton","DayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","allowDrag","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","slice","EditPost","draggedPostDispatch","editPost","editPostDispatch","node","useRef","setDate","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleInputChange","handleTermCheckboxChange","onSubmit","post_excerpt","timeInputLabel","showTimeInput","disabled","checked","category","term","post_tag","image","fontWeight","autoFocus","Main","AdminLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","ColorPickerPopover","presetStatusColors","popover","previous","colorValue","setColorValue","isOpen","setIsOpen","close","background","ToggleButton","toggleSelected","StatusFilters","firstUpdate","colorsChanged","setColorsChanged","currentStatusColors","isEqual","haveColorsChanged","colors","toggleStatus","Sidebar","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","getList","Provider","min","max","getTime","scroll","top","offsetTop","behavior","onDragEnd","formatted","parseISO","time","h","getHours","m","getMinutes","setHours","setMinutes","draggedPostDate","items","list","startIndex","endIndex","result","from","splice","removed","reorderUnscheduled","droppableSource","droppableDestination","sourceClone","destClone","moveItem","onDragStart","draggingUnscheduled","find","p","Number","onDragUpdate","isOverUnscheduled","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a518805.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import Widget from \"../components/common/Widget\";\nimport { omit, isEmpty, isEqual } from \"lodash\";\nimport {\n\tformat,\n\tparseISO,\n\tgetHours,\n\tgetMinutes,\n\tsetHours,\n\tsetMinutes,\n} from \"date-fns\";\n\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\n\nexport const wp =\n\tDEBUG_MODE === true\n\t\t? {\n\t\t\t\tnonce: 0,\n\t\t\t\trouteBase: \"http://localhost/wp-json/calendario/v1\",\n\t\t\t\tuser: 1,\n\t\t\t\tadminUrl: \"\",\n\t\t\t\tpluginUrl: \"//localhost/wp-content/plugins/rhdwp-calendario/\",\n\t\t\t\tpostsUrl: \"\",\n\t\t\t\ttrashUrl: \"\",\n\t\t\t\tblogUrl: \"//localhost\",\n\t\t\t\tdefaultStatusColors: {\n\t\t\t\t\tpublish: \"dodgerblue\",\n\t\t\t\t\tfuture: \"olivedrab\",\n\t\t\t\t\tdraft: \"darkgray\",\n\t\t\t\t\tpending: \"orange\",\n\t\t\t\t\tprivate: \"brown\",\n\t\t\t\t},\n\t\t\t\tpresetStatusColors: [\n\t\t\t\t\t\"darkgray\",\n\t\t\t\t\t\"violet\",\n\t\t\t\t\t\"darkorchid\",\n\t\t\t\t\t\"dodgerblue\",\n\t\t\t\t\t\"skyblue\",\n\t\t\t\t\t\"olivedrab\",\n\t\t\t\t\t\"mediumseagreen\",\n\t\t\t\t\t\"lightsalmon\",\n\t\t\t\t\t\"orange\",\n\t\t\t\t\t\"brown\",\n\t\t\t\t],\n\t\t  }\n\t\t: {\n\t\t\t\t...window.rhdReactPlugin,\n\t\t  };\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(statuses, exclude = []) {\n\tlet filtered = statuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in filtered) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Checks whether or not the user has customized the color palette.\n *\n * @param {Object} statuses\n * @returns {boolean}\n */\nexport function haveColorsChanged(statuses) {\n\tconst { defaultStatusColors } = wp;\n\tlet currentStatusColors = {};\n\tfor (const status in statuses) {\n\t\tcurrentStatusColors[status] = statuses[status].color;\n\t}\n\n\treturn !isEqual(defaultStatusColors, currentStatusColors);\n}\n\n/**\n * Filters unchanged values from a post object.\n *\n * @param {object} params  Key/value post parameters to update\n * @param {object} post The post to check against\n * @returns {object} The filtered params object\n */\n// TODO bumpy road, clean it up\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (Array.isArray(params[key])) {\n\t\t\t\tif (\n\t\t\t\t\tparams[key].length === post[key].length &&\n\t\t\t\t\tparams[key].every(\n\t\t\t\t\t\t(value, index) => value === post[key][index]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (params[key] === post[key]) {\n\t\t\t\t\tparams = omit(params, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n * Retrieves a calendar day's key (format: yyyy-MM-dd)\n *\n * @param {Date}\n * @returns {string}\n */\nexport const dayKey = (date) => format(date, dateFormat.date);\n\n/**\n *\n * @param {Date} date The target date\n * @param {*} min Start of the range\n * @param {*} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n\n/**\n *\n * @param {Post} item Dragged item // TODO figure out documenting this \"Post\" type for post arrays\n * @returns {boolean} True if unscheduled, false otherwise\n */\nexport const isDraggingUnscheduled = (item) =>\n\titem.source.droppableId === \"unscheduled\" ? true : false;\n\n/**\n *\n * @param {Post} item Dragged item // TODO figure out documenting this \"Post\" type for post arrays\n * @returns {boolean} True if dragged item is over 'unscheduled' area, false otherwise\n */\nexport const isOverUnscheduled = (item) =>\n\titem.destination.droppableId === \"unscheduled\" ? true : false;\n\n/**\n * Retrieves a list of posts.\n *\n * @param {string} id\n * @param {array|object} posts All posts\n * @returns {array} The posts list\n */\nexport const getPostList = (id, posts) => {\n\tlet list;\n\tif (id === \"unscheduled\") {\n\t\tlist = posts.unscheduled;\n\t} else {\n\t\tlist = posts.scheduled[id];\n\t}\n\n\treturn list;\n};\n\n/**\n *\n * @param {*} list\n * @param {*} startIndex\n * @param {*} endIndex\n * @returns\n */\nexport const reorderUnscheduled = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n *\n * @param {*} source\n * @param {*} destination\n * @param {*} droppableSource\n * @param {*} droppableDestination\n * @returns\n */\nexport const moveItem = (\n\tsource,\n\tdestination,\n\tdroppableSource,\n\tdroppableDestination\n) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = !isEmpty(destination) ? Array.from(destination) : [];\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tdestClone.splice(droppableDestination.index, 0, removed);\n\n\tconst result = {\n\t\t[droppableSource.droppableId]: sourceClone,\n\t\t[droppableDestination.droppableId]: destClone,\n\t\tsourceId: droppableSource.droppableId,\n\t\tdestinationId: droppableDestination.droppableId,\n\t};\n\n\treturn result;\n};\n\n/**\n *\n * @param {*} post_date\n * @param {*} droppableId\n * @param {*} overUnscheduled\n * @returns\n */\nexport const draggedPostDate = (post_date, droppableId, overUnscheduled) => {\n\tlet date, formatted;\n\n\tconsole.log(droppableId);\n\n\tif (overUnscheduled === true) {\n\t\tformatted = format(post_date, dateFormat.dateTime);\n\t} else {\n\t\tdate = parseISO(droppableId);\n\n\t\tconst time = {\n\t\t\th: getHours(post_date),\n\t\t\tm: getMinutes(post_date),\n\t\t};\n\t\tdate = setHours(date, time.h);\n\t\tdate = setMinutes(date, time.m);\n\n\t\tformatted = format(date, dateFormat.dateTime);\n\t}\n\n\treturn { date, formatted };\n};\n","import { createContext } from \"react\";\nimport { wp } from \"./lib/utils\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tpostStatuses: {},\n};\n\nconst { defaultStatusColors } = wp;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUSES\":\n\t\t\tlet statuses = action.postStatuses;\n\n\t\t\t// Don't overwrite visibility, if set\n\t\t\tfor (let status in statuses) {\n\t\t\t\tstatuses[status].visible =\n\t\t\t\t\t\"visible\" in statuses[status]\n\t\t\t\t\t\t? statuses[status].visible\n\t\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: statuses,\n\t\t\t};\n\n\t\tcase \"TOGGLE_POST_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tvisible: !state.postStatuses[action.postStatus].visible,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUS_COLOR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"RESET_POST_STATUS_COLORS\":\n\t\t\tlet reset = state.postStatuses;\n\t\t\tlet statusKeys = Object.keys(state.postStatuses);\n\n\t\t\tfor (let status of statusKeys) {\n\t\t\t\treset[status].color = defaultStatusColors[status];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: { ...reset },\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\nimport { dateFormat } from \"./lib/utils\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t\tscheduledPosts[index].post_date_day = format(\n\t\t\t\t\tscheduledPosts[index].post_date,\n\t\t\t\t\tdateFormat.date\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet scheduledByDate = groupBy(scheduledPosts, \"post_date_day\");\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start ? action.start : state.dateRange.start,\n\t\t\t\t\tend: action.end ? action.end : state.dateRange.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledByDate,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"MOVE\":\n\t\t\tlet scheduled = state.scheduled;\n\t\t\tlet unscheduled = state.unscheduled;\n\n\t\t\tif (action.sourceId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.source;\n\t\t\t} else {\n\t\t\t\tscheduled[action.sourceId] = action.source;\n\t\t\t}\n\n\t\t\tif (action.destinationId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.destination;\n\t\t\t} else {\n\t\t\t\tscheduled[action.destinationId] = action.destination;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled,\n\t\t\t\tscheduled,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { useState, useEffect, useContext /* useRef */ } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst { routeBase, nonce } = wp;\n\nconst headers = DEBUG_MODE !== true ? { \"X-WP-Nonce\": nonce } : {};\n\n/**\n * Uses localStorage to save view-specific user options.\n *\n * @param {*} defaultValue The default option value\n * @param {string} key The option key\n * @returns {[state, setter]} The useState state and setter\n */\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Date} start The range's start\n * @param {Date} end The range's end\n * @returns {boolean} The current loading state\n */\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/posts/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'unscheduled' posts from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/posts/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves the set of post statuses from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchPostStatuses = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\ttype: \"SET_POST_STATUSES\",\n\t\t\t\t\tpostStatuses: data,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [viewOptionsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves all terms of a taxonomy\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns {boolean} The current loading state\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Object} ref The element's ref\n * @param {Function} end The handler function\n * @returns {void}\n */\nexport const useClickOutside = (ref, handler) => {\n\tuseEffect(() => {\n\t\tlet startedInside = false;\n\t\tlet startedWhenMounted = false;\n\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if `mousedown` or `touchstart` started inside ref element\n\t\t\tif (startedInside || !startedWhenMounted) return;\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) return;\n\n\t\t\thandler(event);\n\t\t};\n\n\t\tconst validateEventStart = (event) => {\n\t\t\tstartedWhenMounted = ref.current;\n\t\t\tstartedInside = ref.current && ref.current.contains(event.target);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", validateEventStart);\n\t\tdocument.addEventListener(\"touchstart\", validateEventStart);\n\t\tdocument.addEventListener(\"click\", listener);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"touchstart\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t};\n\t}, [ref, handler]);\n};\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { useFetchPostStatuses } from \"../lib/hooks\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Header({ handleTodayClick }) {\n\tuseFetchPostStatuses();\n\n\tconst { pluginUrl } = wp;\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">editorial calendar.io</h1>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"calendario__logo\"\n\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tcurrentIndex: null,\n\tnewIndex: null,\n\toverUnscheduled: false,\n};\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tcurrentIndex:\n\t\t\t\t\taction.currentIndex >= 0 ? action.currentIndex : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_CALENDAR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: initialDrag.newIndex,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { forwardRef, useContext, useState } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast, isSameDay } from \"date-fns\";\n\nimport DragContext from \"../DragContext\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tconst [dragOver, setDragOver] = useState(false);\n\tconst {\n\t\tdraggedPost: {\n\t\t\tpost: { post_date },\n\t\t\tisUnscheduled,\n\t\t},\n\t} = useContext(DragContext);\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tconst handleDragOver = () => {\n\t\tif (!isUnscheduled && isSameDay(day, post_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDragOver(true);\n\t};\n\n\tconst renderDay = () => {\n\t\tif (isToday(day)) {\n\t\t\tclasses.push(\"today\");\n\t\t}\n\n\t\tif (isPast(day) && !isToday(day)) {\n\t\t\tclasses.push(\"past\");\n\t\t}\n\n\t\tif (dragOver) {\n\t\t\tclasses.push(\"dragOver\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tref={isToday(day) ? ref : null}\n\t\t\t\tonDragOver={handleDragOver}\n\t\t\t\tonDragLeave={() => setDragOver(false)}\n\t\t\t\tonDrop={() => setDragOver(false)}\n\t\t\t>\n\t\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderDay();\n});\n\nexport default Day;\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tpost: {},\n\tparams: {},\n\tnewIndex: null,\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tpost: action.post,\n\t\t\t\tparams: action.params,\n\t\t\t\tnewIndex: action.newIndex,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { wp } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nexport default function PostLinks({ post, className, unscheduled }) {\n\tconst { routeBase, user, nonce, DEBUG_MODE } = wp;\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}/${user}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}/${user}`;\n\t\t\t}\n\n\t\t\tlet headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\tuser,\n\t\tnonce,\n\t\trouteBase,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t\tDEBUG_MODE,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={`postLinks ${className}`}>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</button>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>\n\t\t\t\tdelete_forever\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\n\tconst [color, setColor] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (postStatuses === undefined || isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColor(postStatuses[post.post_status].color);\n\n\t\treturn () => {\n\t\t\tsetColor(\"\");\n\t\t};\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\n\t\tif (\n\t\t\t(unscheduled === false &&\n\t\t\t\tpostStatuses[post.post_status].visible === true) ||\n\t\t\tunscheduled === true\n\t\t) {\n\t\t\tclasses.push(\"visible\");\n\t\t} else {\n\t\t\tclasses.push(\"hidden\");\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<Draggable draggableId={`${post.id}`} index={index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\t\t\tdata-index={index}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t\t\t\t<PostLinks\n\t\t\t\t\t\t\t\tclassName={isDragging ? \"disabled\" : \"active\"}\n\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t);\n\t};\n\n\treturn !isEmpty(postStatuses) ? renderPost() : null;\n}\n","import React, { useState, useMemo } from \"react\";\nimport Post from \"./Post\";\nimport { dateFormat } from \"../lib/utils\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nexport default function PostList({ renderPosts, className, date }) {\n\tconst [hovered, setHovered] = useState(false);\n\n\tconst droppableId =\n\t\tdate === false ? \"unscheduled\" : format(date, dateFormat.date);\n\n\tconst posts = () => {\n\t\tif (isEmpty(renderPosts)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn renderPosts.map((post, index) => (\n\t\t\t<Post\n\t\t\t\tpost={post}\n\t\t\t\tkey={post.id}\n\t\t\t\tindex={index}\n\t\t\t\tunscheduled={droppableId === \"unscheduled\" ? true : false}\n\t\t\t/>\n\t\t));\n\t};\n\n\tconst renderPostList = useMemo(posts, [renderPosts, droppableId]);\n\n\treturn (\n\t\t<Droppable droppableId={droppableId}>\n\t\t\t{(provided, snapshot) => (\n\t\t\t\t<ul\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\tclassName={`postList ${className}`}\n\t\t\t\t\tonMouseEnter={() => setHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setHovered(false)}\n\t\t\t\t\tstyle={hovered ? { marginBottom: 0 } : null}\n\t\t\t\t>\n\t\t\t\t\t{renderPostList}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</Droppable>\n\t);\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport DragContext from \"../DragContext\";\n\nexport default function DayPosts({ posts, date, title }) {\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\n\tconst renderPostList = () => {\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t{!isDragging ? (\n\t\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t) : null}\n\t\t\t\t<PostList\n\t\t\t\t\tclassName=\"dayPosts\"\n\t\t\t\t\tdate={date}\n\t\t\t\t\trenderPosts={posts}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day < viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","// TODO CodeScene bumpy road cleanup\nimport React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { useClickOutside } from \"../lib/hooks\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\twp,\n\tfilterUnchangedParams,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\nimport DragContext from \"../DragContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nexport default function EditPost() {\n\tconst { routeBase, user, nonce } = wp;\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst {\n\t\tposts: { currentPost, taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(postStatuses, exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\n\t\treturn () => {\n\t\t\tsetAllowedStatuses({});\n\t\t};\n\t}, [date, post.unscheduled, postStatuses]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\n\t\treturn () => {\n\t\t\tsetDatePickerDisabled(false);\n\t\t};\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post and set the proper URL\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}/${user}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += `new/${user}`;\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}/${user}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\trouteBase,\n\t\tpost,\n\t\tuser,\n\t\tnonce,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t};\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(\n\t\t\t\t\tnew Date(post.post_date),\n\t\t\t\t\tdateFormat.dateTime\n\t\t\t\t),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t\ttaxonomies: post.taxonomies,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => {\n\t\teditPostDispatch({ type: \"CLEAR\" });\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\tuseClickOutside(node, closeModal);\n\n\treturn (\n\t\t<div className={`editPost ${editMode ? \"active\" : \"inactive\"}`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\t\thighlight_off\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"date_status\">\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__date\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">\n\t\t\t\t\t\t\t\t\t\t\tPost Date\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">\n\t\t\t\t\t\t\t\t\t\tPost Status\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"category\">\n\t\t\t\t\t\t\t\t\tCategories\n\t\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_tag\">\n\t\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\tpost.id === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Update\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst { blogUrl, trashUrl } = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t} = useContext(PostsContext);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\trenderPosts={unscheduled}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, {\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport { wp } from \"../../lib/utils\";\nimport { useClickOutside } from \"../../lib/hooks\";\n\nimport ViewContext from \"../../ViewContext\";\n\nimport { HexColorPicker } from \"react-colorful\";\n\nexport default function ColorPickerPopover({ color, name }) {\n\tconst { presetStatusColors } = wp;\n\tconst popover = useRef();\n\tconst previous = useRef(color);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [colorValue, setColorValue] = useState(\"\");\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (popover.current === undefined && !color) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorValue(color);\n\t}, [color]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tpopover.current === undefined ||\n\t\t\tpostStatuses[name].color === colorValue ||\n\t\t\tprevious.current === colorValue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_POST_STATUS_COLOR\",\n\t\t\tpostStatus: name,\n\t\t\tcolor: colorValue,\n\t\t});\n\n\t\tprevious.current = colorValue;\n\t}, [colorValue, name, postStatuses, viewOptionsDispatch]);\n\n\tconst close = useCallback(() => setIsOpen(false), []);\n\tuseClickOutside(popover, close);\n\n\treturn (\n\t\t<div className=\"picker\">\n\t\t\t<div\n\t\t\t\tclassName=\"swatch\"\n\t\t\t\tstyle={{ backgroundColor: colorValue }}\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t/>\n\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"popover\" ref={popover}>\n\t\t\t\t\t<HexColorPicker\n\t\t\t\t\t\tcolor={colorValue}\n\t\t\t\t\t\tonChange={setColorValue}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"picker__swatches\">\n\t\t\t\t\t\t{presetStatusColors === undefined\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: presetStatusColors.map((color) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"picker__swatch\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorValue(color)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ selected, toggleSelected, name }) {\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<button\n\t\t\t\tname={name}\n\t\t\t\tclassName={`dialog-button ${selected ? \"\" : \"disabled\"}`}\n\t\t\t\tonClick={toggleSelected}\n\t\t\t>\n\t\t\t\t{selected ? \"ON\" : \"OFF\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ColorPickerPopover from \"./common/ColorPickerPopover\";\nimport ToggleButton from \"./common/ToggleButton\";\nimport { wp, haveColorsChanged } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { routeBase } = wp;\n\tconst firstUpdate = useRef(true);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst keys = Object.keys(postStatuses);\n\tconst [colorsChanged, setColorsChanged] = useState(false);\n\n\t// Maintain state for color defaults\n\tuseEffect(() => {\n\t\tsetColorsChanged(haveColorsChanged(postStatuses));\n\t}, [postStatuses]);\n\n\t// Updates the server when the dispatch is updated (after debounce)\n\tuseEffect(() => {\n\t\tif (isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate.current === true) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// update server\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tlet colors = {};\n\t\t\tfor (let status in postStatuses) {\n\t\t\t\tcolors[status] = postStatuses[status].color;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(colors),\n\t\t\t\t});\n\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\tawait response.json();\n\n\t\t\t\t// do something else?\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [firstUpdate, routeBase, postStatuses]);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_POST_STATUS\",\n\t\t\tpostStatus: e.target.name,\n\t\t});\n\t};\n\n\tconst handleResetColors = () => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"RESET_POST_STATUS_COLORS\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((status, index) => {\n\t\t\t\t\tconst { color, name } = postStatuses[status];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${status}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ColorPickerPopover color={color} name={status} />\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\tpostStatuses[status].visible ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggleSelected={toggleStatus}\n\t\t\t\t\t\t\t\tname={status}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{colorsChanged ? (\n\t\t\t\t<button className=\"reset\" onClick={handleResetColors}>\n\t\t\t\t\tReset Colors\n\t\t\t\t</button>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\tconst { pluginUrl } = wp;\n\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Post Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"support\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul className=\"docs\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tHelp + Documentation (dummy link)\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSupport (dummy link)\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"rhdLogo\"\n\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, /*useState,*/ useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport {\n\tdateIsBetween,\n\tisDraggingUnscheduled,\n\tisOverUnscheduled,\n\treorderUnscheduled,\n\tmoveItem,\n\tfilterUnchangedParams,\n\twp,\n\tdraggedPostDate,\n\tDEBUG_MODE,\n} from \"./lib/utils\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport { updateReducer, initialUpdateState } from \"./lib/updatePost\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tconst { routeBase, user, nonce } = wp;\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\tuseEffect(() => {\n\t\tconst { post, newIndex } = updatePost;\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/posts/update/${post.id}/${user}`;\n\n\t\t\tlet headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (newIndex !== null) {\n\t\t\t\tpostData.newIndex = newIndex;\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\t// setIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\trouteBase,\n\t\tuser,\n\t\tnonce,\n\t\tupdatePost,\n\t\tdraggedPost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t]);\n\n\tconst getList = (id) => {\n\t\tlet list;\n\t\tif (id === \"unscheduled\") {\n\t\t\tlist = posts.unscheduled;\n\t\t} else {\n\t\t\tlist = posts.scheduled[id];\n\t\t}\n\n\t\treturn list;\n\t};\n\n\tconst handleTodayClick = () => {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragStart = (item) => {\n\t\tlet draggingUnscheduled = isDraggingUnscheduled(item);\n\n\t\tlet postList;\n\t\tif (draggingUnscheduled === true) {\n\t\t\tpostList = posts.unscheduled;\n\t\t} else {\n\t\t\tpostList = posts.scheduled[item.source.droppableId];\n\t\t}\n\n\t\tconst post = postList.find((p) => {\n\t\t\treturn Number(item.draggableId) === Number(p.id);\n\t\t});\n\t\tlet currentIndex = isDraggingUnscheduled(item)\n\t\t\t? item.source.draggableId\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggingUnscheduled,\n\t\t\tcurrentIndex,\n\t\t});\n\t};\n\n\tconst onDragUpdate = (item) => {\n\t\tif (item.destination === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(item);\n\n\t\t// only dispatch if an update is necessary\n\t\tif (overUnscheduled === true && draggedPost.overUnscheduled === false) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\tdraggedOver: item.destination.index,\n\t\t\t});\n\t\t} else if (\n\t\t\toverUnscheduled === false &&\n\t\t\tdraggedPost.overUnscheduled === true\n\t\t) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_CALENDAR\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragEnd = (item) => {\n\t\tconst { source, destination } = item;\n\t\tconst { post } = draggedPost;\n\n\t\t// dropped outside a list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled =\n\t\t\tdestination.droppableId === \"unscheduled\" ? true : false;\n\n\t\tconst post_date = draggedPostDate(\n\t\t\tpost.post_date,\n\t\t\tdestination.droppableId,\n\t\t\toverUnscheduled\n\t\t);\n\n\t\tif (overUnscheduled && source.droppableId === destination.droppableId) {\n\t\t\t// Reorder\n\t\t\tconst items = reorderUnscheduled(\n\t\t\t\tgetList(source.droppableId),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\tposts: items,\n\t\t\t});\n\t\t} else if (source.droppableId !== destination.droppableId) {\n\t\t\t// Move\n\t\t\tconst result = moveItem(\n\t\t\t\tgetList(source.droppableId),\n\t\t\t\tgetList(destination.droppableId),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"MOVE\",\n\t\t\t\tsource: result[source.droppableId],\n\t\t\t\tdestination: result[destination.droppableId],\n\t\t\t\tsourceId: result.sourceId,\n\t\t\t\tdestinationId: result.destinationId,\n\t\t\t});\n\t\t}\n\n\t\t// Run the update\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tpost,\n\t\t\tunscheduled: overUnscheduled,\n\t\t\tparams: { post_date: post_date.formatted },\n\t\t\tnewIndex: overUnscheduled ? destination.index : null,\n\t\t});\n\n\t\t// If doing a post edit, save the post date\n\t\tif (posts.currentPost.id === post.id) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\tfield: \"post_date\",\n\t\t\t\tvalue: post_date.date,\n\t\t\t});\n\t\t}\n\n\t\tdraggedPostDispatch({ type: \"END\" });\n\t};\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\t\tonDragUpdate={onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}