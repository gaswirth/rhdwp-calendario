{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","components/Header.js","components/Day.js","lib/updatePost.js","PostsContext.js","components/PostLinks.js","DragContext.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","nonce","routeBase","postStatuses","trashUrl","window","rhdReactPlugin","restBase","dateFormat","filterUnchangedParams","params","post","length","key","Array","isArray","every","value","index","omit","renderWidget","ViewContext","createContext","viewReducer","state","action","type","viewMode","viewRange","range","start","startOfWeek","end","endOfWeek","date","addMonths","subMonths","statuses","status","initialViewOptions","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","Header","Day","day","monthName","classes","isToday","push","isPast","join","format","initialUpdateState","updateNow","trash","unscheduled","updateReducer","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","refetch","dateRange","scheduled","trashed","taxonomies","locale","postsReducer","scheduledPosts","posts","forEach","Date","unscheduledPosts","taxonomy","terms","field","PostLinks","edit_link","view_link","postsDispatch","useReducer","updatePost","updatePostDispatch","url","postData","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","message","fetchData","open","rel","decode","DragContext","dragReducer","isDragging","draggedFrom","draggedTo","draggedOver","overUnscheduled","initialDrag","Post","allowDrag","draggedPost","draggedPostDispatch","useState","colors","setColors","setDate","color","backgroundColor","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","style","visibility","data-index","draggable","onDragStart","onDragEnd","scope","renderPost","Loading","PostList","allowDrop","loadingState","isLoading","setIsLoading","undefined","data","error","handleDragOver","overNow","isNaN","targetRect","getBoundingClientRect","mouseY","clientY","top","listItems","childNodes","itemCount","offsetTop","handleDrop","dropDate","time","h","getHours","m","getMinutes","setHours","setMinutes","listProps","onDragOver","onDrop","map","renderPostList","NewPostButton","useFetchScheduledPosts","res","useFetchTaxonomyTerms","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","slice","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleClickOutside","current","removeEventListener","addEventListener","handleInputChange","handleTermCheckboxChange","onSubmit","post_excerpt","timeInputLabel","showTimeInput","disabled","checked","Object","keys","category","term","post_tag","image","href","src","alt","fontWeight","autoFocus","Main","UnscheduledDrafts","useFetchUnscheduledPosts","StatusFilters","toggleStatus","item","borderColor","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","Provider","min","max","getTime","scroll","behavior","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3eaa643b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\n// TODO: DEV MODE\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\nexport var nonce, routeBase, postStatuses, trashUrl;\nif (DEBUG_MODE !== true) {\n\t// WP mode\n\tnonce = window.rhdReactPlugin.nonce;\n\trouteBase = window.rhdReactPlugin.restBase;\n\tpostStatuses = window.rhdReactPlugin.postStatuses;\n\ttrashUrl = window.rhdReactPlugin.trashUrl;\n} else {\n\t// non-WP mode\n\tnonce = 0;\n\trouteBase = \"http://localhost/wp-json/calendario/v1/posts\";\n\tpostStatuses = {\n\t\tpublish: {\n\t\t\tname: \"Published\",\n\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tdraft: {\n\t\t\tname: \"Draft\",\n\t\t\tbackgroundColor: \"silver\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tfuture: {\n\t\t\tname: \"Scheduled\",\n\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tpending: {\n\t\t\tname: \"Pending Review\",\n\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tprivate: {\n\t\t\tname: \"Private\",\n\t\t\tbackgroundColor: \"maroon\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t};\n\ttrashUrl = \"\";\n}\n// ODOT\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Filters unchanged values from a post object.\n *\n * @param {object} params  Key/value post parameters to update\n * @param {object} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (Array.isArray(params[key])) {\n\t\t\t\tif (\n\t\t\t\t\tparams[key].length === post[key].length &&\n\t\t\t\t\tparams[key].every(\n\t\t\t\t\t\t(value, index) => value === post[key][index]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (params[key] === post[key]) {\n\t\t\t\t\tparams = omit(params, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n *\n * @param {Date} date The target date\n * @param {*} min Start of the range\n * @param {*} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n","import { createContext } from \"react\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\nimport { postStatuses } from \"./lib/utils\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatuses: {\n\t\t\t\t\t...state.statuses,\n\t\t\t\t\t[action.status]: !state.statuses[action.status],\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nvar statuses = {};\nfor (const status in postStatuses) {\n\tstatuses[status] = true;\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tstatuses,\n};\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\n\nexport default function Header({ handleTodayClick }) {\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\tthe editorial calendorial\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import React, { forwardRef } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")} ref={isToday(day) ? ref : null}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n});\nexport default Day;\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { routeBase } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nexport default function PostLinks({ post, className, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}`;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={`postLinks ${className}`}>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</button>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>\n\t\t\t\tdelete_forever\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_SCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: null,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toverUnscheduled: false,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled, allowDrag }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging, draggedFrom, draggedTo },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { statuses },\n\t} = useContext(ViewContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (isDragging) {\n\t\t\tif (draggedTo === Number(index)) {\n\t\t\t\tclasses.push(\"dropArea\");\n\n\t\t\t\tif (draggedFrom === false) {\n\t\t\t\t\tclasses.push(\"fromNowhere\");\n\t\t\t\t} else if (draggedFrom < draggedTo) {\n\t\t\t\t\tclasses.push(\"fromAbove\");\n\t\t\t\t} else if (draggedFrom > draggedTo) {\n\t\t\t\t\tclasses.push(\"fromBelow\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tid={post.id}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tstyle={\n\t\t\t\t\tunscheduled === false && statuses[post.post_status] === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: unscheduled === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: { visibility: \"hidden\" }\n\t\t\t\t}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t\t// onMouseEnter={() => setIsHovered(true)}\n\t\t\t\t// onMouseLeave={() => setIsHovered(false)}\n\t\t\t>\n\t\t\t\t<PostLinks\n\t\t\t\t\tclassName={isDragging ? \"disabled\" : \"active\"}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t/>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","import React from \"react\";\n\nexport default function Loading({ className }) {\n\treturn (\n\t\t<div className={`loadingOverlay ${className}`}>\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format, getHours, getMinutes, setHours, setMinutes } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n\tloadingState,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post, draggedTo, draggedFrom, overUnscheduled },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (loadingState === undefined || loadingState === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading(loadingState);\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [loadingState]);\n\n\t// Fire the update!\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (draggedTo !== null) {\n\t\t\t\tpostData.draggedTo = draggedTo;\n\t\t\t}\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedTo, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag === false) return;\n\n\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\tlet overNow = Number(e.target.dataset.index);\n\n\t\t\tlet draggedOver = false;\n\t\t\tif (draggedFrom === overNow) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tdraggedOver = Number.isNaN(overNow) ? false : overNow;\n\t\t\t}\n\n\t\t\tif (draggedOver !== draggedTo) {\n\t\t\t\tif (draggedOver === false) {\n\t\t\t\t\tlet targetRect = e.currentTarget.getBoundingClientRect();\n\t\t\t\t\tlet mouseY = e.clientY - targetRect.top;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedOver = 0;\n\t\t\t\t\t} else if (mouseY >= listItems[itemCount - 1].offsetTop) {\n\t\t\t\t\t\tdraggedOver = itemCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedOver = itemCount - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedOver,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (overUnscheduled === true) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_SCHEDULED\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tlet dropDate, time, post_date;\n\n\t\t\tif (date === false) {\n\t\t\t\tpost_date = format(post.post_date, dateFormat.dateTime);\n\t\t\t} else {\n\t\t\t\tdropDate = date;\n\t\t\t\ttime = {\n\t\t\t\t\th: getHours(post.post_date),\n\t\t\t\t\tm: getMinutes(post.post_date),\n\t\t\t\t};\n\t\t\t\tdropDate = setHours(dropDate, time.h);\n\t\t\t\tdropDate = setMinutes(dropDate, time.m);\n\n\t\t\t\tpost_date = format(dropDate, dateFormat.dateTime);\n\t\t\t}\n\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date,\n\t\t\t\t},\n\t\t\t\tunscheduled: overUnscheduled,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loading className={isLoading ? \"active\" : null} />\n\t\t\t\t<ul {...listProps}>\n\t\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tunscheduled={date === false ? true : false}\n\t\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\nimport { format, isSameDay } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"../lib/utils\";\nvar headers = {};\nif (DEBUG_MODE !== true) {\n\theaders[\"X-WP-Nonce\"] = nonce;\n}\n// ODOT\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n// export const useFetchTrashedPosts = () => {\n// \tconst {\n// \t\tposts: { refetch },\n// \t\tpostsDispatch,\n// \t} = useContext(PostsContext);\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tuseEffect(() => {\n// \t\tlet url = `${routeBase}/trashed`;\n\n// \t\tconst fetchData = async () => {\n// \t\t\tsetIsLoading(true);\n\n// \t\t\ttry {\n// \t\t\t\tconst res = await fetch(url, {\n// \t\t\t\t\theaders,\n// \t\t\t\t});\n// \t\t\t\tconst data = await res.json();\n\n// \t\t\t\tpostsDispatch({\n// \t\t\t\t\ttype: \"SET_TRASHED\",\n// \t\t\t\t\tposts: data.posts,\n// \t\t\t\t});\n\n// \t\t\t\tsetIsLoading(false);\n// \t\t\t} catch (error) {\n// \t\t\t\tconsole.log(\"REST error\", error.message);\n// \t\t\t\tsetIsLoading(false);\n// \t\t\t}\n// \t\t};\n\n// \t\tfetchData();\n\n// \t\treturn () => {\n// \t\t\tsetIsLoading(false);\n// \t\t};\n// \t}, [postsDispatch, refetch]);\n\n// \treturn isLoading;\n// };\n\n/**\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({\n\tposts,\n\tdate,\n\tallowDrag,\n\tallowDrop,\n\ttitle,\n\tloadingState,\n}) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t\tloadingState,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost, taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post and set the proper URL\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tuseEffect(() => {\n\t\tif (editMode === false) return;\n\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\tcloseModal();\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [editMode, currentPost, postsDispatch, closeModal]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(\n\t\t\t\t\tnew Date(post.post_date),\n\t\t\t\t\tdateFormat.dateTime\n\t\t\t\t),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t\ttaxonomies: post.taxonomies,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => {\n\t\teditPostDispatch({ type: \"CLEAR\" });\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\thighlight_off\n\t\t\t\t\t</button>\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"date_status\">\n\t\t\t\t\t\t\t<div className=\"fieldGroup__date\">\n\t\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">Post Status</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t<label htmlFor=\"category\">\n\t\t\t\t\t\t\t\tCategories\n\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<label htmlFor=\"post_tag\">\n\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t<ViewOptions className=\"view__options\" />\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\nimport { trashUrl } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tconst isLoading = useFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t\tloadingState={isLoading}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<a className=\"trashLink\" rel=\"noreferrer\" href={`${trashUrl}`} target=\"_blank\">\n\t\t\t\tTrashed Posts <span className=\"icon\">open_in_new</span>\n\t\t\t</a>\n\t\t</>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\tconst {\n\t\tviewOptions: { statuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_STATUS\",\n\t\t\tstatus: e.target.name,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`dot ${\n\t\t\t\t\t\t\t\t\tstatuses[item] ? \"visible\" : \"hidden\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tname={item}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tstatuses[item] === true\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={toggleStatus}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Filter by Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Dev Links + Info\",\n\t\t\t\t\t\"dev\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReadme\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tGitHub:{\" \"}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tgaswirth/rhdwp-calendario\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport { dateIsBetween } from \"./lib/utils\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\t// TODO add/save user filtered statuses here?\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tfunction handleTodayClick() {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n// ODOT\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}