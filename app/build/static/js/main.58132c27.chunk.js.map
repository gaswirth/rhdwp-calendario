{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","components/Header.js","components/Day.js","lib/updatePost.js","PostsContext.js","components/PostLinks.js","DragContext.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","wp","window","rhdReactPlugin","dateFormat","filterUnchangedParams","params","post","length","key","Array","isArray","every","value","index","omit","renderWidget","postStatuses","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","statuses","status","initializeStatuses","viewReducer","state","action","type","range","startOfWeek","endOfWeek","date","addMonths","subMonths","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","Header","Day","day","monthName","classes","isToday","push","isPast","join","format","initialUpdateState","updateNow","trash","unscheduled","updateReducer","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","refetch","dateRange","scheduled","trashed","taxonomies","locale","postsReducer","scheduledPosts","posts","forEach","Date","unscheduledPosts","taxonomy","terms","field","PostLinks","routeBase","edit_link","view_link","postsDispatch","useReducer","updatePost","updatePostDispatch","url","postData","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","message","fetchData","open","rel","decode","DragContext","dragReducer","isDragging","draggedFrom","draggedTo","draggedOver","overUnscheduled","initialDrag","Post","allowDrag","draggedPost","draggedPostDispatch","useState","setDate","color","backgroundColor","colors","setColors","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","style","visibility","data-index","draggable","onDragStart","onDragEnd","scope","renderPost","Loading","PostList","allowDrop","loadingState","nonce","isLoading","setIsLoading","undefined","data","error","handleDragOver","overNow","isNaN","targetRect","getBoundingClientRect","mouseY","clientY","top","listItems","childNodes","itemCount","offsetTop","handleDrop","dropDate","time","h","getHours","m","getMinutes","setHours","setMinutes","listProps","onDragOver","onDrop","map","renderPostList","NewPostButton","useFetchScheduledPosts","res","useFetchTaxonomyTerms","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","slice","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleClickOutside","current","removeEventListener","addEventListener","handleInputChange","handleTermCheckboxChange","onSubmit","post_excerpt","timeInputLabel","showTimeInput","disabled","checked","Object","keys","category","term","post_tag","image","href","src","alt","fontWeight","autoFocus","Main","AdminLinks","wpLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","StatusFilters","toggleStatus","item","borderColor","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","Provider","min","max","getTime","scroll","behavior","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58132c27.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\n\nexport const wp =\n\tDEBUG_MODE !== true\n\t\t? {\n\t\t\t\t...window.rhdReactPlugin,\n\t\t  }\n\t\t: {\n\t\t\t\tnonce: 0,\n\t\t\t\trouteBase: \"http://localhost/wp-json/calendario/v1/posts\",\n\t\t\t\tpostStatuses: {\n\t\t\t\t\tpublish: {\n\t\t\t\t\t\tname: \"Published\",\n\t\t\t\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t},\n\t\t\t\t\tdraft: {\n\t\t\t\t\t\tname: \"Draft\",\n\t\t\t\t\t\tbackgroundColor: \"silver\",\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t},\n\t\t\t\t\tfuture: {\n\t\t\t\t\t\tname: \"Scheduled\",\n\t\t\t\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t},\n\t\t\t\t\tpending: {\n\t\t\t\t\t\tname: \"Pending Review\",\n\t\t\t\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t},\n\t\t\t\t\tprivate: {\n\t\t\t\t\t\tname: \"Private\",\n\t\t\t\t\t\tbackgroundColor: \"maroon\",\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\twpLinks: {\n\t\t\t\t\tadminUrl: \"\",\n\t\t\t\t\tpostsUrl: \"\",\n\t\t\t\t\ttrashUrl: \"\",\n\t\t\t\t\tblogUrl: \"//localhost\",\n\t\t\t\t},\n\t\t  };\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = wp.postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in wp.postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Filters unchanged values from a post object.\n *\n * @param {object} params  Key/value post parameters to update\n * @param {object} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (Array.isArray(params[key])) {\n\t\t\t\tif (\n\t\t\t\t\tparams[key].length === post[key].length &&\n\t\t\t\t\tparams[key].every(\n\t\t\t\t\t\t(value, index) => value === post[key][index]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (params[key] === post[key]) {\n\t\t\t\t\tparams = omit(params, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n *\n * @param {Date} date The target date\n * @param {*} min Start of the range\n * @param {*} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n","import { createContext } from \"react\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\nimport { wp } from \"./lib/utils\";\n\nconst { postStatuses } = wp;\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nconst initializeStatuses = () => {\n\tvar statuses = {};\n\tfor (const status in postStatuses) {\n\t\tstatuses[status] = true;\n\t}\n\treturn statuses;\n};\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tstatuses: initializeStatuses(),\n};\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatuses: {\n\t\t\t\t\t...state.statuses,\n\t\t\t\t\t[action.status]: !state.statuses[action.status],\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\n\nexport default function Header({ handleTodayClick }) {\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\tthe editorial calendorial\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import React, { forwardRef } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")} ref={isToday(day) ? ref : null}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n});\nexport default Day;\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { wp } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\n// const inlineLimit = 150;\n\nexport default function PostLinks({\n\tpost,\n\tclassName,\n\tunscheduled,\n\t// parentSize,\n\t// parentBg,\n}) {\n\tconst { routeBase } = wp;\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\t// const { width, height } = parentSize;\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}`;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\trouteBase,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`postLinks ${className}`}\n\t\t\t// style={width >= inlineLimit ? {} : { backgroundColor: parentBg }}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</button>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>\n\t\t\t\tdelete_forever\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_SCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: null,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toverUnscheduled: false,\n};\n","// TODO uncomment useRef/useDimension etc for small-post hover menu handling\nimport React, { useContext, useEffect, useState /* useRef */ } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { wp } from \"../lib/utils\";\n// import { useDimension } from \"../lib/hooks\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled, allowDrag }) {\n\tconst { postStatuses } = wp;\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging, draggedFrom, draggedTo },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { statuses },\n\t} = useContext(ViewContext);\n\t// const postRef = useRef(null);\n\n\tconst [date, setDate] = useState(new Date());\n\tconst [colors, setColors] = useState({ color: \"\", backgroundColor: \"\" });\n\t// const { width, height } = useDimension(postRef);\n\tconst { color, backgroundColor } = colors;\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (isDragging) {\n\t\t\tif (draggedTo === Number(index)) {\n\t\t\t\tclasses.push(\"dropArea\");\n\n\t\t\t\tif (draggedFrom === false) {\n\t\t\t\t\tclasses.push(\"fromNowhere\");\n\t\t\t\t} else if (draggedFrom < draggedTo) {\n\t\t\t\t\tclasses.push(\"fromAbove\");\n\t\t\t\t} else if (draggedFrom > draggedTo) {\n\t\t\t\t\tclasses.push(\"fromBelow\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\t// ref={postRef}\n\t\t\t\tid={post.id}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tstyle={\n\t\t\t\t\tunscheduled === false && statuses[post.post_status] === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: unscheduled === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: { visibility: \"hidden\" }\n\t\t\t\t}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<PostLinks\n\t\t\t\t\tclassName={isDragging ? \"disabled\" : \"active\"}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t\t// parentSize={{ width, height }}\n\t\t\t\t\t// parentBg={backgroundColor}\n\t\t\t\t/>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: backgroundColor,\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","import React from \"react\";\n\nexport default function Loading({ className }) {\n\treturn (\n\t\t<div className={`loadingOverlay ${className}`}>\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport {\n\tdateFormat,\n\tfilterUnchangedParams,\n\twp,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format, getHours, getMinutes, setHours, setMinutes } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n\tloadingState,\n}) {\n\tconst { routeBase, nonce } = wp;\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post, draggedTo, draggedFrom, overUnscheduled },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (loadingState === undefined || loadingState === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading(loadingState);\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [loadingState]);\n\n\t// Fire the update!\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (draggedTo !== null) {\n\t\t\t\tpostData.draggedTo = draggedTo;\n\t\t\t}\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\trouteBase,\n\t\tnonce,\n\t\tupdatePost,\n\t\tdraggedTo,\n\t\tdraggedPostDispatch,\n\t\tpost,\n\t\tpostsDispatch,\n\t]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag === false) return;\n\n\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\tlet overNow = Number(e.target.dataset.index);\n\n\t\t\tlet draggedOver = false;\n\t\t\tif (draggedFrom === overNow) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tdraggedOver = Number.isNaN(overNow) ? false : overNow;\n\t\t\t}\n\n\t\t\tif (draggedOver !== draggedTo) {\n\t\t\t\tif (draggedOver === false) {\n\t\t\t\t\tlet targetRect = e.currentTarget.getBoundingClientRect();\n\t\t\t\t\tlet mouseY = e.clientY - targetRect.top;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedOver = 0;\n\t\t\t\t\t} else if (mouseY >= listItems[itemCount - 1].offsetTop) {\n\t\t\t\t\t\tdraggedOver = itemCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedOver = itemCount - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedOver,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (overUnscheduled === true) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_SCHEDULED\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tlet dropDate, time, post_date;\n\n\t\t\tif (date === false) {\n\t\t\t\tpost_date = format(post.post_date, dateFormat.dateTime);\n\t\t\t} else {\n\t\t\t\tdropDate = date;\n\t\t\t\ttime = {\n\t\t\t\t\th: getHours(post.post_date),\n\t\t\t\t\tm: getMinutes(post.post_date),\n\t\t\t\t};\n\t\t\t\tdropDate = setHours(dropDate, time.h);\n\t\t\t\tdropDate = setMinutes(dropDate, time.m);\n\n\t\t\t\tpost_date = format(dropDate, dateFormat.dateTime);\n\t\t\t}\n\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date,\n\t\t\t\t},\n\t\t\t\tunscheduled: overUnscheduled,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loading className={isLoading ? \"active\" : null} />\n\t\t\t\t<ul {...listProps}>\n\t\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tunscheduled={date === false ? true : false}\n\t\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext, useRef } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format, isSameDay } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nconst { routeBase, nonce } = wp;\n\nconst headers = DEBUG_MODE !== true ? { \"X-WP-Nonce\": nonce } : {};\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\nexport const useDimension = (ref) => {\n\tconst [dimensions, setdDimensions] = useState({ width: 0, height: 0 });\n\tconst resizeObserverRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tresizeObserverRef.current = new ResizeObserver((entries = []) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tconst { width, height } = entry.contentRect;\n\t\t\t\tsetdDimensions({ width, height });\n\t\t\t});\n\t\t});\n\n\t\tif (ref.current) resizeObserverRef.current.observe(ref.current);\n\n\t\treturn () => {\n\t\t\tif (resizeObserverRef.current)\n\t\t\t\tresizeObserverRef.current.disconnect();\n\t\t};\n\t}, [ref]);\n\n\treturn dimensions;\n};\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({\n\tposts,\n\tdate,\n\tallowDrag,\n\tallowDrop,\n\ttitle,\n\tloadingState,\n}) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t\tloadingState,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\twp,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nexport default function EditPost() {\n\tconst { routeBase } = wp;\n\tconst {\n\t\tposts: { currentPost, taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post and set the proper URL\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\trouteBase,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tuseEffect(() => {\n\t\tif (editMode === false) return;\n\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\tcloseModal();\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [editMode, currentPost, postsDispatch, closeModal]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(\n\t\t\t\t\tnew Date(post.post_date),\n\t\t\t\t\tdateFormat.dateTime\n\t\t\t\t),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t\ttaxonomies: post.taxonomies,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => {\n\t\teditPostDispatch({ type: \"CLEAR\" });\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\thighlight_off\n\t\t\t\t\t</button>\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"date_status\">\n\t\t\t\t\t\t\t<div className=\"fieldGroup__date\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">Post Status</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t<label htmlFor=\"category\">\n\t\t\t\t\t\t\t\tCategories\n\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<label htmlFor=\"post_tag\">\n\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t<ViewOptions className=\"view__options\" />\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst {\n\t\twpLinks: { blogUrl, trashUrl },\n\t} = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tconst isLoading = useFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t\tloadingState={isLoading}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport { wp } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { postStatuses } = wp;\n\tconst keys = Object.keys(postStatuses);\n\tconst {\n\t\tviewOptions: { statuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_STATUS\",\n\t\t\tstatus: e.target.name,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`dot ${\n\t\t\t\t\t\t\t\t\tstatuses[item] ? \"visible\" : \"hidden\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tname={item}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tstatuses[item] === true\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={toggleStatus}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Filter by Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Development\",\n\t\t\t\t\t\"dev\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReadme\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport { dateIsBetween } from \"./lib/utils\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tfunction handleTodayClick() {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}