{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","PostsContext.js","lib/hooks.js","components/Header.js","DragContext.js","components/Day.js","lib/updatePost.js","components/PostLinks.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/common/ColorPickerPopover.js","components/common/ToggleButton.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","wp","window","rhdReactPlugin","dateFormat","filterUnchangedParams","params","post","length","key","Array","isArray","every","value","index","omit","renderWidget","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","postStatuses","defaultStatusColors","viewReducer","state","action","type","range","startOfWeek","endOfWeek","date","addMonths","subMonths","statuses","status","visible","postStatus","color","reset","Object","keys","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","unscheduled","refetch","dateRange","scheduled","trashed","taxonomies","locale","postsReducer","scheduledPosts","posts","forEach","Date","unscheduledPosts","taxonomy","terms","field","routeBase","headers","nonce","useFetchScheduledPosts","postsDispatch","useState","isLoading","setIsLoading","format","url","a","fetch","res","json","data","console","log","message","fetchData","useFetchTaxonomyTerms","isEmpty","useClickOutside","handler","startedInside","startedWhenMounted","listener","event","current","contains","validateEventStart","addEventListener","removeEventListener","Header","useFetchPostStatuses","DragContext","dragReducer","isDragging","draggedFrom","draggedTo","draggedOver","overUnscheduled","initialDrag","Day","day","monthName","dragOver","setDragOver","draggedPost","classes","handleDragOver","isSameDay","isToday","push","isPast","join","onDragOver","onDragLeave","onDrop","initialUpdateState","updateNow","trash","updateReducer","PostLinks","edit_link","view_link","useReducer","updatePost","updatePostDispatch","postData","method","body","JSON","stringify","response","open","rel","decode","Post","allowDrag","draggedPostDispatch","setDate","setColor","undefined","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","Number","dataset","handleDragEnd","handleClick","style","visibility","data-index","draggable","onDragStart","onDragEnd","backgroundColor","scope","renderPost","Loading","PostList","allowDrop","loadingState","error","overNow","isNaN","targetRect","getBoundingClientRect","mouseY","clientY","top","listItems","childNodes","itemCount","offsetTop","handleDrop","dropDate","time","h","getHours","m","getMinutes","setHours","setMinutes","listProps","map","renderPostList","NewPostButton","DayPosts","dayPosts","useDayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","slice","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleInputChange","handleTermCheckboxChange","onSubmit","post_excerpt","timeInputLabel","showTimeInput","disabled","checked","category","term","post_tag","image","href","src","alt","fontWeight","autoFocus","Main","AdminLinks","wpLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","ColorPickerPopover","presetStatusColors","popover","previous","colorValue","setColorValue","isOpen","setIsOpen","close","background","ToggleButton","toggleSelected","StatusFilters","firstUpdate","colors","toggleStatus","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","Provider","min","max","getTime","scroll","behavior","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9ae0a07.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import Widget from \"../components/common/Widget\";\nimport { omit } from \"lodash\";\n\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\n\nexport const wp =\n\tDEBUG_MODE !== true\n\t\t? {\n\t\t\t\t...window.rhdReactPlugin,\n\t\t  }\n\t\t: {\n\t\t\t\tnonce: 0,\n\t\t\t\trouteBase: \"http://localhost/wp-json/calendario/v1\",\n\t\t\t\twpLinks: {\n\t\t\t\t\tadminUrl: \"\",\n\t\t\t\t\tpostsUrl: \"\",\n\t\t\t\t\ttrashUrl: \"\",\n\t\t\t\t\tblogUrl: \"//localhost\",\n\t\t\t\t},\n\t\t\t\tdefaultStatusColors: {\n\t\t\t\t\tpublish: \"dodgerblue\",\n\t\t\t\t\tfuture: \"olivedrab\",\n\t\t\t\t\tdraft: \"darkgray\",\n\t\t\t\t\tpending: \"orange\",\n\t\t\t\t\tprivate: \"brown\",\n\t\t\t\t},\n\t\t\t\tpresetStatusColors: [\n\t\t\t\t\t\"darkgray\",\n\t\t\t\t\t\"violet\",\n\t\t\t\t\t\"darkorchid\",\n\t\t\t\t\t\"dodgerblue\",\n\t\t\t\t\t\"skyblue\",\n\t\t\t\t\t\"olivedrab\",\n\t\t\t\t\t\"mediumseagreen\",\n\t\t\t\t\t\"lightsalmon\",\n\t\t\t\t\t\"orange\",\n\t\t\t\t\t\"brown\",\n\t\t\t\t],\n\t\t  };\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(statuses, exclude = []) {\n\tlet filtered = statuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in filtered) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Filters unchanged values from a post object.\n *\n * @param {object} params  Key/value post parameters to update\n * @param {object} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (Array.isArray(params[key])) {\n\t\t\t\tif (\n\t\t\t\t\tparams[key].length === post[key].length &&\n\t\t\t\t\tparams[key].every(\n\t\t\t\t\t\t(value, index) => value === post[key][index]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (params[key] === post[key]) {\n\t\t\t\t\tparams = omit(params, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n *\n * @param {Date} date The target date\n * @param {*} min Start of the range\n * @param {*} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n","import { createContext } from \"react\";\nimport { wp } from \"./lib/utils\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tpostStatuses: {},\n};\n\nconst { defaultStatusColors } = wp;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUSES\":\n\t\t\tlet statuses = action.postStatuses;\n\n\t\t\t// Don't overwrite visibility, if set\n\t\t\tfor (let status in statuses) {\n\t\t\t\tstatuses[status].visible =\n\t\t\t\t\t\"visible\" in statuses[status]\n\t\t\t\t\t\t? statuses[status].visible\n\t\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: statuses,\n\t\t\t};\n\n\t\tcase \"TOGGLE_POST_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tvisible: !state.postStatuses[action.postStatus].visible,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUS_COLOR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"RESET_POST_STATUS_COLORS\":\n\t\t\tlet reset = state.postStatuses;\n\t\t\tlet statusKeys = Object.keys(state.postStatuses);\n\n\t\t\tfor (let status of statusKeys) {\n\t\t\t\treset[status].color = defaultStatusColors[status];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: { ...reset },\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { useState, useEffect, useContext /* useRef */ } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format, isSameDay } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nconst { routeBase, nonce } = wp;\n\nconst headers = DEBUG_MODE !== true ? { \"X-WP-Nonce\": nonce } : {};\n\n/**\n * Uses localStorage to save view-specific user options.\n *\n * @param {any} defaultValue The default option value\n * @param {string} key The option key\n * @returns {[state, setter]} The useState state and setter\n */\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n};\n\n/**\n * Get posts for a specified calendar day.\n *\n * @param {array} posts The posts\n * @param {Date} date The calendar day\n * @returns {array} The calendar day's posts\n */\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Date} start The range's start\n * @param {Date} end The range's end\n * @returns {boolean} The current loading state\n */\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/posts/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'unscheduled' posts from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/posts/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves the set of post statuses from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchPostStatuses = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\ttype: \"SET_POST_STATUSES\",\n\t\t\t\t\tpostStatuses: data,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [viewOptionsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves all terms of a taxonomy\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns {boolean} The current loading state\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Object} ref The element's ref\n * @param {Function} end The handler function\n * @returns {void}\n */\nexport const useClickOutside = (ref, handler) => {\n\tuseEffect(() => {\n\t\tlet startedInside = false;\n\t\tlet startedWhenMounted = false;\n\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if `mousedown` or `touchstart` started inside ref element\n\t\t\tif (startedInside || !startedWhenMounted) return;\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) return;\n\n\t\t\thandler(event);\n\t\t};\n\n\t\tconst validateEventStart = (event) => {\n\t\t\tstartedWhenMounted = ref.current;\n\t\t\tstartedInside = ref.current && ref.current.contains(event.target);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", validateEventStart);\n\t\tdocument.addEventListener(\"touchstart\", validateEventStart);\n\t\tdocument.addEventListener(\"click\", listener);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"touchstart\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t};\n\t}, [ref, handler]);\n};\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { useFetchPostStatuses } from \"../lib/hooks\";\n\nexport default function Header({ handleTodayClick }) {\n\tuseFetchPostStatuses();\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\teditorial calendar.io\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toverUnscheduled: false,\n};\n","import React, { forwardRef, useContext, useState } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast, isSameDay } from \"date-fns\";\n\nimport DragContext from \"../DragContext\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tconst [dragOver, setDragOver] = useState(false);\n\tconst {\n\t\tdraggedPost: {\n\t\t\tpost: { post_date },\n\t\t},\n\t} = useContext(DragContext);\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tconst handleDragOver = () => {\n\t\tif (isSameDay(day, post_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDragOver(true);\n\t};\n\n\tconst renderDay = () => {\n\t\tif (isToday(day)) {\n\t\t\tclasses.push(\"today\");\n\t\t}\n\n\t\tif (isPast(day) && !isToday(day)) {\n\t\t\tclasses.push(\"past\");\n\t\t}\n\n\t\tif (dragOver) {\n\t\t\tclasses.push(\"dragOver\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tref={isToday(day) ? ref : null}\n\t\t\t\tonDragOver={handleDragOver}\n\t\t\t\tonDragLeave={() => setDragOver(false)}\n\t\t\t\tonDrop={() => setDragOver(false)}\n\t\t\t>\n\t\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderDay();\n});\nexport default Day;\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { wp } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nexport default function PostLinks({ post, className, unscheduled }) {\n\tconst { routeBase } = wp;\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}`;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\trouteBase,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={`postLinks ${className}`}>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</button>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>\n\t\t\t\tdelete_forever\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled, allowDrag }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging, draggedFrom, draggedTo },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\n\tconst [date, setDate] = useState(new Date());\n\tconst [color, setColor] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tif (postStatuses === undefined || isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColor(postStatuses[post.post_status].color);\n\n\t\treturn () => {\n\t\t\tsetColor(\"\");\n\t\t};\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (isDragging) {\n\t\t\tif (draggedTo === Number(index)) {\n\t\t\t\tclasses.push(\"dropArea\");\n\n\t\t\t\tif (draggedFrom === false) {\n\t\t\t\t\tclasses.push(\"fromNowhere\");\n\t\t\t\t} else if (draggedFrom < draggedTo) {\n\t\t\t\t\tclasses.push(\"fromAbove\");\n\t\t\t\t} else if (draggedFrom > draggedTo) {\n\t\t\t\t\tclasses.push(\"fromBelow\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tid={post.id}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tstyle={\n\t\t\t\t\tunscheduled === false &&\n\t\t\t\t\tpostStatuses[post.post_status].visible === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: unscheduled === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: { visibility: \"hidden\" }\n\t\t\t\t}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<PostLinks\n\t\t\t\t\tclassName={isDragging ? \"disabled\" : \"active\"}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t/>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post && !isEmpty(postStatuses) ? renderPost() : null;\n}\n","import React from \"react\";\n\nexport default function Loading({ className }) {\n\treturn (\n\t\t<div className={`loadingOverlay ${className}`}>\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport {\n\tdateFormat,\n\tfilterUnchangedParams,\n\twp,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format, getHours, getMinutes, setHours, setMinutes } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n\tloadingState,\n}) {\n\tconst { routeBase, nonce } = wp;\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post, draggedTo, draggedFrom, overUnscheduled },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (loadingState === undefined || loadingState === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading(loadingState);\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [loadingState]);\n\n\t// Fire the update!\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/posts/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (draggedTo !== null) {\n\t\t\t\tpostData.draggedTo = draggedTo;\n\t\t\t}\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\trouteBase,\n\t\tnonce,\n\t\tupdatePost,\n\t\tdraggedTo,\n\t\tdraggedPostDispatch,\n\t\tpost,\n\t\tpostsDispatch,\n\t]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (\n\t\t\tallowDrag === false ||\n\t\t\t!e.currentTarget.classList.contains(\"unscheduledDrafts\")\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overNow = Number(e.target.dataset.index);\n\t\tif (draggedFrom === overNow) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet draggedOver = Number.isNaN(overNow) ? false : overNow;\n\n\t\tif (draggedOver !== draggedTo) {\n\t\t\tif (draggedOver === false) {\n\t\t\t\tlet targetRect = e.currentTarget.getBoundingClientRect();\n\t\t\t\tlet mouseY = e.clientY - targetRect.top;\n\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\tif (listItems.length === 0 || mouseY < listItems[0].offsetTop) {\n\t\t\t\t\tdraggedOver = 0;\n\t\t\t\t} else if (mouseY >= listItems[itemCount - 1].offsetTop) {\n\t\t\t\t\tdraggedOver = itemCount;\n\t\t\t\t} else {\n\t\t\t\t\tdraggedOver = itemCount - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\tdraggedOver,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tlet dropDate, time, post_date;\n\n\t\t\tif (date === false) {\n\t\t\t\tpost_date = format(post.post_date, dateFormat.dateTime);\n\t\t\t} else {\n\t\t\t\tdropDate = date;\n\t\t\t\ttime = {\n\t\t\t\t\th: getHours(post.post_date),\n\t\t\t\t\tm: getMinutes(post.post_date),\n\t\t\t\t};\n\t\t\t\tdropDate = setHours(dropDate, time.h);\n\t\t\t\tdropDate = setMinutes(dropDate, time.m);\n\n\t\t\t\tpost_date = format(dropDate, dateFormat.dateTime);\n\t\t\t}\n\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date,\n\t\t\t\t},\n\t\t\t\tunscheduled: overUnscheduled,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loading className={isLoading ? \"active\" : null} />\n\t\t\t\t<ul {...listProps}>\n\t\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tunscheduled={date === false ? true : false}\n\t\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({\n\tposts,\n\tdate,\n\tallowDrag,\n\tallowDrop,\n\ttitle,\n\tloadingState,\n}) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t\tloadingState,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { useClickOutside } from \"../lib/hooks\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\twp,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\nimport DragContext from \"../DragContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nexport default function EditPost() {\n\tconst { routeBase } = wp;\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst {\n\t\tposts: { currentPost, taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(postStatuses, exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\n\t\treturn () => {\n\t\t\tsetAllowedStatuses({});\n\t\t};\n\t}, [date, post.unscheduled, postStatuses]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\n\t\treturn () => {\n\t\t\tsetDatePickerDisabled(false);\n\t\t};\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post and set the proper URL\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\trouteBase,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t};\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(\n\t\t\t\t\tnew Date(post.post_date),\n\t\t\t\t\tdateFormat.dateTime\n\t\t\t\t),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t\ttaxonomies: post.taxonomies,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => {\n\t\teditPostDispatch({ type: \"CLEAR\" });\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\tuseClickOutside(node, closeModal);\n\n\treturn (\n\t\t<div className={`editPost ${editMode ? \"active\" : \"inactive\"}`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\t\thighlight_off\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"date_status\">\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__date\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">\n\t\t\t\t\t\t\t\t\t\t\tPost Date\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">\n\t\t\t\t\t\t\t\t\t\tPost Status\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"category\">\n\t\t\t\t\t\t\t\t\tCategories\n\t\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_tag\">\n\t\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\tpost.id === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Update\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst {\n\t\twpLinks: { blogUrl, trashUrl },\n\t} = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tconst isLoading = useFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t\tloadingState={isLoading}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, {\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport { wp } from \"../../lib/utils\";\nimport { useClickOutside } from \"../../lib/hooks\";\n\nimport ViewContext from \"../../ViewContext\";\n\nimport { HexColorPicker } from \"react-colorful\";\n\nexport default function ColorPickerPopover({ color, name }) {\n\tconst { presetStatusColors } = wp;\n\tconst popover = useRef();\n\tconst previous = useRef(color);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [colorValue, setColorValue] = useState(\"\");\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (popover.current === undefined && !color) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorValue(color);\n\t}, [color]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tpopover.current === undefined ||\n\t\t\tpostStatuses[name].color === colorValue ||\n\t\t\tprevious.current === colorValue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_POST_STATUS_COLOR\",\n\t\t\tpostStatus: name,\n\t\t\tcolor: colorValue,\n\t\t});\n\n\t\tprevious.current = colorValue;\n\t}, [colorValue, name, postStatuses, viewOptionsDispatch]);\n\n\tconst close = useCallback(() => setIsOpen(false), []);\n\tuseClickOutside(popover, close);\n\n\treturn (\n\t\t<div className=\"picker\">\n\t\t\t<div\n\t\t\t\tclassName=\"swatch\"\n\t\t\t\tstyle={{ backgroundColor: colorValue }}\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t/>\n\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"popover\" ref={popover}>\n\t\t\t\t\t<HexColorPicker\n\t\t\t\t\t\tcolor={colorValue}\n\t\t\t\t\t\tonChange={setColorValue}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"picker__swatches\">\n\t\t\t\t\t\t{presetStatusColors === undefined\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: presetStatusColors.map((color) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"picker__swatch\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorValue(color)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ selected, toggleSelected, name }) {\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<button\n\t\t\t\tname={name}\n\t\t\t\tclassName={`dialog-button ${selected ? \"\" : \"disabled\"}`}\n\t\t\t\tonClick={toggleSelected}\n\t\t\t>\n\t\t\t\t{selected ? \"ON\" : \"OFF\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport ColorPickerPopover from \"./common/ColorPickerPopover\";\nimport ToggleButton from \"./common/ToggleButton\";\nimport { wp } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { routeBase } = wp;\n\tconst firstUpdate = useRef(true);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst keys = Object.keys(postStatuses);\n\n\t// Updates the server when the dispatch is updated (after debounce)\n\tuseEffect(() => {\n\t\tif (isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate.current === true) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// update server\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tlet colors = {};\n\t\t\tfor (let status in postStatuses) {\n\t\t\t\tcolors[status] = postStatuses[status].color;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(colors),\n\t\t\t\t});\n\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\tawait response.json();\n\n\t\t\t\t// do something else?\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [firstUpdate, routeBase, postStatuses]);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_POST_STATUS\",\n\t\t\tpostStatus: e.target.name,\n\t\t});\n\t};\n\n\tconst handleResetColors = () => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"RESET_POST_STATUS_COLORS\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((status, index) => {\n\t\t\t\t\tconst { color, name } = postStatuses[status];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${status}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ColorPickerPopover color={color} name={status} />\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\tpostStatuses[status].visible ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggleSelected={toggleStatus}\n\t\t\t\t\t\t\t\tname={status}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t<button className=\"reset\" onClick={handleResetColors}>\n\t\t\t\tReset Colors\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Post Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Development\",\n\t\t\t\t\t\"dev\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReadme\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport { dateIsBetween } from \"./lib/utils\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\tfunction handleTodayClick() {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}