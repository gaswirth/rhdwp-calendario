{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","PostsContext.js","lib/hooks.js","components/Header.js","DragContext.js","components/Day.js","components/common/PostLink.js","components/PostLinks.js","components/Post.js","components/PostList.js","components/common/NewPostButton.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/EditPost.js","components/Main.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/common/ColorPickerPopover.js","components/common/ToggleButton.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","wp","window","rhdReactPlugin","dateFormat","renderWidget","dayKey","date","format","isDraggingUnscheduled","item","source","droppableId","getPostList","id","posts","unscheduled","scheduled","moveItem","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","isEmpty","splice","index","removed","destinationIndex","undefined","length","filterPostStatus","post_status","status","includes","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","postStatuses","defaultStatusColors","viewReducer","state","action","type","range","startOfWeek","endOfWeek","addMonths","subMonths","statuses","visible","postStatus","color","reset","Object","keys","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onClick","name","MainHeader","handleTodayClick","today","startOfToday","DateInput","forwardRef","ref","useEffect","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","PostsContext","initialPosts","currentPost","post_title","post_date","updatePost","updateNow","trash","params","newIndex","refetch","dateRange","trashed","taxonomies","locale","postsReducer","scheduledPosts","forEach","post","Date","post_date_day","scheduledByDate","groupBy","unscheduledPosts","sourceId","destinationId","taxonomy","terms","field","routeBase","headers","nonce","useFetchScheduledPosts","postsDispatch","useState","isLoading","setIsLoading","url","a","fetch","res","json","data","console","log","message","fetchData","useFetchTaxonomyTerms","useClickOutside","handler","startedInside","startedWhenMounted","listener","event","current","contains","validateEventStart","addEventListener","removeEventListener","Header","useFetchPostStatuses","pluginUrl","href","rel","src","alt","DragContext","initialDrag","isDragging","currentIndex","overUnscheduled","dragReducer","draggedOver","Day","day","monthName","dragOver","setDragOver","draggedPost","isUnscheduled","classes","handleDragOver","isSameDay","isToday","push","isPast","join","onDragOver","onDragLeave","onDrop","PostLink","icon","PostLinks","edit_link","view_link","open","decode","result","findIndex","Post","setColor","isHovered","setIsHovered","isMouseDown","setIsMouseDown","handleClick","classList","handleMouseDown","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","key","data-index","onMouseDown","onMouseEnter","onMouseLeave","style","backgroundColor","scope","renderPost","PostList","renderPosts","hovered","setHovered","renderPostList","useMemo","map","droppableProps","marginBottom","placeholder","NewPostButton","DayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","allowDrag","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","initialEditPost","editMode","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","slice","EditPost","useReducer","editPost","editPostDispatch","node","useRef","setDate","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","post_excerpt","image","post_taxonomies","exclude","isFuture","statusList","filtered","omit","filterStatusList","closeModal","handleInputChange","handleTermCheckboxChange","onSubmit","timeInputLabel","showTimeInput","disabled","checked","category","term","post_tag","fontWeight","autoFocus","Main","AdminLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","ColorPickerPopover","presetStatusColors","popover","previous","colorValue","setColorValue","isOpen","setIsOpen","close","background","ToggleButton","toggleSelected","StatusFilters","firstUpdate","colorsChanged","setColorsChanged","currentStatusColors","isEqual","haveColorsChanged","colors","method","body","JSON","stringify","response","toggleStatus","Sidebar","App","draggedPostDispatch","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","user","postData","Provider","min","max","getTime","scroll","top","offsetTop","behavior","onDragEnd","post_date_raw","formatted","parseISO","time","h","getHours","m","getMinutes","setHours","setMinutes","draggedPostDate","items","list","startIndex","endIndex","reorderUnscheduled","onDragStart","draggingUnscheduled","find","p","Number","onDragUpdate","isOverUnscheduled","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2eb34d0d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import Widget from \"../components/common/Widget\";\nimport { omit, isEmpty, isEqual } from \"lodash\";\nimport {\n\tformat,\n\tparseISO,\n\tgetHours,\n\tgetMinutes,\n\tsetHours,\n\tsetMinutes,\n} from \"date-fns\";\n\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\n\nexport const wp =\n\tDEBUG_MODE === true\n\t\t? {\n\t\t\t\tnonce: 0,\n\t\t\t\trouteBase: \"http://localhost/wp-json/calendario/v1\",\n\t\t\t\tuser: 1,\n\t\t\t\tadminUrl: \"\",\n\t\t\t\tpluginUrl: \"//localhost/wp-content/plugins/rhdwp-calendario/\",\n\t\t\t\tpostsUrl: \"\",\n\t\t\t\ttrashUrl: \"\",\n\t\t\t\tblogUrl: \"//localhost\",\n\t\t\t\tdefaultStatusColors: {\n\t\t\t\t\tpublish: \"dodgerblue\",\n\t\t\t\t\tfuture: \"olivedrab\",\n\t\t\t\t\tdraft: \"darkgray\",\n\t\t\t\t\tpending: \"orange\",\n\t\t\t\t\tprivate: \"brown\",\n\t\t\t\t},\n\t\t\t\tpresetStatusColors: [\n\t\t\t\t\t\"darkgray\",\n\t\t\t\t\t\"violet\",\n\t\t\t\t\t\"darkorchid\",\n\t\t\t\t\t\"dodgerblue\",\n\t\t\t\t\t\"skyblue\",\n\t\t\t\t\t\"olivedrab\",\n\t\t\t\t\t\"mediumseagreen\",\n\t\t\t\t\t\"lightsalmon\",\n\t\t\t\t\t\"orange\",\n\t\t\t\t\t\"brown\",\n\t\t\t\t],\n\t\t  }\n\t\t: {\n\t\t\t\t...window.rhdReactPlugin,\n\t\t  };\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {Array} exclude keys to exclude.\n * @return {Object} The filtered postStatuses object.\n */\nexport function filterStatusList(statuses, exclude = []) {\n\tlet filtered = statuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in filtered) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Checks whether or not the user has customized the color palette.\n *\n * @param {Object} statuses\n * @returns {boolean}\n */\nexport function haveColorsChanged(statuses) {\n\tconst { defaultStatusColors } = wp;\n\tlet currentStatusColors = {};\n\tfor (const status in statuses) {\n\t\tcurrentStatusColors[status] = statuses[status].color;\n\t}\n\n\treturn !isEqual(defaultStatusColors, currentStatusColors);\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children The widget content\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n * Retrieves a calendar day's key (format: yyyy-MM-dd)\n *\n * @param {Date}\n * @returns {string}\n */\nexport const dayKey = (date) => format(date, dateFormat.date);\n\n/**\n * Checks if a date is between 2 dates.\n *\n * @param {Date} date The target date\n * @param {Date} min Start of the range\n * @param {Date} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n\n/**\n * Determines if an item is being dragged is coming from the Unscheduled drafts area.\n *\n * @param {Post} item Dragged item\n * @returns {boolean} True if unscheduled, false otherwise\n */\nexport const isDraggingUnscheduled = (item) =>\n\titem.source.droppableId === \"unscheduled\" ? true : false;\n\n/**\n *\n * @param {Post} item Dragged item\n * @returns {boolean} True if dragged item is over 'unscheduled' area, false otherwise\n */\nexport const isOverUnscheduled = (item) =>\n\titem.destination.droppableId === \"unscheduled\" ? true : false;\n\n/**\n * Retrieves a list of posts.\n *\n * @param {string} id\n * @param {Array|Object} posts All posts\n * @returns {Array} The posts list\n */\nexport const getPostList = (id, posts) => {\n\tlet list;\n\tif (id === \"unscheduled\") {\n\t\tlist = posts.unscheduled;\n\t} else {\n\t\tlist = posts.scheduled[id];\n\t}\n\n\treturn list;\n};\n\n/**\n *\n * @param {Object|Array} list The post list\n * @param {number} startIndex\n * @param {number} endIndex\n * @returns\n */\nexport const reorderUnscheduled = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n *\n * @param {Array} source\n * @param {Array} destination\n * @param {Object} droppableSource\n * @param {string} droppableSource.droppableId List ID\n * @param {number} [droppableSource.index = null] The starting index of the item to move\n * @param {Object} droppableDestination\n * @param {string} droppableDestination.droppableId List ID\n * @param {number} [droppableDestination.index = null] The ending index of the item to move\n * @returns\n */\nexport const moveItem = (\n\tsource,\n\tdestination,\n\tdroppableSource,\n\tdroppableDestination\n) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = !isEmpty(destination) ? Array.from(destination) : [];\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tlet destinationIndex =\n\t\tdroppableDestination.index !== undefined\n\t\t\t? droppableDestination.index\n\t\t\t: !isEmpty(destination)\n\t\t\t? destination.length\n\t\t\t: 0;\n\n\tdestClone.splice(destinationIndex, 0, removed);\n\n\tconst result = {\n\t\t[droppableSource.droppableId]: sourceClone,\n\t\t[droppableDestination.droppableId]: destClone,\n\t\tsourceId: droppableSource.droppableId,\n\t\tdestinationId: droppableDestination.droppableId,\n\t};\n\n\treturn result;\n};\n\n/**\n * Filters and formats the post_date param during drag and drop operations.\n *\n * @param {Date} post_date\n * @param {string} droppableId\n * @param {boolean} overUnscheduled\n * @returns {DraggedPostDate}\n */\nexport const draggedPostDate = (post_date, droppableId, overUnscheduled) => {\n\tlet date, formatted;\n\n\tif (overUnscheduled === true) {\n\t\tformatted = format(post_date, dateFormat.dateTime);\n\t} else {\n\t\tdate = parseISO(droppableId);\n\n\t\tconst time = {\n\t\t\th: getHours(post_date),\n\t\t\tm: getMinutes(post_date),\n\t\t};\n\t\tdate = setHours(date, time.h);\n\t\tdate = setMinutes(date, time.m);\n\n\t\tformatted = format(date, dateFormat.dateTime);\n\t}\n\n\treturn { date, formatted };\n};\n\n/**\n * Converts non-allowed unscheduled post statuses to \"draft\"\n *\n * @param {string} post_status\n * @param {boolean} unscheduled\n * @returns {string} The filtered post status\n */\nexport function filterPostStatus(post_status, unscheduled) {\n\tlet allowedUnscheduledStatuses = [\"draft\", \"private\", \"pending\"];\n\tlet status = post_status;\n\n\tif (unscheduled === true) {\n\t\tstatus = allowedUnscheduledStatuses.includes(status) ? status : \"draft\";\n\t}\n\n\treturn status;\n}\n","import { createContext } from \"react\";\nimport { wp } from \"./lib/utils\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tpostStatuses: {},\n};\n\nconst { defaultStatusColors } = wp;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUSES\":\n\t\t\tlet statuses = action.postStatuses;\n\n\t\t\t// Don't overwrite visibility, if set\n\t\t\tfor (let status in statuses) {\n\t\t\t\tstatuses[status].visible =\n\t\t\t\t\t\"visible\" in statuses[status]\n\t\t\t\t\t\t? statuses[status].visible\n\t\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: statuses,\n\t\t\t};\n\n\t\tcase \"TOGGLE_POST_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tvisible: !state.postStatuses[action.postStatus].visible,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUS_COLOR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"RESET_POST_STATUS_COLORS\":\n\t\t\tlet reset = state.postStatuses;\n\t\t\tlet statusKeys = Object.keys(state.postStatuses);\n\n\t\t\tfor (let status of statusKeys) {\n\t\t\t\treset[status].color = defaultStatusColors[status];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: { ...reset },\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon viewMode__input ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon viewMode__input ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div className=\"toToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today todayButton\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\nimport { dateFormat } from \"./lib/utils\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\tupdatePost: {\n\t\tupdateNow: false,\n\t\ttrash: false,\n\t\tid: null,\n\t\tparams: {},\n\t\tnewIndex: null,\n\t\tunscheduled: false,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t\tscheduledPosts[index].post_date_day = format(\n\t\t\t\t\tscheduledPosts[index].post_date,\n\t\t\t\t\tdateFormat.date\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet scheduledByDate = groupBy(scheduledPosts, \"post_date_day\");\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start ? action.start : state.dateRange.start,\n\t\t\t\t\tend: action.end ? action.end : state.dateRange.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledByDate,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"MOVE\":\n\t\t\tlet scheduled = state.scheduled;\n\t\t\tlet unscheduled = state.unscheduled;\n\n\t\t\tif (action.sourceId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.source;\n\t\t\t} else {\n\t\t\t\tscheduled[action.sourceId] = action.source;\n\t\t\t}\n\n\t\t\tif (action.destinationId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.destination;\n\t\t\t} else {\n\t\t\t\tscheduled[action.destinationId] = action.destination;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled,\n\t\t\t\tscheduled,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tparams: action.params,\n\t\t\t\t\tnewIndex: action.newIndex,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\t...state.updatePost,\n\t\t\t\t\tupdateNow: false,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tparams: action.params,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: initialPosts.updatePost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { useState, useEffect, useContext /* useRef */ } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst { routeBase, nonce } = wp;\n\nconst headers = DEBUG_MODE !== true ? { \"X-WP-Nonce\": nonce } : {};\n\n/**\n * Uses localStorage to save view-specific user options.\n *\n * @param {*} defaultValue The default option value\n * @param {string} key The option key\n * @returns {[state, setter]} The useState state and setter\n */\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Date} start The range's start\n * @param {Date} end The range's end\n * @returns {boolean} The current loading state\n */\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/posts/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'unscheduled' posts from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/posts/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves the set of post statuses from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchPostStatuses = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\ttype: \"SET_POST_STATUSES\",\n\t\t\t\t\tpostStatuses: data,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [viewOptionsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves all terms of a taxonomy\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns {boolean} The current loading state\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Object} ref The element's ref\n * @param {Function} end The handler function\n * @returns {void}\n */\nexport const useClickOutside = (ref, handler) => {\n\tuseEffect(() => {\n\t\tlet startedInside = false;\n\t\tlet startedWhenMounted = false;\n\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if `mousedown` or `touchstart` started inside ref element\n\t\t\tif (startedInside || !startedWhenMounted) return;\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) return;\n\n\t\t\thandler(event);\n\t\t};\n\n\t\tconst validateEventStart = (event) => {\n\t\t\tstartedWhenMounted = ref.current;\n\t\t\tstartedInside = ref.current && ref.current.contains(event.target);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", validateEventStart);\n\t\tdocument.addEventListener(\"touchstart\", validateEventStart);\n\t\tdocument.addEventListener(\"click\", listener);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"touchstart\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t};\n\t}, [ref, handler]);\n};\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { useFetchPostStatuses } from \"../lib/hooks\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Header({ handleTodayClick }) {\n\tuseFetchPostStatuses();\n\n\tconst { pluginUrl } = wp;\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">editorial calendar.io</h1>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"calendario__logo\"\n\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tcurrentIndex: null,\n\tnewIndex: null,\n\toverUnscheduled: false,\n};\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tcurrentIndex:\n\t\t\t\t\taction.currentIndex >= 0 ? action.currentIndex : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_CALENDAR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: initialDrag.newIndex,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { forwardRef, useContext, useState } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast, isSameDay } from \"date-fns\";\n\nimport DragContext from \"../DragContext\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tconst [dragOver, setDragOver] = useState(false);\n\tconst {\n\t\tdraggedPost: {\n\t\t\tpost: { post_date },\n\t\t\tisUnscheduled,\n\t\t},\n\t} = useContext(DragContext);\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tconst handleDragOver = () => {\n\t\tif (!isUnscheduled && isSameDay(day, post_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDragOver(true);\n\t};\n\n\tconst renderDay = () => {\n\t\tif (isToday(day)) {\n\t\t\tclasses.push(\"today\");\n\t\t}\n\n\t\tif (isPast(day) && !isToday(day)) {\n\t\t\tclasses.push(\"past\");\n\t\t}\n\n\t\tif (dragOver) {\n\t\t\tclasses.push(\"dragOver\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tref={isToday(day) ? ref : null}\n\t\t\t\tonDragOver={handleDragOver}\n\t\t\t\tonDragLeave={() => setDragOver(false)}\n\t\t\t\tonDrop={() => setDragOver(false)}\n\t\t\t>\n\t\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderDay();\n});\n\nexport default Day;\n","import React from \"react\";\n\nexport default function PostLink({ title, icon, onClick, target, children }) {\n\treturn (\n\t\t<button\n\t\t\ttitle={title}\n\t\t\tclassName={`icon postLink icon__${icon}`}\n\t\t\tonClick={onClick}\n\t\t\ttarget={target ? target : \"\"}\n\t\t\trel=\"noreferrer\"\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostLink from \"./common/PostLink\";\nimport { getPostList, moveItem, dayKey, filterPostStatus } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function PostLinks({ post, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { posts, postsDispatch } = useContext(PostsContext);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { post_date, post_status } = post;\n\t\tconst sourceId = dayKey(post_date);\n\t\tconst destinationId = \"unscheduled\";\n\n\t\tconst result = moveItem(\n\t\t\tgetPostList(sourceId, posts),\n\t\t\tgetPostList(destinationId, posts),\n\t\t\t{ droppableId: sourceId },\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid,\n\t\t\tparams: {\n\t\t\t\tpost_status: filterPostStatus(post_status, true),\n\t\t\t},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { id, post_date } = post;\n\t\tconst sourceId = \"unscheduled\";\n\t\tconst source = getPostList(sourceId, posts);\n\t\tconst destinationId = dayKey(post_date);\n\t\tconst destination = getPostList(destinationId, posts);\n\n\t\tconst result = moveItem(\n\t\t\tsource,\n\t\t\tdestination,\n\t\t\t{\n\t\t\t\tdroppableId: sourceId,\n\t\t\t\tindex: source.findIndex((item) => item.id === id),\n\t\t\t},\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid,\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tid: id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"postLinks\">\n\t\t\t<PostLink\n\t\t\t\ticon=\"view\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</PostLink>\n\t\t\t<PostLink\n\t\t\t\ticon=\"edit\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</PostLink>\n\t\t\t{unscheduled ? (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"schedule\"\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</PostLink>\n\t\t\t) : (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"unschedule\"\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</PostLink>\n\t\t\t)}\n\t\t\t<PostLink icon=\"trash\" title=\"Trash this post\" onClick={trashPost}>\n\t\t\t\tdelete_forever\n\t\t\t</PostLink>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst [color, setColor] = useState(\"\");\n\tconst [isHovered, setIsHovered] = useState(false);\n\tconst [isMouseDown, setIsMouseDown] = useState(false);\n\n\t// Make sure isMouseDown is false when dragging\n\tuseEffect(() => {\n\t\tif (isDragging) {\n\t\t\tsetIsMouseDown(false);\n\t\t}\n\t}, [isDragging]);\n\n\tuseEffect(() => {\n\t\tif (postStatuses === undefined || isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColor(postStatuses[post.post_status].color);\n\n\t\treturn () => {\n\t\t\tsetColor(\"\");\n\t\t};\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst handleMouseDown = (e) => {\n\t\t// Close the postLinks drawer if we're clicking or dragging, but not on the drawer itself\n\t\tif (\n\t\t\t!e.target.classList.contains(\"postLinks\") &&\n\t\t\t!e.target.classList.contains(\"postLink\")\n\t\t) {\n\t\t\tsetIsMouseDown(true);\n\t\t\tsetIsHovered(false);\n\t\t}\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\n\t\tif (\n\t\t\t(unscheduled === false &&\n\t\t\t\tpostStatuses[post.post_status].visible === true) ||\n\t\t\tunscheduled === true\n\t\t) {\n\t\t\tclasses.push(\"visible\");\n\t\t} else {\n\t\t\tclasses.push(\"hidden\");\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\tif (isDragging) {\n\t\t\tclasses.push(\"dragging\");\n\t\t}\n\n\t\tif (isHovered) {\n\t\t\tclasses.push(\"hovered\");\n\t\t}\n\n\t\tif (isMouseDown) {\n\t\t\tclasses.push(\"notransition\");\n\t\t}\n\n\t\treturn (\n\t\t\t<Draggable draggableId={`${post.id}`} index={index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\t\t\tdata-index={index}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\tonMouseDown={handleMouseDown}\n\t\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<PostLinks post={post} unscheduled={unscheduled} />\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t);\n\t};\n\n\treturn !isEmpty(postStatuses) ? renderPost() : null;\n}\n","import React, { useState, useMemo } from \"react\";\nimport Post from \"./Post\";\nimport { dateFormat } from \"../lib/utils\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nexport default function PostList({ renderPosts, className, date }) {\n\tconst [hovered, setHovered] = useState(false);\n\n\tconst droppableId =\n\t\tdate === false ? \"unscheduled\" : format(date, dateFormat.date);\n\n\tconst posts = () => {\n\t\tif (isEmpty(renderPosts)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn renderPosts.map((post, index) => (\n\t\t\t<Post\n\t\t\t\tpost={post}\n\t\t\t\tkey={post.id}\n\t\t\t\tindex={index}\n\t\t\t\tunscheduled={droppableId === \"unscheduled\" ? true : false}\n\t\t\t/>\n\t\t));\n\t};\n\n\tconst renderPostList = useMemo(posts, [renderPosts, droppableId]);\n\n\treturn (\n\t\t<Droppable droppableId={droppableId}>\n\t\t\t{(provided, snapshot) => (\n\t\t\t\t<ul\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\tclassName={`postList ${className}`}\n\t\t\t\t\tonMouseEnter={() => setHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setHovered(false)}\n\t\t\t\t\tstyle={hovered ? { marginBottom: 0 } : null}\n\t\t\t\t>\n\t\t\t\t\t{renderPostList}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</Droppable>\n\t);\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport DragContext from \"../DragContext\";\n\nexport default function DayPosts({ posts, date, title }) {\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\n\tconst renderPostList = () => {\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t{!isDragging ? (\n\t\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t) : null}\n\t\t\t\t<PostList\n\t\t\t\t\tclassName=\"dayPosts\"\n\t\t\t\t\tdate={date}\n\t\t\t\t\trenderPosts={posts}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day < viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { useClickOutside } from \"../lib/hooks\";\nimport { dateFormat, filterPostStatus, filterStatusList } from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nexport default function EditPost() {\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst {\n\t\tposts: { currentPost, taxonomies, unscheduled: unscheduledPosts },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\tconst {\n\t\tid,\n\t\tpost_title,\n\t\tpost_date,\n\t\tpost_status,\n\t\tpost_excerpt,\n\t\timage,\n\t\tedit_link,\n\t\ttaxonomies: post_taxonomies,\n\t\tunscheduled,\n\t} = post;\n\n\tconsole.log(taxonomies);\n\n\tuseEffect(() => {\n\t\tif (post_date && post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(postStatuses, exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\n\t\treturn () => {\n\t\t\tsetAllowedStatuses({});\n\t\t};\n\t}, [date, unscheduled, postStatuses]);\n\n\tuseEffect(() => {\n\t\tconst { post_date, post_status } = currentPost;\n\n\t\tsetDatePickerDisabled(\n\t\t\tpost_date &&\n\t\t\t\t(isToday(post_date) || isPast(post_date)) &&\n\t\t\t\tpost_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\n\t\treturn () => {\n\t\t\tsetDatePickerDisabled(false);\n\t\t};\n\t}, [currentPost]);\n\n\tuseEffect(() => {\n\t\tconst { id } = currentPost;\n\t\tif (id > 0 || id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t};\n\t}, [currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// If unscheduled, get the current index to pass along\n\t\tconst index = unscheduled\n\t\t\t? unscheduledPosts.findIndex((item) => item.id === id)\n\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid: id,\n\t\t\tparams: {\n\t\t\t\tpost_title,\n\t\t\t\tpost_date: format(new Date(post_date), dateFormat.dateTime),\n\t\t\t\tpost_status: filterPostStatus(post_status, unscheduled),\n\t\t\t\tpost_excerpt,\n\t\t\t\ttaxonomies: post_taxonomies,\n\t\t\t},\n\t\t\tunscheduled,\n\t\t\tnewIndex: index,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tid,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t\teditPostDispatch({ type: \"CLEAR\" });\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\tuseClickOutside(node, closeModal);\n\n\treturn (\n\t\t<div className={`editPost ${editMode ? \"active\" : \"inactive\"}`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\t\thighlight_off\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t\t{id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\t\tvalue={decode(post_title, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"date_status\">\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__date\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\t\tunscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">\n\t\t\t\t\t\t\t\t\t\t\tPost Date\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={unscheduled}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">\n\t\t\t\t\t\t\t\t\t\tPost Status\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={post_status}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"category\">\n\t\t\t\t\t\t\t\t\tCategories\n\t\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_tag\">\n\t\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t(term, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term.term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm.term_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(term.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\tvalue={decode(post_excerpt, {\n\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t\t{image ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={decode(edit_link)}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\t\t\t\t\talt={`${post_title}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={id === 0 ? \"Save\" : \"Update\"}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst { blogUrl, trashUrl } = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t} = useContext(PostsContext);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\trenderPosts={unscheduled}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, {\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport { wp } from \"../../lib/utils\";\nimport { useClickOutside } from \"../../lib/hooks\";\n\nimport ViewContext from \"../../ViewContext\";\n\nimport { HexColorPicker } from \"react-colorful\";\n\nexport default function ColorPickerPopover({ color, name }) {\n\tconst { presetStatusColors } = wp;\n\tconst popover = useRef();\n\tconst previous = useRef(color);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [colorValue, setColorValue] = useState(\"\");\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (popover.current === undefined && !color) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorValue(color);\n\t}, [color]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tpopover.current === undefined ||\n\t\t\tpostStatuses[name].color === colorValue ||\n\t\t\tprevious.current === colorValue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_POST_STATUS_COLOR\",\n\t\t\tpostStatus: name,\n\t\t\tcolor: colorValue,\n\t\t});\n\n\t\tprevious.current = colorValue;\n\t}, [colorValue, name, postStatuses, viewOptionsDispatch]);\n\n\tconst close = useCallback(() => setIsOpen(false), []);\n\tuseClickOutside(popover, close);\n\n\treturn (\n\t\t<div className=\"picker\">\n\t\t\t<div\n\t\t\t\tclassName=\"swatch\"\n\t\t\t\tstyle={{ backgroundColor: colorValue }}\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t/>\n\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"popover\" ref={popover}>\n\t\t\t\t\t<HexColorPicker\n\t\t\t\t\t\tcolor={colorValue}\n\t\t\t\t\t\tonChange={setColorValue}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"picker__swatches\">\n\t\t\t\t\t\t{presetStatusColors === undefined\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: presetStatusColors.map((color) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"picker__swatch\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorValue(color)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ selected, toggleSelected, name }) {\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<button\n\t\t\t\tname={name}\n\t\t\t\tclassName={`dialog-button ${selected ? \"\" : \"disabled\"}`}\n\t\t\t\tonClick={toggleSelected}\n\t\t\t>\n\t\t\t\t{selected ? \"ON\" : \"OFF\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ColorPickerPopover from \"./common/ColorPickerPopover\";\nimport ToggleButton from \"./common/ToggleButton\";\nimport { wp, haveColorsChanged } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { routeBase } = wp;\n\tconst firstUpdate = useRef(true);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst keys = Object.keys(postStatuses);\n\tconst [colorsChanged, setColorsChanged] = useState(false);\n\n\t// Maintain state for color defaults\n\tuseEffect(() => {\n\t\tsetColorsChanged(haveColorsChanged(postStatuses));\n\t}, [postStatuses]);\n\n\t// Updates the server when the dispatch is updated (after debounce)\n\tuseEffect(() => {\n\t\tif (isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate.current === true) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// update server\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tlet colors = {};\n\t\t\tfor (let status in postStatuses) {\n\t\t\t\tcolors[status] = postStatuses[status].color;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(colors),\n\t\t\t\t});\n\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\tawait response.json();\n\n\t\t\t\t// do something else?\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [firstUpdate, routeBase, postStatuses]);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_POST_STATUS\",\n\t\t\tpostStatus: e.target.name,\n\t\t});\n\t};\n\n\tconst handleResetColors = () => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"RESET_POST_STATUS_COLORS\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((status, index) => {\n\t\t\t\t\tconst { color, name } = postStatuses[status];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${status}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ColorPickerPopover color={color} name={status} />\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\tpostStatuses[status].visible ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggleSelected={toggleStatus}\n\t\t\t\t\t\t\t\tname={status}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{colorsChanged ? (\n\t\t\t\t<button className=\"reset\" onClick={handleResetColors}>\n\t\t\t\t\tReset Colors\n\t\t\t\t</button>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\tconst { pluginUrl } = wp;\n\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Post Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"support\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul className=\"docs\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tHelp + Documentation (dummy link)\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSupport (dummy link)\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"rhdLogo\"\n\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, /*useState,*/ useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\nimport {\n\tdateIsBetween,\n\tisDraggingUnscheduled,\n\tisOverUnscheduled,\n\treorderUnscheduled,\n\tgetPostList,\n\tmoveItem,\n\twp,\n\tdraggedPostDate,\n\tDEBUG_MODE,\n\tfilterPostStatus,\n} from \"./lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tconst { unscheduled: unscheduledPosts, scheduled: scheduledPosts } = posts;\n\n\tconst { routeBase, user, nonce } = wp;\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\t// Send the update!\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tupdatePost: { updateNow, id, params, unscheduled, newIndex, trash },\n\t\t} = posts;\n\n\t\tif (updateNow === true && id !== undefined) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post, a post to trash, or an existing post,\n\t\t\t//   and set the proper URL\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (trash === true) {\n\t\t\t\turl += `trash/${id}/${user}`;\n\t\t\t} else {\n\t\t\t\tif (id === 0) {\n\t\t\t\t\turl += `new/${user}`;\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${id}/${user}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: !isEmpty(params) ? params : {},\n\t\t\t\tunscheduled,\n\t\t\t};\n\n\t\t\tif (newIndex !== null) {\n\t\t\t\tpostData.newIndex = newIndex;\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\t// setIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\trouteBase,\n\t\tuser,\n\t\tnonce,\n\t\tposts,\n\t\tdraggedPost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t]);\n\n\tconst handleTodayClick = () => {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragStart = (item) => {\n\t\tlet draggingUnscheduled = isDraggingUnscheduled(item);\n\n\t\tlet postList;\n\t\tif (draggingUnscheduled === true) {\n\t\t\tpostList = unscheduledPosts;\n\t\t} else {\n\t\t\tpostList = scheduledPosts[item.source.droppableId];\n\t\t}\n\n\t\tconst post = postList.find((p) => {\n\t\t\treturn Number(item.draggableId) === Number(p.id);\n\t\t});\n\t\tlet currentIndex = isDraggingUnscheduled(item)\n\t\t\t? item.source.draggableId\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggingUnscheduled,\n\t\t\tcurrentIndex,\n\t\t});\n\t};\n\n\tconst onDragUpdate = (item) => {\n\t\tif (item.destination === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(item);\n\n\t\t// only dispatch if an update is necessary\n\t\tif (overUnscheduled === true && draggedPost.overUnscheduled === false) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\tdraggedOver: item.destination.index,\n\t\t\t});\n\t\t} else if (\n\t\t\toverUnscheduled === false &&\n\t\t\tdraggedPost.overUnscheduled === true\n\t\t) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_CALENDAR\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragEnd = (item) => {\n\t\tconst { source, destination } = item;\n\t\tconst { post: {\n\t\t\tid,\n\t\t\tpost_date: post_date_raw,\n\t\t\tpost_status\n\t\t} } = draggedPost;\n\n\t\t// dropped outside a list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled =\n\t\t\tdestination.droppableId === \"unscheduled\" ? true : false;\n\n\t\tconst post_date = draggedPostDate(\n\t\t\tpost_date_raw,\n\t\t\tdestination.droppableId,\n\t\t\toverUnscheduled\n\t\t);\n\n\t\tif (overUnscheduled && source.droppableId === destination.droppableId) {\n\t\t\t// Reorder\n\t\t\tconst items = reorderUnscheduled(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\tposts: items,\n\t\t\t});\n\t\t} else if (source.droppableId !== destination.droppableId) {\n\t\t\t// Move\n\t\t\tconst result = moveItem(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tgetPostList(destination.droppableId, posts),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"MOVE\",\n\t\t\t\tsource: result[source.droppableId],\n\t\t\t\tdestination: result[destination.droppableId],\n\t\t\t\tsourceId: result.sourceId,\n\t\t\t\tdestinationId: result.destinationId,\n\t\t\t});\n\t\t}\n\n\t\t// Run the update\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid,\n\t\t\tunscheduled: overUnscheduled,\n\t\t\tparams: {\n\t\t\t\tpost_date: post_date.formatted,\n\t\t\t\tpost_status: filterPostStatus(\n\t\t\t\t\tpost_status,\n\t\t\t\t\toverUnscheduled\n\t\t\t\t),\n\t\t\t},\n\t\t\tnewIndex: overUnscheduled ? destination.index : null,\n\t\t});\n\n\t\t// If doing a post edit, save the post date\n\t\tif (posts.currentPost.id === id) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\tfield: \"post_date\",\n\t\t\t\tvalue: post_date.date,\n\t\t\t});\n\t\t}\n\n\t\tdraggedPostDispatch({ type: \"END\" });\n\t};\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<ViewContext.Provider value={{ viewOptions, viewOptionsDispatch }}>\n\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\t\tonDragUpdate={onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t</PostsContext.Provider>\n\t\t\t</ViewContext.Provider>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport \"./lib/typedefs\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}