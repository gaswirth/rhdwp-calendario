{"version":3,"sources":["components/common/FieldGroup.js","ViewContext.js","components/ViewOptions.js","components/common/Widget.js","lib/utils.js","components/StatusFilters.js","components/Header.js","components/CalendarListHeader.js","components/Day.js","PostsContext.js","DragContext.js","components/Post.js","lib/updatePost.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["FieldGroup","name","label","inlineLabel","children","className","htmlFor","ViewContext","createContext","viewReducer","state","action","type","viewMode","monthCount","viewRange","start","end","addMonths","subMonths","initialViewOptions","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onClick","today","startOfToday","startOfWeek","disabled","startOfDay","isSameWeek","min","onChange","Widget","title","nonce","routeBase","postStatuses","window","rhdReactPlugin","restBase","dateFormat","filterUnchangedParams","params","post","length","key","omit","renderWidget","StatusFilters","keys","Object","map","item","index","color","backgroundColor","style","Header","CalendarListHeader","preventDefault","format","Day","day","monthName","classes","isToday","push","isPast","join","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","unscheduled","refetch","dateRange","scheduled","postsReducer","scheduledPosts","posts","forEach","Date","unscheduledPosts","field","DragContext","dragReducer","isDragging","draggedFrom","originalUnscheduledOrder","updatedUnscheduledOrder","draggedTo","Set","arrayMove","initialDrag","Post","allowDrag","order","postsDispatch","draggedPost","draggedPostDispatch","useState","colors","setColors","date","setDate","useEffect","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","data-index","draggable","onDragStart","onDragEnd","decode","scope","renderPost","initialUpdateState","updateNow","delete","updateReducer","PostList","allowDrop","useReducer","updatePost","updatePostDispatch","url","postData","data","error","headers","a","fetch","method","body","JSON","stringify","response","json","console","log","message","fetchData","handleDragOver","mouseY","pageY","offsetTop","listItems","childNodes","itemCount","handleDrop","listProps","onDragOver","onDrop","renderPostList","NewPostButton","useFetchScheduledPosts","startDate","endDate","res","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","endOfWeek","renderDaysHeaderRow","useCallback","days","i","addDays","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","initialEditPost","editMode","editPostReducer","newDate","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","deletePostClicked","setDeletePostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","handleClickOutside","current","document","removeEventListener","addEventListener","handleInputChange","ref","onSubmit","post_excerpt","closeOnScroll","selected","checked","status","image","href","edit_link","rel","src","alt","fontWeight","Main","UnscheduledDrafts","useFetchUnscheduledPosts","Sidebar","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","Provider","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.034d6521.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`sidebarInput fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import { createContext } from \"react\";\nimport { addMonths, subMonths } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE_OPTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tmonthCount: action.monthCount\n\t\t\t\t\t? action.monthCount\n\t\t\t\t\t: state.monthCount,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\t// TODO see if RESET_VIEW is used...\n\t\tcase \"RESET_VIEW\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: initialViewOptions.viewRange,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tmonthCount: 1,\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n};\n","import React, { useContext } from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport {\n\tstartOfToday,\n\tstartOfDay,\n\tstartOfWeek,\n\tisSameWeek,\n\taddMonths,\n} from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode, monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleToday = () => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: viewMode === \"calendar\" ? startOfWeek(today) : today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t};\n\n\tconst handleMonthCountChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: e.target.value,\n\t\t});\n\t};\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<button\n\t\t\t\tonClick={handleToday}\n\t\t\t\tdisabled={\n\t\t\t\t\tstartOfDay(viewRange.start) === startOfToday() ||\n\t\t\t\t\tisSameWeek(viewRange.start, startOfToday())\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tJump to Today\n\t\t\t</button>\n\t\t\t<FieldGroup name=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={viewMode === \"calendar\" ? \"active \" : \"inactive\"}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t>\n\t\t\t\t\tCalendar\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={viewMode === \"list\" ? \"active \" : \"inactive\"}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t>\n\t\t\t\t\tList\n\t\t\t\t</button>\n\t\t\t</FieldGroup>\n\t\t\t<FieldGroup name=\"monthCount\" label=\"Months\" inlineLabel={true}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin={1}\n\t\t\t\t\tvalue={monthCount}\n\t\t\t\t\tonChange={handleMonthCountChange}\n\t\t\t\t\tclassName=\"mini\"\n\t\t\t\t/>\n\t\t\t</FieldGroup>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t<h3 className=\"widgetTitle\">{title}</h3>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\nexport const WPMODE = true;\n\nexport var nonce, routeBase, postStatuses;\n\nif (WPMODE === true) {\n\t// WP mode\n\tnonce = window.rhdReactPlugin.nonce; // Live\n\trouteBase = window.rhdReactPlugin.restBase; // Live\n\tpostStatuses = window.rhdReactPlugin.postStatuses; // Live\n} else {\n\t// non-WP mode\n\tnonce = 0;\n\trouteBase = \"http://localhost/wp-json/calendario/v1/posts\";\n\tpostStatuses = {\n\t\tpublish: {\n\t\t\tname: \"Publish\",\n\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tdraft: {\n\t\t\tname: \"Draft\",\n\t\t\tbackgroundColor: \"silver\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tfuture: {\n\t\t\tname: \"Future\",\n\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tpending: {\n\t\t\tname: \"Pending\",\n\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tprivate: {\n\t\t\tname: \"Private\",\n\t\t\tbackgroundColor: \"maroon\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t};\n}\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n *\n * @param {object} params  Key/value post parameters to update\n * @param {*} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (params[key] === post[key]) {\n\t\t\t\tparams = omit(params, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\nexport const fetchReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"FETCHING\":\n\t\t\treturn { ...state, status: \"fetching\" };\n\n\t\tcase \"FETCHED\":\n\t\t\treturn { ...state, status: \"fetched\", data: action.data };\n\n\t\tcase \"FETCH_ERROR\":\n\t\t\treturn { ...state, status: \"error\", error: action.data };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"dot\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport StatusFilters from \"./StatusFilters\";\n\nexport default function Header() {\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"top left\">\n\t\t\t\t\t<h1 className=\"page-title\">Calendario II: The Datening</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"top right\"></div>\n\t\t\t\t<div className=\"bottom left\">\n\t\t\t\t\t<ViewOptions />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom right\">\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { format } from \"date-fns\";\nimport { useContext } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function CalendarListHeader({ start, end }) {\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"header row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button className=\"icon dateChevron\" onClick={prevMonth}>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center\">\n\t\t\t\t<h3 className=\"viewTitle\">Scheduled Posts</h3>\n\t\t\t\t<p className=\"viewRange\">{`${format(\n\t\t\t\t\tstart,\n\t\t\t\t\tdateFormat.daylessDate\n\t\t\t\t)} \\u2014 ${format(end, dateFormat.daylessDate)}`}</p>\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button className=\"icon dateChevron\" onClick={nextMonth}>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nexport default function Day({ className, day, monthName, children }) {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\nimport arrayMove from \"array-move\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t\toriginalUnscheduledOrder: action.originalUnscheduledOrder,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\tlet updatedUnscheduledOrder = state.originalUnscheduledOrder;\n\n\t\t\tif (state.draggedTo === false) {\n\t\t\t\t// for now, just add to end of list.\n\t\t\t\t// TODO: position before/after\n\t\t\t\tupdatedUnscheduledOrder = [\n\t\t\t\t\t...new Set([...state.originalUnscheduledOrder, state.post]),\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t// reordering\n\t\t\t\tlet draggedFrom = null;\n\n\t\t\t\tif (state.draggedFrom === false) {\n\t\t\t\t\tdraggedFrom = updatedUnscheduledOrder.length;\n\n\t\t\t\t\tupdatedUnscheduledOrder = [\n\t\t\t\t\t\t...new Set([\n\t\t\t\t\t\t\t...state.originalUnscheduledOrder,\n\t\t\t\t\t\t\tstate.post,\n\t\t\t\t\t\t]),\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tdraggedFrom = state.draggedFrom;\n\t\t\t\t}\n\n\t\t\t\tif (draggedFrom !== action.draggedTo) {\n\t\t\t\t\tupdatedUnscheduledOrder = arrayMove(\n\t\t\t\t\t\tupdatedUnscheduledOrder,\n\t\t\t\t\t\tdraggedFrom,\n\t\t\t\t\t\taction.draggedTo\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedTo,\n\t\t\t\tupdatedUnscheduledOrder: updatedUnscheduledOrder,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toriginalUnscheduledOrder: [],\n\tupdatedUnscheduledOrder: [],\n};\n","import React, { useContext, useEffect, /*useRef,*/ useState } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function Post({ post, index, allowDrag, order }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPost, draggedPostDispatch } = useContext(DragContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t\toriginalUnscheduledOrder: order,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\tlet unscheduled =\n\t\t\te.target.classList.contains(\"unscheduledDrafts\") ||\n\t\t\te.target.parentNode.classList.contains(\"unscheduledDrafts\")\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled: unscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (draggedPost.isDragging) {\n\t\t\tif (\n\t\t\t\tdraggedPost.draggedTo === Number(index) &&\n\t\t\t\tdraggedPost.draggedTo !== draggedPost.draggedFrom\n\t\t\t) {\n\t\t\t\tclasses.push(\"dropArea\");\n\t\t\t}\n\n\t\t\tif (draggedPost.draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\t// ref={node}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","export const initialUpdateState = {\n\tupdateNow: false,\n\tdelete: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"DELETE\":\n\t\t\treturn {\n\t\t\t\tdelete: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext, useEffect, useReducer } from \"react\";\nimport Post from \"./Post\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\n// TODO: DEV ONLY\nimport { WPMODE } from \"../lib/utils\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\t// TODO: DEV ONLY\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (WPMODE === true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag !== false) {\n\t\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\t\tlet draggedTo = e.target.dataset.index\n\t\t\t\t\t? Number(e.target.dataset.index)\n\t\t\t\t\t: false;\n\n\t\t\t\tif (draggedTo === false) {\n\t\t\t\t\tlet mouseY = e.pageY - e.currentTarget.offsetTop;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedTo = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedTo = itemCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedTo: draggedTo,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date:\n\t\t\t\t\t\tdate === false\n\t\t\t\t\t\t\t? format(post.post_date, dateFormat.date)\n\t\t\t\t\t\t\t: format(date, dateFormat.date),\n\t\t\t\t},\n\t\t\t\tunscheduled: date === false ? true : false,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<ul {...listProps}>\n\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\torder={posts}\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { format, isSameDay } from \"date-fns\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\n// TODO: DEV MODE\nimport { WPMODE } from \"../lib/utils\";\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {};\n\t\t\tif (WPMODE === true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [start, end, postsDispatch]);\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\t// TODO: DEV MODE\n\t\tvar headers = {};\n\t\tif (WPMODE === true) {\n\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t}\n\t\t// ODOT\n\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [postsDispatch, refetch]);\n};\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({ posts, date, allowDrag, allowDrop, title }) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport CalendarListHeader from \"./CalendarListHeader\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport {\n\tformat,\n\taddDays,\n\taddMonths,\n\tstartOfWeek,\n\tendOfWeek,\n\tisFirstDayOfMonth,\n\tstartOfToday,\n} from \"date-fns\";\n\nimport { dateFormat } from \"../lib/utils\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar() {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: startOfWeek(today),\n\t\t\tend: endOfWeek(addMonths(today, monthCount)),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderCalendarHeader = () => {\n\t\treturn (\n\t\t\t<CalendarListHeader start={viewRange.start} end={viewRange.end} />\n\t\t);\n\t};\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{renderCalendarHeader()}\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"view view__calendar\">\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport CalendarListHeader from \"./CalendarListHeader\";\nimport DayPosts from \"./DayPosts\";\nimport {\n\tformat,\n\taddMonths,\n\taddDays,\n\tendOfDay,\n\tstartOfToday,\n\tisToday,\n\tisPast,\n} from \"date-fns\";\n\nimport { dateFormat } from \"../lib/utils\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List() {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\t//TODO Maybe split this into a separate monthCount for list and calendar (currently shared value)?\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\t// Set the fetch range\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tconst renderCalendarHeader = () => {\n\t\treturn (\n\t\t\t<CalendarListHeader start={viewRange.start} end={viewRange.end} />\n\t\t);\n\t};\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (viewRange.end !== \"undefined\" && viewRange.end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(viewRange.end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{renderCalendarHeader()}\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"view view__list\">\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderList()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"DATE_CHANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tpost_date: action.newDate,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\n// TODO Date/time display, add time picker\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [deletePostClicked, setDeletePostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.delete === true) {\n\t\t\t\turl += `delete/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// keep this?\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.delete,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t\t});\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [currentPost, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(new Date(post.post_date), dateFormat.date),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst deleteHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"DELETE\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetDeletePostClicked(false);\n\t};\n\n\tconst cancelHandler = () => editPostDispatch({ type: \"CLEAR\" });\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`fieldGroup__field post_date ${\n\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tcurrentPost.post_date &&\n\t\t\t\t\t\t\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\t\t\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\t\t\t\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__field unscheduled\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">Unscheduled</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"post_status\" label=\"Status\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\" label=\"Categories & Tags\">\n\t\t\t\t\t\t\t<p>Coming soon</p>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{deletePostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__delete confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={deleteHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetDeletePostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__delete\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetDeletePostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Main() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t{viewMode === \"calendar\" ? <Calendar /> : <List />}\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t{renderWidget(\n\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t<UnscheduledDrafts />\n\t\t\t)}\n\n\t\t\t{renderWidget(\n\t\t\t\t\"bugs + todo\",\n\t\t\t\t\"dev\",\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tReport issue/bug\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tGitHub:{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tgaswirth/rhdwp-calendario\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, Profiler } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\tmonthCount: 1,\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tuseEffect(() => {\n\t\t// Update the context just initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: view.monthCount,\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t\tmonthCount: viewOptions.monthCount,\n\t\t});\n\t}, [setView, viewOptions.viewMode, viewOptions.monthCount]);\n\n\tfunction mainRenderCallback(\n\t\tid,\n\t\tphase,\n\t\tactualDuration,\n\t\tbaseDuration,\n\t\tstartTime,\n\t\tcommitTime,\n\t\tinteractions\n\t) {}\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<Profiler id=\"Main\" onRender={mainRenderCallback}>\n\t\t\t\t<ViewContext.Provider\n\t\t\t\t\tvalue={{ viewOptions, viewOptionsDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t\t<Header />\n\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Main />\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</PostsContext.Provider>\n\t\t\t\t</ViewContext.Provider>\n\t\t\t</Profiler>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// DEV\nimport { WPMODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (WPMODE === true) {\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}