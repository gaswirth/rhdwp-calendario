{"version":3,"sources":["components/common/FieldGroup.js","ViewContext.js","components/ViewOptions.js","components/common/Widget.js","lib/utils.js","components/CalendarListHeader.js","components/Header.js","components/Day.js","PostsContext.js","DragContext.js","components/Post.js","lib/updatePost.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["FieldGroup","name","label","inlineLabel","children","className","htmlFor","ViewContext","createContext","viewReducer","state","action","type","viewMode","monthCount","viewRange","start","end","addMonths","subMonths","initialViewOptions","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onClick","today","startOfToday","startOfWeek","disabled","startOfDay","isSameWeek","min","onChange","Widget","title","nonce","routeBase","postStatuses","window","rhdReactPlugin","restBase","dateFormat","filterUnchangedParams","params","post","length","key","omit","renderWidget","CalendarListHeader","preventDefault","format","Header","Day","day","monthName","classes","isToday","push","isPast","join","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","unscheduled","refetch","dateRange","scheduled","postsReducer","scheduledPosts","posts","forEach","index","Date","unscheduledPosts","field","DragContext","dragReducer","isDragging","draggedFrom","originalUnscheduledOrder","updatedUnscheduledOrder","draggedTo","Set","arrayMove","initialDrag","Post","allowDrag","order","postsDispatch","draggedPost","draggedPostDispatch","useState","colors","setColors","date","setDate","useEffect","color","backgroundColor","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","data-index","draggable","onDragStart","onDragEnd","style","decode","scope","renderPost","initialUpdateState","updateNow","delete","updateReducer","PostList","allowDrop","useReducer","updatePost","updatePostDispatch","url","postData","data","error","headers","a","fetch","method","body","JSON","stringify","response","json","console","log","message","fetchData","handleDragOver","mouseY","pageY","offsetTop","listItems","childNodes","itemCount","handleDrop","listProps","onDragOver","onDrop","map","renderPostList","NewPostButton","useFetchScheduledPosts","startDate","endDate","res","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","endOfWeek","renderDaysHeaderRow","useCallback","days","i","addDays","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","initialEditPost","editMode","editPostReducer","newDate","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","deletePostClicked","setDeletePostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","handleClickOutside","current","document","removeEventListener","addEventListener","handleInputChange","ref","onSubmit","post_excerpt","closeOnScroll","selected","checked","Object","keys","status","image","href","edit_link","rel","src","alt","fontWeight","Main","UnscheduledDrafts","useFetchUnscheduledPosts","StatusFilters","item","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","Provider","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03df8620.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`sidebarInput fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import { createContext } from \"react\";\nimport { addMonths, subMonths } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE_OPTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tmonthCount: action.monthCount\n\t\t\t\t\t? action.monthCount\n\t\t\t\t\t: state.monthCount,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\t// TODO see if RESET_VIEW is used...\n\t\tcase \"RESET_VIEW\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: initialViewOptions.viewRange,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tmonthCount: 1,\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n};\n","import React, { useContext } from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport {\n\tstartOfToday,\n\tstartOfDay,\n\tstartOfWeek,\n\tisSameWeek,\n\taddMonths,\n} from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode, monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleToday = () => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: viewMode === \"calendar\" ? startOfWeek(today) : today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t};\n\n\tconst handleMonthCountChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: e.target.value,\n\t\t});\n\t};\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<button\n\t\t\t\tonClick={handleToday}\n\t\t\t\tdisabled={\n\t\t\t\t\tstartOfDay(viewRange.start) === startOfToday() ||\n\t\t\t\t\tisSameWeek(viewRange.start, startOfToday())\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tJump to Today\n\t\t\t</button>\n\t\t\t<FieldGroup name=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={viewMode === \"calendar\" ? \"active \" : \"inactive\"}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t>\n\t\t\t\t\tCalendar\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={viewMode === \"list\" ? \"active \" : \"inactive\"}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t>\n\t\t\t\t\tList\n\t\t\t\t</button>\n\t\t\t</FieldGroup>\n\t\t\t<FieldGroup name=\"monthCount\" label=\"Months\" inlineLabel={true}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin={1}\n\t\t\t\t\tvalue={monthCount}\n\t\t\t\t\tonChange={handleMonthCountChange}\n\t\t\t\t\tclassName=\"mini\"\n\t\t\t\t/>\n\t\t\t</FieldGroup>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t<h3 className=\"widgetTitle\">{title}</h3>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\n// TODO: DEV MODE\nexport const DEBUG_MODE = false; // <----- DEV MODE TOGGLE\nexport var nonce, routeBase, postStatuses;\nif (DEBUG_MODE === false) {\n\t// WP mode\n\tnonce = window.rhdReactPlugin.nonce; // Live\n\trouteBase = window.rhdReactPlugin.restBase; // Live\n\tpostStatuses = window.rhdReactPlugin.postStatuses; // Live\n} else {\n\t// non-WP mode\n\tnonce = 0;\n\trouteBase = \"http://localhost/wp-json/calendario/v1/posts\";\n\tpostStatuses = {\n\t\tpublish: {\n\t\t\tname: \"Publish\",\n\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tdraft: {\n\t\t\tname: \"Draft\",\n\t\t\tbackgroundColor: \"silver\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tfuture: {\n\t\t\tname: \"Future\",\n\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tpending: {\n\t\t\tname: \"Pending\",\n\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tprivate: {\n\t\t\tname: \"Private\",\n\t\t\tbackgroundColor: \"maroon\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t};\n}\n// ODOT\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n *\n * @param {object} params  Key/value post parameters to update\n * @param {*} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (params[key] === post[key]) {\n\t\t\t\tparams = omit(params, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\nexport const fetchReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"FETCHING\":\n\t\t\treturn { ...state, status: \"fetching\" };\n\n\t\tcase \"FETCHED\":\n\t\t\treturn { ...state, status: \"fetched\", data: action.data };\n\n\t\tcase \"FETCH_ERROR\":\n\t\t\treturn { ...state, status: \"error\", error: action.data };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { format } from \"date-fns\";\nimport { useContext } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function CalendarListHeader({ start, end }) {\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button className=\"icon dateChevron\" onClick={prevMonth}>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center\">\n\t\t\t\t<h3 className=\"viewTitle\">Scheduled Posts</h3>\n\t\t\t\t<p className=\"viewRange\">\n\t\t\t\t\t{start && end\n\t\t\t\t\t\t? `${format(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tdateFormat.daylessDate\n\t\t\t\t\t\t  )} \\u2014 ${format(end, dateFormat.daylessDate)}`\n\t\t\t\t\t\t: null}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button className=\"icon dateChevron\" onClick={nextMonth}>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport CalendarListHeader from \"./CalendarListHeader\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Header() {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<CalendarListHeader\n\t\t\t\t\t\tstart={viewRange.start}\n\t\t\t\t\t\tend={viewRange.end}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<ViewOptions />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import React from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nexport default function Day({ className, day, monthName, children }) {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\nimport arrayMove from \"array-move\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t\toriginalUnscheduledOrder: action.originalUnscheduledOrder,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\tlet updatedUnscheduledOrder = state.originalUnscheduledOrder;\n\n\t\t\tif (state.draggedTo === false) {\n\t\t\t\t// for now, just add to end of list.\n\t\t\t\t// TODO: position before/after\n\t\t\t\tupdatedUnscheduledOrder = [\n\t\t\t\t\t...new Set([...state.originalUnscheduledOrder, state.post]),\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t// reordering\n\t\t\t\tlet draggedFrom = null;\n\n\t\t\t\tif (state.draggedFrom === false) {\n\t\t\t\t\tdraggedFrom = updatedUnscheduledOrder.length;\n\n\t\t\t\t\tupdatedUnscheduledOrder = [\n\t\t\t\t\t\t...new Set([\n\t\t\t\t\t\t\t...state.originalUnscheduledOrder,\n\t\t\t\t\t\t\tstate.post,\n\t\t\t\t\t\t]),\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tdraggedFrom = state.draggedFrom;\n\t\t\t\t}\n\n\t\t\t\tif (draggedFrom !== action.draggedTo) {\n\t\t\t\t\tupdatedUnscheduledOrder = arrayMove(\n\t\t\t\t\t\tupdatedUnscheduledOrder,\n\t\t\t\t\t\tdraggedFrom,\n\t\t\t\t\t\taction.draggedTo\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedTo,\n\t\t\t\tupdatedUnscheduledOrder: updatedUnscheduledOrder,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toriginalUnscheduledOrder: [],\n\tupdatedUnscheduledOrder: [],\n};\n","import React, { useContext, useEffect, /*useRef,*/ useState } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function Post({ post, index, allowDrag, order }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPost, draggedPostDispatch } = useContext(DragContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t\toriginalUnscheduledOrder: order,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\tlet unscheduled =\n\t\t\te.target.classList.contains(\"unscheduledDrafts\") ||\n\t\t\te.target.parentNode.classList.contains(\"unscheduledDrafts\")\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled: unscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (draggedPost.isDragging) {\n\t\t\tif (\n\t\t\t\tdraggedPost.draggedTo === Number(index) &&\n\t\t\t\tdraggedPost.draggedTo !== draggedPost.draggedFrom\n\t\t\t) {\n\t\t\t\tclasses.push(\"dropArea\");\n\t\t\t}\n\n\t\t\tif (draggedPost.draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\t// ref={node}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","export const initialUpdateState = {\n\tupdateNow: false,\n\tdelete: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"DELETE\":\n\t\t\treturn {\n\t\t\t\tdelete: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext, useEffect, useReducer } from \"react\";\nimport Post from \"./Post\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE === false) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag !== false) {\n\t\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\t\tlet draggedTo = e.target.dataset.index\n\t\t\t\t\t? Number(e.target.dataset.index)\n\t\t\t\t\t: false;\n\n\t\t\t\tif (draggedTo === false) {\n\t\t\t\t\tlet mouseY = e.pageY - e.currentTarget.offsetTop;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedTo = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedTo = itemCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedTo: draggedTo,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date:\n\t\t\t\t\t\tdate === false\n\t\t\t\t\t\t\t? format(post.post_date, dateFormat.date)\n\t\t\t\t\t\t\t: format(date, dateFormat.date),\n\t\t\t\t},\n\t\t\t\tunscheduled: date === false ? true : false,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<ul {...listProps}>\n\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\torder={posts}\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { format, isSameDay } from \"date-fns\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {};\n\t\t\tif (DEBUG_MODE === false) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [start, end, postsDispatch]);\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\t// TODO: DEV MODE\n\t\tvar headers = {};\n\t\tif (DEBUG_MODE === false) {\n\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t}\n\t\t// ODOT\n\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [postsDispatch, refetch]);\n};\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({ posts, date, allowDrag, allowDrop, title }) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport {\n\tformat,\n\taddDays,\n\taddMonths,\n\tstartOfWeek,\n\tendOfWeek,\n\tisFirstDayOfMonth,\n\tstartOfToday,\n} from \"date-fns\";\n\nimport { dateFormat } from \"../lib/utils\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar() {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: startOfWeek(today),\n\t\t\tend: endOfWeek(addMonths(today, monthCount)),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"view view__calendar\">\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport {\n\tformat,\n\taddMonths,\n\taddDays,\n\tendOfDay,\n\tstartOfToday,\n\tisToday,\n\tisPast,\n} from \"date-fns\";\n\nimport { dateFormat } from \"../lib/utils\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List() {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\t//TODO Maybe split this into a separate monthCount for list and calendar (currently shared value)?\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\t// Set the fetch range\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (viewRange.end !== \"undefined\" && viewRange.end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(viewRange.end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"view view__list\">\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderList()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"DATE_CHANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tpost_date: action.newDate,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\n// TODO Date/time display, add time picker\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [deletePostClicked, setDeletePostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.delete === true) {\n\t\t\t\turl += `delete/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// keep this?\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.delete,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t\t});\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [currentPost, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(new Date(post.post_date), dateFormat.date),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst deleteHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"DELETE\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetDeletePostClicked(false);\n\t};\n\n\tconst cancelHandler = () => editPostDispatch({ type: \"CLEAR\" });\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`fieldGroup__field post_date ${\n\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tcurrentPost.post_date &&\n\t\t\t\t\t\t\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\t\t\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\t\t\t\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__field unscheduled\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">Unscheduled</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"post_status\" label=\"Status\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\" label=\"Categories & Tags\">\n\t\t\t\t\t\t\t<p>Coming soon</p>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{deletePostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__delete confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={deleteHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetDeletePostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__delete\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetDeletePostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Main() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t{viewMode === \"calendar\" ? <Calendar /> : <List />}\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"dot\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t{renderWidget(\n\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t<UnscheduledDrafts />\n\t\t\t)}\n\n\t\t\t{renderWidget(\"\", \"viewOptions noBorder\", <StatusFilters />)}\n\n\t\t\t{renderWidget(\n\t\t\t\t\"Calendario II: The Datening\",\n\t\t\t\t\"dev\",\n\t\t\t\t<>\n\t\t\t\t\t<ul\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tTODO/Readme\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReport a bug/issue\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tGitHub:{\" \"}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tgaswirth/rhdwp-calendario\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, Profiler } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\tmonthCount: 1,\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tuseEffect(() => {\n\t\t// Update the context just initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: view.monthCount,\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t\tmonthCount: viewOptions.monthCount,\n\t\t});\n\t}, [setView, viewOptions.viewMode, viewOptions.monthCount]);\n\n\tfunction mainRenderCallback(\n\t\tid,\n\t\tphase,\n\t\tactualDuration,\n\t\tbaseDuration,\n\t\tstartTime,\n\t\tcommitTime,\n\t\tinteractions\n\t) {}\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<Profiler id=\"Main\" onRender={mainRenderCallback}>\n\t\t\t\t<ViewContext.Provider\n\t\t\t\t\tvalue={{ viewOptions, viewOptionsDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t\t<Header />\n\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Main />\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</PostsContext.Provider>\n\t\t\t\t</ViewContext.Provider>\n\t\t\t</Profiler>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE === false) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n// ODOT\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}