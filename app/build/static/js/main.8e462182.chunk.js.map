{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/CalendarListHeader.js","components/Header.js","components/StatusFilters.js","components/common/FieldGroup.js","components/ViewOptions.js","components/Day.js","lib/updatePost.js","PostsContext.js","components/PostLinks.js","DragContext.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","nonce","routeBase","postStatuses","window","rhdReactPlugin","restBase","dateFormat","filterUnchangedParams","params","post","length","key","omit","renderWidget","ViewContext","createContext","viewReducer","state","action","type","viewMode","monthCount","viewRange","start","end","addMonths","subMonths","console","log","statuses","status","initialViewOptions","CalendarListHeader","viewOptionsDispatch","useContext","onClick","e","preventDefault","format","Header","viewOptions","StatusFilters","keys","Object","toggleStatus","target","name","map","item","index","color","backgroundColor","style","borderColor","FieldGroup","label","inlineLabel","htmlFor","ViewOptions","handleViewModeChange","value","today","startOfToday","startOfWeek","disabled","startOfDay","isSameWeek","min","onChange","Day","day","monthName","classes","isToday","push","isPast","join","initialUpdateState","updateNow","trash","unscheduled","updateReducer","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","refetch","dateRange","scheduled","trashed","postsReducer","scheduledPosts","posts","forEach","Date","unscheduledPosts","trashedPosts","field","PostLinks","edit_link","view_link","postsDispatch","useReducer","updatePost","updatePostDispatch","useEffect","url","postData","a","fetch","method","headers","body","JSON","stringify","response","json","message","fetchData","href","rel","decode","DragContext","dragReducer","isDragging","draggedFrom","draggedTo","draggedOver","overUnscheduled","initialDrag","Post","allowDrag","draggedPost","draggedPostDispatch","useState","colors","setColors","date","setDate","isHovered","setIsHovered","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","visibility","data-index","draggable","onDragStart","onDragEnd","onMouseEnter","onMouseLeave","scope","renderPost","Loading","PostList","allowDrop","loadingState","isLoading","setIsLoading","undefined","data","error","handleDragOver","overNow","isNaN","targetRect","getBoundingClientRect","mouseY","clientY","top","listItems","childNodes","itemCount","offsetTop","handleDrop","listProps","onDragOver","onDrop","renderPostList","NewPostButton","useFetchScheduledPosts","startDate","endDate","res","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","endOfWeek","renderDaysHeaderRow","useCallback","days","i","addDays","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","initialEditPost","editMode","editPostReducer","newDate","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleClickOutside","current","document","removeEventListener","addEventListener","handleInputChange","ref","onSubmit","post_excerpt","closeOnScroll","selected","checked","image","src","alt","fontWeight","autoFocus","Main","UnscheduledDrafts","useFetchUnscheduledPosts","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","Provider","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e462182.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\n// TODO: DEV MODE\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\nexport var nonce, routeBase, postStatuses;\nif (DEBUG_MODE !== true) {\n\t// WP mode\n\tnonce = window.rhdReactPlugin.nonce; // Live\n\trouteBase = window.rhdReactPlugin.restBase; // Live\n\tpostStatuses = window.rhdReactPlugin.postStatuses; // Live\n} else {\n\t// non-WP mode\n\tnonce = 0;\n\trouteBase = \"http://localhost/wp-json/calendario/v1/posts\";\n\tpostStatuses = {\n\t\tpublish: {\n\t\t\tname: \"Published\",\n\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tdraft: {\n\t\t\tname: \"Draft\",\n\t\t\tbackgroundColor: \"silver\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tfuture: {\n\t\t\tname: \"Scheduled\",\n\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tpending: {\n\t\t\tname: \"Pending Review\",\n\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tprivate: {\n\t\t\tname: \"Private\",\n\t\t\tbackgroundColor: \"maroon\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t};\n}\n// ODOT\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n *\n * @param {object} params  Key/value post parameters to update\n * @param {*} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (params[key] === post[key]) {\n\t\t\t\tparams = omit(params, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n","import { createContext } from \"react\";\nimport { addMonths, subMonths } from \"date-fns\";\nimport { postStatuses } from \"./lib/utils\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE_OPTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tmonthCount: action.monthCount\n\t\t\t\t\t? action.monthCount\n\t\t\t\t\t: state.monthCount,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_STATUS\":\n\t\t\tconsole.log(state.statuses);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatuses: {\n\t\t\t\t\t...state.statuses,\n\t\t\t\t\t[action.status]: !state.statuses[action.status],\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nvar statuses = {};\nfor (const status in postStatuses) {\n\tstatuses[status] = true;\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tmonthCount: 1,\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tstatuses,\n};\n","import { format } from \"date-fns\";\nimport { useContext } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function CalendarListHeader({ start, end }) {\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button className=\"icon dateChevron\" onClick={prevMonth}>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center\">\n\t\t\t\t<h3 className=\"viewTitle\">Scheduled Posts</h3>\n\t\t\t\t<p className=\"viewRange\">\n\t\t\t\t\t{start && end\n\t\t\t\t\t\t? `${format(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tdateFormat.daylessDate\n\t\t\t\t\t\t  )} \\u2014 ${format(end, dateFormat.daylessDate)}`\n\t\t\t\t\t\t: null}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button className=\"icon dateChevron\" onClick={nextMonth}>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport CalendarListHeader from \"./CalendarListHeader\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Header() {\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<CalendarListHeader start={start} end={end} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\tthe editorial calendorial\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\tconst {\n\t\tviewOptions: { statuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_STATUS\",\n\t\t\tstatus: e.target.name,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`dot ${\n\t\t\t\t\t\t\t\t\tstatuses[item] ? \"visible\" : \"hidden\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tname={item}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tstatuses[item] === true\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor, // TODO use it or lose it\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={toggleStatus}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`sidebarInput fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React, { useContext } from \"react\";\nimport StatusFilters from \"./StatusFilters\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport {\n\tstartOfToday,\n\tstartOfDay,\n\tstartOfWeek,\n\tisSameWeek,\n\taddMonths,\n} from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode, monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleToday = () => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: viewMode === \"calendar\" ? startOfWeek(today) : today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t};\n\n\tconst handleMonthCountChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: e.target.value,\n\t\t});\n\t};\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<StatusFilters />\n\t\t\t<div className=\"dateOptions\">\n\t\t\t\t<FieldGroup name=\"jumpToToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={handleToday}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\tstartOfDay(viewRange.start) === startOfToday() ||\n\t\t\t\t\t\t\tisSameWeek(viewRange.start, startOfToday())\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tJump to Today\n\t\t\t\t\t</button>\n\t\t\t\t</FieldGroup>\n\t\t\t\t<FieldGroup name=\"viewMode\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCalendar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\t\tclassName={viewMode === \"list\" ? \"active \" : \"inactive\"}\n\t\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\t>\n\t\t\t\t\t\tList\n\t\t\t\t\t</button>\n\t\t\t\t</FieldGroup>\n\t\t\t\t<FieldGroup name=\"monthCount\" label=\"Months\" inlineLabel={true}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tvalue={monthCount}\n\t\t\t\t\t\tonChange={handleMonthCountChange}\n\t\t\t\t\t\tclassName=\"mini\"\n\t\t\t\t\t/>\n\t\t\t\t</FieldGroup>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nexport default function Day({ className, day, monthName, children }) {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_TRASHED\":\n\t\t\tlet trashedPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\ttrashedPosts.forEach((post, index) => {\n\t\t\t\ttrashedPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrashed: trashedPosts,\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { routeBase } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nexport default function PostLinks({ post, className, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}`;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={`postLinks ${className}`}>\n\t\t\t<a\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\thref={view_link}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\thref={decode(edit_link)}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</a>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>delete_forever</button>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_SCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: null,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toverUnscheduled: false,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled, allowDrag }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging, draggedFrom, draggedTo },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { statuses },\n\t} = useContext(ViewContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\tconst [isHovered, setIsHovered] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet unscheduled =\n\t\t\te.target.classList.contains(\"unscheduledDrafts\") ||\n\t\t\te.target.parentNode.classList.contains(\"unscheduledDrafts\")\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (isDragging) {\n\t\t\tif (draggedTo === Number(index)) {\n\t\t\t\tclasses.push(\"dropArea\");\n\n\t\t\t\tif (draggedFrom === false) {\n\t\t\t\t\tclasses.push(\"fromNowhere\");\n\t\t\t\t} else if (draggedFrom < draggedTo) {\n\t\t\t\t\tclasses.push(\"fromAbove\");\n\t\t\t\t} else if (draggedFrom > draggedTo) {\n\t\t\t\t\tclasses.push(\"fromBelow\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tid={post.id}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tstyle={\n\t\t\t\t\tunscheduled === false && statuses[post.post_status] === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: unscheduled === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: { visibility: \"hidden\" }\n\t\t\t\t}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t>\n\t\t\t\t<PostLinks\n\t\t\t\t\tclassName={isHovered && !isDragging ? \"visible\" : \"hidden\"}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t/>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","import React from \"react\";\n\nexport default function Loading({ className }) {\n\treturn (\n\t\t<div className={`loadingOverlay ${className}`}>\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n\tloadingState,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post, draggedTo, draggedFrom, overUnscheduled },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (loadingState === undefined || loadingState === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading(loadingState);\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [loadingState]);\n\n\t// Fire the update!\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (draggedTo !== null) {\n\t\t\t\tpostData.draggedTo = draggedTo;\n\t\t\t}\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedTo, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag === false) return;\n\n\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\tlet overNow = Number(e.target.dataset.index);\n\n\t\t\tlet draggedOver = false;\n\t\t\tif (draggedFrom === overNow) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tdraggedOver = Number.isNaN(overNow) ? false : overNow;\n\t\t\t}\n\n\t\t\tif (draggedOver !== draggedTo) {\n\t\t\t\tif (draggedOver === false) {\n\t\t\t\t\tlet targetRect = e.currentTarget.getBoundingClientRect();\n\t\t\t\t\tlet mouseY = e.clientY - targetRect.top;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedOver = 0;\n\t\t\t\t\t} else if (mouseY >= listItems[itemCount - 1].offsetTop) {\n\t\t\t\t\t\tdraggedOver = itemCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedOver = itemCount - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedOver,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (overUnscheduled === true) {\n\t\t\t// Only update if necessary\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_SCHEDULED\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date:\n\t\t\t\t\t\tdate === false\n\t\t\t\t\t\t\t? format(post.post_date, dateFormat.date)\n\t\t\t\t\t\t\t: format(date, dateFormat.date),\n\t\t\t\t},\n\t\t\t\tunscheduled: overUnscheduled,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loading className={isLoading ? \"active\" : null} />\n\t\t\t\t<ul {...listProps}>\n\t\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tunscheduled={date === false ? true : false}\n\t\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { format, isSameDay } from \"date-fns\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, postsDispatch]);\n\n\treturn isLoading;\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\t// TODO: DEV MODE\n\t\tvar headers = {};\n\t\tif (DEBUG_MODE !== true) {\n\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t}\n\t\t// ODOT\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\nexport const useFetchTrashedPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/trashed`;\n\n\t\t// TODO: DEV MODE\n\t\tvar headers = {};\n\t\tif (DEBUG_MODE !== true) {\n\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t}\n\t\t// ODOT\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({\n\tposts,\n\tdate,\n\tallowDrag,\n\tallowDrop,\n\ttitle,\n\tloadingState,\n}) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t\tloadingState,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\taddMonths,\n\tstartOfWeek,\n\tendOfWeek,\n\tisFirstDayOfMonth,\n\tstartOfToday,\n} from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className }) {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: startOfWeek(today),\n\t\t\tend: endOfWeek(addMonths(today, monthCount)),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddMonths,\n\taddDays,\n\tendOfDay,\n\tstartOfToday,\n\tisToday,\n\tisPast,\n} from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled, refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: { monthCount, viewRange },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseEffect(() => {\n\t\t// Set the fetch range\n\t\tlet today = startOfToday();\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: today,\n\t\t\tend: addMonths(today, monthCount),\n\t\t});\n\t}, [refetch, monthCount, viewOptionsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (viewRange.end !== \"undefined\" && viewRange.end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(viewRange.end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderList()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"DATE_CHANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tpost_date: action.newDate,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\n// TODO Date/time display, add time picker\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO keep this?\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\tcloseModal();\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [currentPost, postsDispatch, closeModal]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(new Date(post.post_date), dateFormat.date),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => editPostDispatch({ type: \"CLEAR\" });\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\thighlight_off\n\t\t\t\t\t</button>\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`fieldGroup__field post_date ${\n\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__field unscheduled\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">Unscheduled</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"post_status\" label=\"Status\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\" label=\"Categories & Tags\">\n\t\t\t\t\t\t\t<p>Coming soon</p>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { useContext } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Main() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\">\n\t\t\t\t<ViewOptions className=\"view__options\" />\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tconst isLoading = useFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t\tloadingState={isLoading}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport ViewOptions from \"./ViewOptions\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\"\", \"viewOptions noBorder\", <ViewOptions />)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Dev Links + Info\",\n\t\t\t\t\t\"dev\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTODO/Readme\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tGitHub:{\" \"}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tgaswirth/rhdwp-calendario\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, Profiler } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\tmonthCount: 1,\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tuseEffect(() => {\n\t\t// Update the context just initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE_OPTION\",\n\t\t\tmonthCount: view.monthCount,\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t\tmonthCount: viewOptions.monthCount,\n\t\t});\n\t}, [setView, viewOptions.viewMode, viewOptions.monthCount]);\n\n\tfunction mainRenderCallback(\n\t\tid,\n\t\tphase,\n\t\tactualDuration,\n\t\tbaseDuration,\n\t\tstartTime,\n\t\tcommitTime,\n\t\tinteractions\n\t) {}\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<Profiler id=\"Main\" onRender={mainRenderCallback}>\n\t\t\t\t<ViewContext.Provider\n\t\t\t\t\tvalue={{ viewOptions, viewOptionsDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t\t<Header />\n\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Main />\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</PostsContext.Provider>\n\t\t\t\t</ViewContext.Provider>\n\t\t\t</Profiler>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n// ODOT\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}