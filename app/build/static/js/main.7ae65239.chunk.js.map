{"version":3,"sources":["components/common/FieldGroup.js","components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","components/Header.js","components/Day.js","lib/updatePost.js","PostsContext.js","components/PostLinks.js","DragContext.js","components/Post.js","components/common/Loading.js","components/PostList.js","components/common/NewPostButton.js","lib/hooks.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/EditPost.js","components/Main.js","components/UnscheduledDrafts.js","components/StatusFilters.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["FieldGroup","name","label","inlineLabel","children","className","htmlFor","Widget","title","nonce","routeBase","postStatuses","window","rhdReactPlugin","restBase","dateFormat","filterUnchangedParams","params","post","length","key","omit","renderWidget","ViewContext","createContext","viewReducer","state","action","type","viewMode","viewRange","range","start","startOfWeek","end","endOfWeek","statuses","status","initialViewOptions","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onClick","MainHeader","useEffect","today","startOfToday","startOfMonth","endOfMonth","addDays","onChange","dates","clearIcon","format","required","maxDate","addYears","Date","showLeadingZeros","disableCalendar","Header","Day","day","monthName","classes","isToday","push","isPast","join","initialUpdateState","updateNow","trash","unscheduled","updateReducer","PostsContext","initialPosts","currentPost","id","post_title","post_status","post_date","refetch","dateRange","scheduled","trashed","postsReducer","scheduledPosts","posts","forEach","index","unscheduledPosts","trashedPosts","field","PostLinks","edit_link","view_link","postsDispatch","useReducer","updatePost","updatePostDispatch","url","postData","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","message","fetchData","href","rel","decode","preventDefault","DragContext","dragReducer","isDragging","draggedFrom","draggedTo","draggedOver","overUnscheduled","initialDrag","Post","allowDrag","draggedPost","draggedPostDispatch","useState","colors","setColors","date","setDate","isHovered","setIsHovered","color","backgroundColor","handleDragStart","draggingUnscheduled","currentTarget","parentNode","classList","contains","Number","dataset","handleDragEnd","handleClick","isEmpty","style","visibility","data-index","draggable","onDragStart","onDragEnd","onMouseEnter","onMouseLeave","scope","renderPost","Loading","PostList","allowDrop","loadingState","isLoading","setIsLoading","undefined","data","error","handleDragOver","overNow","isNaN","targetRect","getBoundingClientRect","mouseY","clientY","top","listItems","childNodes","itemCount","offsetTop","handleDrop","listProps","onDragOver","onDrop","map","renderPostList","NewPostButton","useFetchScheduledPosts","startDate","endDate","res","DayPosts","dayPosts","isSameDay","useDayPosts","renderList","Calendar","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","renderEmpty","List","endOfDay","newPostButton","initialEditPost","editMode","editPostReducer","newDate","EditPost","editPost","editPostDispatch","node","useRef","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","exclude","isFuture","statusList","filtered","includes","filterStatusList","closeModal","handleClickOutside","current","document","removeEventListener","addEventListener","handleInputChange","ref","onSubmit","post_excerpt","closeOnScroll","selected","disabled","checked","Object","keys","image","src","alt","fontWeight","autoFocus","Main","UnscheduledDrafts","useFetchUnscheduledPosts","StatusFilters","toggleStatus","item","borderColor","Sidebar","marginLeft","paddingLeft","listStylePosition","fontSize","App","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","Provider","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ae65239.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { omit } from \"lodash\";\nimport Widget from \"../components/common/Widget\";\n\n// TODO: DEV MODE\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\nexport var nonce, routeBase, postStatuses;\nif (DEBUG_MODE !== true) {\n\t// WP mode\n\tnonce = window.rhdReactPlugin.nonce; // Live\n\trouteBase = window.rhdReactPlugin.restBase; // Live\n\tpostStatuses = window.rhdReactPlugin.postStatuses; // Live\n} else {\n\t// non-WP mode\n\tnonce = 0;\n\trouteBase = \"http://localhost/wp-json/calendario/v1/posts\";\n\tpostStatuses = {\n\t\tpublish: {\n\t\t\tname: \"Published\",\n\t\t\tbackgroundColor: \"cornflowerblue\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tdraft: {\n\t\t\tname: \"Draft\",\n\t\t\tbackgroundColor: \"silver\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tfuture: {\n\t\t\tname: \"Scheduled\",\n\t\t\tbackgroundColor: \"lightseagreen\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tpending: {\n\t\t\tname: \"Pending Review\",\n\t\t\tbackgroundColor: \"lightcoral\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tprivate: {\n\t\t\tname: \"Private\",\n\t\t\tbackgroundColor: \"maroon\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t};\n}\n// ODOT\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {array} exclude keys to exclude.\n * @return {object} The filtered postStatuses object.\n */\nexport function filterStatusList(exclude = []) {\n\tlet filtered = postStatuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in postStatuses) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n *\n * @param {object} params  Key/value post parameters to update\n * @param {*} post The post to check against\n * @returns {object} The filtered params object\n */\nexport function filterUnchangedParams(params, post) {\n\tif (params.length > 0) {\n\t\tfor (let key in params) {\n\t\t\tif (params[key] === post[key]) {\n\t\t\t\tparams = omit(params, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn params;\n}\n\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n","import { createContext } from \"react\";\nimport { startOfWeek, endOfWeek } from \"date-fns\";\nimport { postStatuses } from \"./lib/utils\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatuses: {\n\t\t\t\t\t...state.statuses,\n\t\t\t\t\t[action.status]: !state.statuses[action.status],\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nvar statuses = {};\nfor (const status in postStatuses) {\n\tstatuses[status] = true;\n}\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tstatuses,\n};\n","import React, { useContext } from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t{/* <FieldGroup name=\"jumpToToday\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={handleToday}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\tstartOfDay(start) === startOfToday() ||\n\t\t\t\t\t\t\tisSameWeek(start, startOfToday())\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tJump to Today\n\t\t\t\t\t</button>\n\t\t\t\t</FieldGroup> */}\n\t\t\t<FieldGroup name=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</FieldGroup>\n\t\t</div>\n\t);\n}\n","import { useContext, useEffect } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\taddYears,\n\taddDays,\n\tstartOfToday,\n\tstartOfMonth,\n\tendOfMonth,\n} from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\n\nimport \"react-calendar/dist/Calendar.css\";\n\nexport default function MainHeader() {\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!start && !end) {\n\t\t\tlet today = startOfToday();\n\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [end, start, viewMode, viewOptionsDispatch]);\n\n\tconst handleChangeDateRange = (dates) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_RANGE\",\n\t\t\tstart: dates[0],\n\t\t\tend: dates[1],\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__center\">\n\t\t\t\t{/* <h3 className=\"viewTitle\">Scheduled Posts</h3> */}\n\t\t\t\t<DateRangePicker\n\t\t\t\t\tvalue={[start, end]}\n\t\t\t\t\tonChange={handleChangeDateRange}\n\t\t\t\t\t// calendarIcon={<span className=\"icon\">date_range</span>}\n\t\t\t\t\tclearIcon={null}\n\t\t\t\t\tformat={dateFormat.daylessDate}\n\t\t\t\t\trequired={true}\n\t\t\t\t\t// minDetail={\"month\"}\n\t\t\t\t\t// maxDetail={\"month\"}\n\t\t\t\t\tmaxDate={addYears(new Date(), 3)}\n\t\t\t\t\tshowLeadingZeros={false}\n\t\t\t\t\tdisableCalendar={true}\n\t\t\t\t/>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\n\nexport default function Header() {\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<MainHeader />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<h1 className=\"calendario__title\">\n\t\t\t\t\t\tthe editorial calendorial\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import React from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast } from \"date-fns\";\n\nexport default function Day({ className, day, monthName, children }) {\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\tif (isToday(day)) {\n\t\tclasses.push(\"today\");\n\t}\n\tif (isPast(day) && !isToday(day)) {\n\t\tclasses.push(\"past\");\n\t}\n\n\treturn (\n\t\t<div className={classes.join(\" \")}>\n\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","export const initialUpdateState = {\n\tupdateNow: false,\n\ttrash: false,\n\tparams: {},\n\tunscheduled: false,\n};\n\nexport function updateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdateNow: false,\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\ttrash: true,\n\t\t\t\tupdateNow: true,\n\t\t\t\tparams: action.params,\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn initialUpdateState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createContext } from \"react\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start,\n\t\t\t\t\tend: action.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"SET_TRASHED\":\n\t\t\tlet trashedPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\ttrashedPosts.forEach((post, index) => {\n\t\t\t\ttrashedPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrashed: trashedPosts,\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useReducer, useEffect, useContext } from \"react\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\n\nimport PostsContext from \"../PostsContext\";\n\nimport { routeBase } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nexport default function PostLinks({ post, className, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { postsDispatch } = useContext(PostsContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${id}`;\n\t\t\t} else {\n\t\t\t\turl += `update/${id}`;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tid,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {},\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: id,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={`postLinks ${className}`}>\n\t\t\t<a\n\t\t\t\tclassName=\"icon top left icon__view\"\n\t\t\t\thref={view_link}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\tclassName=\"icon top right icon__edit\"\n\t\t\t\thref={decode(edit_link)}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</a>\n\t\t\t{unscheduled ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__schedule bottom right\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon icon__unschedule bottom right\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t>\n\t\t\t\t\tdrafts\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName=\"icon icon__trash bottom left\"\n\t\t\t\tonClick={trashPost}\n\t\t\t\ttitle=\"Trash this post\"\n\t\t\t>delete_forever</button>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tdraggedFrom:\n\t\t\t\t\taction.draggedFrom >= 0 ? action.draggedFrom : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_SCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedTo: null,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tdraggedFrom: null,\n\tdraggedTo: null,\n\toverUnscheduled: false,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { postStatuses } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { isPast, isToday } from \"date-fns\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled, allowDrag }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging, draggedFrom, draggedTo },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { statuses },\n\t} = useContext(ViewContext);\n\tconst [colors, setColors] = useState({});\n\tconst [date, setDate] = useState(new Date());\n\tconst [isHovered, setIsHovered] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.post_date));\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tsetColors({\n\t\t\tcolor: postStatuses[post.post_status].color,\n\t\t\tbackgroundColor: postStatuses[post.post_status].backgroundColor,\n\t\t});\n\t}, [post.post_status]);\n\n\tconst handleDragStart = (e) => {\n\t\tlet draggingUnscheduled = e.currentTarget.parentNode.classList.contains(\n\t\t\t\"unscheduledDrafts\"\n\t\t)\n\t\t\t? true\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggedFrom: draggingUnscheduled\n\t\t\t\t? Number(e.currentTarget.dataset.index)\n\t\t\t\t: false,\n\t\t});\n\t};\n\n\tconst handleDragEnd = () => draggedPostDispatch({ type: \"END\" });\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet unscheduled =\n\t\t\te.target.classList.contains(\"unscheduledDrafts\") ||\n\t\t\te.target.parentNode.classList.contains(\"unscheduledDrafts\")\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst renderPost = () => {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\t\tif (isDragging) {\n\t\t\tif (draggedTo === Number(index)) {\n\t\t\t\tclasses.push(\"dropArea\");\n\n\t\t\t\tif (draggedFrom === false) {\n\t\t\t\t\tclasses.push(\"fromNowhere\");\n\t\t\t\t} else if (draggedFrom < draggedTo) {\n\t\t\t\t\tclasses.push(\"fromAbove\");\n\t\t\t\t} else if (draggedFrom > draggedTo) {\n\t\t\t\t\tclasses.push(\"fromBelow\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (draggedFrom === Number(index)) {\n\t\t\t\tclasses.push(\"dragging\");\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tid={post.id}\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tstyle={\n\t\t\t\t\tunscheduled === false && statuses[post.post_status] === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: unscheduled === true\n\t\t\t\t\t\t? { visibility: \"visible\" }\n\t\t\t\t\t\t: { visibility: \"hidden\" }\n\t\t\t\t}\n\t\t\t\tdata-index={index}\n\t\t\t\tdraggable={\n\t\t\t\t\tallowDrag === true || (!isToday(date) && !isPast(date))\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t\t\t}\n\t\t\t\tonDragStart={handleDragStart}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t\tonClick={handleClick}\n\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t>\n\t\t\t\t<PostLinks\n\t\t\t\t\tclassName={isHovered && !isDragging ? \"visible\" : \"hidden\"}\n\t\t\t\t\tpost={post}\n\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t/>\n\t\t\t\t<p\n\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: colors.backgroundColor,\n\t\t\t\t\t\tcolor: colors.color,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn post ? renderPost() : null;\n}\n","import React from \"react\";\n\nexport default function Loading({ className }) {\n\treturn (\n\t\t<div className={`loadingOverlay ${className}`}>\n\t\t\t<div className=\"roller\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Post from \"./Post\";\nimport Loading from \"./common/Loading\";\nimport {\n\tdateFormat,\n\trouteBase,\n\tfilterUnchangedParams,\n\tnonce,\n\tDEBUG_MODE,\n} from \"../lib/utils\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nexport default function PostList({\n\tposts,\n\tclassName,\n\tallowDrag,\n\tallowDrop,\n\tdate,\n\tloadingState,\n}) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { post, draggedTo, draggedFrom, overUnscheduled },\n\t\tdraggedPostDispatch,\n\t} = useContext(DragContext);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (loadingState === undefined || loadingState === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading(loadingState);\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [loadingState]);\n\n\t// Fire the update!\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && post.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\tlet url = `${routeBase}/update/${post.id}`;\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, post),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (draggedTo !== null) {\n\t\t\t\tpostData.draggedTo = draggedTo;\n\t\t\t}\n\n\t\t\tif (isEmpty(postData)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\t// TODO: DEV MODE\n\t\t\tvar headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\t\t\t// ODOT\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [updatePost, draggedTo, draggedPostDispatch, post, postsDispatch]);\n\n\tconst handleDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\tif (allowDrag === false) return;\n\n\t\tif (e.currentTarget.classList.contains(\"unscheduledDrafts\")) {\n\t\t\tlet overNow = Number(e.target.dataset.index);\n\n\t\t\tlet draggedOver = false;\n\t\t\tif (draggedFrom === overNow) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tdraggedOver = Number.isNaN(overNow) ? false : overNow;\n\t\t\t}\n\n\t\t\tif (draggedOver !== draggedTo) {\n\t\t\t\tif (draggedOver === false) {\n\t\t\t\t\tlet targetRect = e.currentTarget.getBoundingClientRect();\n\t\t\t\t\tlet mouseY = e.clientY - targetRect.top;\n\t\t\t\t\tconst listItems = e.currentTarget.childNodes;\n\t\t\t\t\tlet itemCount = listItems.length;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tlistItems.length === 0 ||\n\t\t\t\t\t\tmouseY < listItems[0].offsetTop\n\t\t\t\t\t) {\n\t\t\t\t\t\tdraggedOver = 0;\n\t\t\t\t\t} else if (mouseY >= listItems[itemCount - 1].offsetTop) {\n\t\t\t\t\t\tdraggedOver = itemCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdraggedOver = itemCount - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\t\tdraggedOver,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (overUnscheduled === true) {\n\t\t\t// Only update if necessary\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_SCHEDULED\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDrop = () => {\n\t\tif (allowDrop !== false) {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATE\",\n\t\t\t\tparams: {\n\t\t\t\t\tpost_date:\n\t\t\t\t\t\tdate === false\n\t\t\t\t\t\t\t? format(post.post_date, dateFormat.date)\n\t\t\t\t\t\t\t: format(date, dateFormat.date),\n\t\t\t\t},\n\t\t\t\tunscheduled: overUnscheduled,\n\t\t\t});\n\n\t\t\tif (currentPost.id === post.id) {\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\t\tfield: \"post_date\",\n\t\t\t\t\tvalue: date,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: `postList ${className}`,\n\t\t\tonDragOver: handleDragOver,\n\t\t};\n\n\t\tif (allowDrop !== false) {\n\t\t\tlistProps.onDrop = handleDrop;\n\t\t} else {\n\t\t\tlistProps.className += \" dropDisabled\";\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loading className={isLoading ? \"active\" : null} />\n\t\t\t\t<ul {...listProps}>\n\t\t\t\t\t{posts.map((post, index) => (\n\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tunscheduled={date === false ? true : false}\n\t\t\t\t\t\t\tallowDrag={allowDrag}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { format, isSameDay } from \"date-fns\";\nimport { nonce, routeBase, dateFormat } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"../lib/utils\";\nvar headers = {};\nif (DEBUG_MODE !== true) {\n\theaders[\"X-WP-Nonce\"] = nonce;\n}\n// ODOT\n\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\treturn [value, setValue];\n};\n\nexport const useDayPosts = (posts, date) => {\n\tlet dayPosts = [];\n\tif (posts) {\n\t\tposts.forEach((post) => {\n\t\t\tif (isSameDay(date, new Date(post.post_date))) {\n\t\t\t\tdayPosts.push(post);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dayPosts;\n};\n\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t\tunscheduled: true,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n// export const useFetchTrashedPosts = () => {\n// \tconst {\n// \t\tposts: { refetch },\n// \t\tpostsDispatch,\n// \t} = useContext(PostsContext);\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tuseEffect(() => {\n// \t\tlet url = `${routeBase}/trashed`;\n\n// \t\tconst fetchData = async () => {\n// \t\t\tsetIsLoading(true);\n\n// \t\t\ttry {\n// \t\t\t\tconst res = await fetch(url, {\n// \t\t\t\t\theaders,\n// \t\t\t\t});\n// \t\t\t\tconst data = await res.json();\n\n// \t\t\t\tpostsDispatch({\n// \t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n// \t\t\t\t\tposts: data.posts,\n// \t\t\t\t\tunscheduled: true,\n// \t\t\t\t});\n\n// \t\t\t\tsetIsLoading(false);\n// \t\t\t} catch (error) {\n// \t\t\t\tconsole.log(\"REST error\", error.message);\n// \t\t\t\tsetIsLoading(false);\n// \t\t\t}\n// \t\t};\n\n// \t\tfetchData();\n\n// \t\treturn () => {\n// \t\t\tsetIsLoading(false);\n// \t\t};\n// \t}, [postsDispatch, refetch]);\n\n// \treturn isLoading;\n// };\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useDayPosts } from \"../lib/hooks\";\n\nexport default function DayPosts({\n\tposts,\n\tdate,\n\tallowDrag,\n\tallowDrop,\n\ttitle,\n\tloadingState,\n}) {\n\tconst dayPosts = useDayPosts(posts, date);\n\n\tconst renderPostList = () => {\n\t\tlet listProps = {\n\t\t\tclassName: \"dayPosts\", // make this a prop/change conditionally\n\t\t\tdate: date,\n\t\t\tposts: dayPosts,\n\t\t\tallowDrop: true,\n\t\t\tloadingState,\n\t\t};\n\n\t\t// Drag control\n\t\tif (allowDrag !== \"undefined\" && allowDrag !== null) {\n\t\t\tlistProps.allowDrag = allowDrag;\n\t\t}\n\n\t\t// Drop control\n\t\tlistProps.allowDrop = allowDrop !== false ? true : false;\n\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t<PostList {...listProps} />\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n} from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day <= viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport { updateReducer, initialUpdateState } from \"../lib/updatePost\";\nimport {\n\tdateFormat,\n\tfilterStatusList,\n\trouteBase,\n\tfilterUnchangedParams,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"DATE_CHANGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tpost_date: action.newDate,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\n// TODO Date/time display, add time picker\nexport default function EditPost() {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst { draggedPostDispatch } = useContext(DragContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [updatePost, updatePostDispatch] = useReducer(\n\t\tupdateReducer,\n\t\tinitialUpdateState\n\t);\n\tconst node = useRef();\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\n\tuseEffect(() => {\n\t\tif (post.post_date && post.post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post.post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post.post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (post.unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\", \"pending\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\t}, [date, post.unscheduled]);\n\n\tuseEffect(() => {\n\t\tsetDatePickerDisabled(\n\t\t\tcurrentPost.post_date &&\n\t\t\t\t(isToday(currentPost.post_date) ||\n\t\t\t\t\tisPast(currentPost.post_date)) &&\n\t\t\t\tcurrentPost.post_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\t}, [currentPost.post_date, currentPost.post_status]);\n\n\t// Update the post\n\tuseEffect(() => {\n\t\tif (updatePost.updateNow === true && currentPost.id !== \"undefined\") {\n\t\t\tupdatePostDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post\n\t\t\tlet url = `${routeBase}/`;\n\t\t\tif (updatePost.trash === true) {\n\t\t\t\turl += `trash/${currentPost.id}`;\n\t\t\t} else {\n\t\t\t\tif (currentPost.id === 0) {\n\t\t\t\t\turl += \"new\";\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${currentPost.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: filterUnchangedParams(updatePost.params, currentPost),\n\t\t\t\tunscheduled: updatePost.unscheduled,\n\t\t\t};\n\n\t\t\tif (isEmpty(postData.params)) {\n\t\t\t\treturn { data: \"Update not necessary.\", error: true };\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tupdatePostDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO keep this?\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\t\t\t\tpost: post,\n\t\t\t\t\t\tunscheduled: post.unscheduled,\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\tcurrentPost,\n\t\tpost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t\tupdatePost.trash,\n\t\tupdatePost.params,\n\t\tupdatePost.updateNow,\n\t\tupdatePost.unscheduled,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (currentPost.id > 0 || currentPost.id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\t}, [currentPost.id, currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (e) => {\n\t\t\tif (node.current && node.current.contains(e.target)) {\n\t\t\t\t// inside click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// outside click\n\t\t\tcloseModal();\n\t\t};\n\n\t\tif (!isEmpty(currentPost)) {\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, [currentPost, postsDispatch, closeModal]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tupdatePostDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tparams: {\n\t\t\t\tpost_title: post.post_title,\n\t\t\t\tpost_date: format(new Date(post.post_date), dateFormat.date),\n\t\t\t\tpost_status: post.post_status,\n\t\t\t\tpost_excerpt: post.post_excerpt,\n\t\t\t},\n\t\t\tunscheduled: post.unscheduled,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tupdatePostDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tparams: {\n\t\t\t\tid: post.id,\n\t\t\t},\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst cancelHandler = () => editPostDispatch({ type: \"CLEAR\" });\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\treturn editMode ? (\n\t\t<div className={`editPost`}>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\thighlight_off\n\t\t\t\t\t</button>\n\t\t\t\t\t<h3 className=\"title\">\n\t\t\t\t\t\t{post.id === 0 ? \"New\" : \"Edit\"} Post\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"editPost__editor__form\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldGroup name=\"post_title\" label=\"Title\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\tvalue={decode(post.post_title, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t{/* TODO prompt to make scheduled when changing an Unscheduled Draft date? */}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`fieldGroup__field post_date ${\n\t\t\t\t\t\t\t\t\tpost.unscheduled === true\n\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">Post Date</label>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"fieldGroup__field unscheduled\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\tchecked={post.unscheduled}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">Unscheduled</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t<FieldGroup name=\"post_status\" label=\"Status\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={post.post_status}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderStatusOptions(allowedStatuses)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"taxonomies\" label=\"Categories & Tags\">\n\t\t\t\t\t\t\t<p>Coming soon</p>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<FieldGroup name=\"post_excerpt\" label=\"Excerpt\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvalue={decode(post.post_excerpt, {\n\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldGroup>\n\n\t\t\t\t\t\t<div className=\"post_thumb\">\n\t\t\t\t\t\t\t{post.image ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>Featured Image</span>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={decode(post.edit_link)}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={post.image}\n\t\t\t\t\t\t\t\t\t\t\talt={`${post.post_title}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t<div className=\"editPost__buttons__trash confirm\">\n\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\tAre you sure you want to Trash this\n\t\t\t\t\t\t\t\t\t\tpost?\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(false)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__save\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tpost.id === 0 ? \"Save\" : \"Update\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__cancel\"\n\t\t\t\t\t\t\t\t\t\tonClick={cancelHandler}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Cancel\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"editPost__buttons__trash\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(true)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import React, { useContext } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Main() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\">\n\t\t\t\t<ViewOptions className=\"view__options\" />\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n}\n","import React, { useContext, useEffect } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\n\tuseEffect(() => {\n\t\tpostsDispatch({\n\t\t\ttype: \"REFETCH\",\n\t\t});\n\t}, [postsDispatch]);\n\n\tconst isLoading = useFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\tposts={unscheduled}\n\t\t\t\tallowDrag={true}\n\t\t\t\tloadingState={isLoading}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t</>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport { postStatuses } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst keys = Object.keys(postStatuses);\n\tconst {\n\t\tviewOptions: { statuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_STATUS\",\n\t\t\tstatus: e.target.name,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((item, index) => {\n\t\t\t\t\tconst { color, backgroundColor, name } = postStatuses[item];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${item}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={`dot ${\n\t\t\t\t\t\t\t\t\tstatuses[item] ? \"visible\" : \"hidden\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tname={item}\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tstatuses[item] === true\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor, // TODO use it or lose it\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={toggleStatus}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport { renderWidget } from \"../lib/utils\";\n\nexport default function Sidebar() {\n\treturn (\n\t\t<aside className=\"calendario__sidebar\">\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\"\", \"statusFilters\", <StatusFilters />)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Dev Links + Info\",\n\t\t\t\t\t\"dev\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tpaddingLeft: \"24px\",\n\t\t\t\t\t\t\t\tlistStylePosition: \"outside\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario#readme\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTODO/Readme\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tGitHub:{\" \"}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tgaswirth/rhdwp-calendario\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p style={{ fontSize: \"0.7em\" }}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRoundhouse Designs\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, useReducer, Profiler } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStickyState } from \"./lib/hooks\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"./App.scss\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t\t// TODO add/save user filtered statuses here?\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\tfunction mainRenderCallback(\n\t\tid,\n\t\tphase,\n\t\tactualDuration,\n\t\tbaseDuration,\n\t\tstartTime,\n\t\tcommitTime,\n\t\tinteractions\n\t) {}\n\n\treturn (\n\t\t<div className={`calendario`}>\n\t\t\t<Profiler id=\"Main\" onRender={mainRenderCallback}>\n\t\t\t\t<ViewContext.Provider\n\t\t\t\t\tvalue={{ viewOptions, viewOptionsDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t\t<Header />\n\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Main />\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</PostsContext.Provider>\n\t\t\t\t</ViewContext.Provider>\n\t\t\t</Profiler>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// TODO: DEV MODE\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n// ODOT\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}