{"version":3,"sources":["components/common/Widget.js","lib/utils.js","ViewContext.js","components/ViewOptions.js","components/MainHeader.js","PostsContext.js","lib/hooks.js","components/Header.js","DragContext.js","components/Day.js","components/common/PostLink.js","components/PostLinks.js","components/Post.js","components/PostList.js","components/common/NewPostButton.js","components/DayPosts.js","components/Calendar.js","components/List.js","components/common/FieldGroup.js","components/common/Icon.js","components/EditPost.js","components/Main.js","components/AdminLinks.js","components/UnscheduledDrafts.js","components/common/ColorPickerPopover.js","components/common/ToggleButton.js","components/StatusFilters.js","components/common/DrawerHandle.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","title","className","children","wp","window","rhdReactPlugin","dateFormat","renderWidget","dayKey","date","format","dateIsBetween","min","max","getTime","isDraggingUnscheduled","source","droppableId","getPostList","id","posts","unscheduled","scheduled","moveItem","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","isEmpty","splice","index","removed","destinationIndex","undefined","length","filterPostStatus","post_status","status","includes","stripPermalinkSlug","url","substr","slice","parts","split","pop","join","ViewContext","createContext","initialViewOptions","viewMode","viewRange","start","end","postStatuses","sidebarOpen","defaultStatusColors","viewReducer","state","action","type","range","startOfWeek","endOfWeek","addMonths","subMonths","statuses","visible","postStatus","color","reset","Object","keys","ViewOptions","useContext","viewOptions","viewOptionsDispatch","handleViewModeChange","e","target","value","onClick","name","MainHeader","handleTodayClick","useState","todayInRange","setTodayInRange","today","startOfToday","DateInput","forwardRef","ref","useEffect","Date","startOfMonth","endOfMonth","addDays","preventDefault","selected","onChange","customInput","selectsStart","startDate","endDate","closeOnScroll","document","selectsEnd","minDate","monthsShown","PostsContext","initialPosts","currentPost","post_title","post_date","updatePost","updateNow","trash","params","newIndex","refetch","dateRange","trashed","taxonomies","locale","postsReducer","scheduledPosts","forEach","post","post_date_day","scheduledByDate","groupBy","unscheduledPosts","sourceId","destinationId","taxonomy","terms","field","routeBase","headers","nonce","useFetchScheduledPosts","postsDispatch","isLoading","setIsLoading","a","fetch","res","json","data","console","log","message","fetchData","useFetchTaxonomyTerms","useClickOutside","handler","startedInside","startedWhenMounted","listener","event","current","contains","validateEventStart","addEventListener","removeEventListener","Header","useFetchPostStatuses","postsUrl","location","href","DragContext","initialDrag","isDragging","currentIndex","overUnscheduled","dragReducer","draggedOver","Day","day","monthName","dragOver","setDragOver","draggedPost","isUnscheduled","classes","handleDragOver","isSameDay","isToday","push","isPast","onDragOver","onDragLeave","onDrop","PostLink","icon","rel","PostLinks","edit_link","view_link","open","decode","result","findIndex","item","Post","setColor","animationRequestId","setAnimationRequestId","handleClick","classList","handleMouseEnter","element","timing","draw","duration","performance","now","requestAnimationFrame","time","progress","animateLinks","currentTarget","timeFraction","style","paddingBottom","handleMouseLeave","cancelAnimationFrame","handleMouseDown","draggableStyles","snapshot","draggingOver","draggableId","innerRef","draggableProps","dragHandleProps","key","data-index","onMouseEnter","onMouseLeave","onMouseDown","backgroundColor","scope","replace","PostList","renderPosts","hovered","setHovered","renderPostList","useMemo","map","droppableProps","placeholder","isDraggingOver","marginBottom","NewPostButton","DayPosts","renderList","Calendar","todayRef","renderDaysHeaderRow","useCallback","days","i","renderDays","rows","firstCalendarDay","dayIsFirstDay","isFirstDayOfMonth","allowDrag","renderEmpty","List","endOfDay","newPostButton","FieldGroup","label","inlineLabel","htmlFor","Icon","initialEditPost","editMode","initialTaxFilter","category","post_tag","editPostReducer","term_id","parseInt","hasOwnProperty","indexOf","termList","taxFilterReducer","filter","EditPost","useReducer","editPost","editPostDispatch","taxFilter","taxFilterDispatch","node","useRef","initial","setDate","allowedStatuses","setAllowedStatuses","datePickerDisabled","setDatePickerDisabled","trashPostClicked","setTrashPostClicked","post_name","post_excerpt","image","post_taxonomies","slug","exclude","isFuture","statusList","filtered","omit","filterStatusList","closeModal","handleInputChange","handleTermCheckboxChange","closest","onSubmit","timeInputLabel","showTimeInput","disabled","checked","fontWeight","autoFocus","src","alt","toLowerCase","Main","AdminLinks","blogUrl","trashUrl","renderLink","link","UnscheduledDrafts","useFetchUnscheduledPosts","ColorPickerPopover","presetStatusColors","popover","previous","colorValue","setColorValue","isOpen","setIsOpen","close","background","ToggleButton","toggleSelected","StatusFilters","firstUpdate","colorsChanged","setColorsChanged","currentStatusColors","isEqual","haveColorsChanged","colors","method","body","JSON","stringify","response","toggleStatus","DrawerHandle","toggle","Sidebar","pluginUrl","App","draggedPostDispatch","defaultValue","stickyValue","localStorage","getItem","parse","setValue","setItem","useStickyState","view","setView","mainRef","user","postData","isOverUnscheduled","appClass","Provider","scroll","top","offsetTop","behavior","onDragEnd","post_date_raw","formatted","parseISO","h","getHours","m","getMinutes","setHours","setMinutes","draggedPostDate","items","list","startIndex","endIndex","reorderUnscheduled","onDragStart","draggingUnscheduled","find","p","Number","onDragUpdate","appAnchorElement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appSelector","querySelector","ReactDOM","render","StrictMode"],"mappings":"8NAEe,SAASA,EAAT,GAAiD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAClD,OACC,sBAAKD,UAAS,iBAAYA,GAA1B,UACED,EAAQ,oBAAIC,UAAU,cAAd,SAA6BD,IAAc,KACnDE,K,4DCQSC,EACZ,eA+BMC,OAAOC,gBAGDC,EACP,IADOA,EAEN,aAFMA,EAGF,qBAHEA,EAKH,OALGA,EAOA,MAPAA,EAQF,uBAREA,EASC,gBA8CP,IAAMC,EAAe,SAACP,EAAOC,EAAWC,GAC9C,OACC,cAACH,EAAD,CAAQC,MAAOA,EAAOC,UAAS,kBAAaA,GAA5C,SACEC,KAWSM,EAAS,SAACC,GAAD,OAAUC,kBAAOD,EAAMH,IAUhCK,EAAgB,SAACF,EAAMG,EAAKC,GAAZ,OAC5BJ,EAAKK,WAAaF,EAAIE,WAAaL,EAAKK,WAAaD,EAAIC,WAS7CC,EAAwB,SAAC,GAAD,MACpB,gBADoB,EAAGC,OAAUC,aAUrCC,EAAc,SAACC,EAAIC,GAQ/B,MANW,gBAAPD,EACIC,EAAMC,YAEND,EAAME,UAAUH,IAiCZI,EAAW,SACvBP,EACAQ,EACAC,EACAC,GACK,IAAD,EACEC,EAAcC,MAAMC,KAAKb,GACzBc,EAAaC,kBAAQP,GAAyC,GAA1BI,MAAMC,KAAKL,GACrD,EAAkBG,EAAYK,OAAOP,EAAgBQ,MAAO,GAArDC,EAAP,oBAEIC,OAC4BC,IAA/BV,EAAqBO,MAClBP,EAAqBO,MACpBF,kBAAQP,GAET,EADAA,EAAYa,OAYhB,OATAP,EAAUE,OAAOG,EAAkB,EAAGD,GAE1B,mBACVT,EAAgBR,YAAcU,GADpB,cAEVD,EAAqBT,YAAca,GAFzB,yBAGDL,EAAgBR,aAHf,8BAIIS,EAAqBT,aAJzB,GA8CN,SAASqB,EAAiBC,EAAalB,GAC7C,IACImB,EAASD,EAMb,OAJoB,IAAhBlB,IACHmB,EAJgC,CAAC,QAAS,UAAW,WAIjBC,SAASD,GAAUA,EAAS,SAG1DA,EAUD,IAAME,EAAqB,SAACC,GAEX,MAAnBA,EAAIC,QAAQ,KACfD,EAAMA,EAAIE,MAAM,GAAI,IAGrB,IAAIC,EAAQH,EAAII,MAAM,KAGtB,OAFAD,EAAME,MAEA,GAAN,OAAUF,EAAMG,KAAK,KAArB,M,gCCjRcC,EADKC,wBAAc,IAGrBC,EAAqB,CACjCC,SAAU,GACVC,UAAW,CACVC,MAAO,KACPC,IAAK,MAENC,aAAc,GACdC,aAAa,GAGNC,EAAwBxD,EAAxBwD,oBAED,SAASC,EAAYC,EAAOC,GAClC,OAAQA,EAAOC,MACd,IAAK,SACJ,OAAO,2BACHF,GADJ,IAECR,SAAUS,EAAOT,SAAWS,EAAOT,SAAWQ,EAAMR,SACpDC,UAAWQ,EAAOR,UACfQ,EAAOR,UACPO,EAAMP,YAGX,IAAK,YACJ,IAAIU,EACgB,SAAnBH,EAAMR,SACH,CACAE,MAAOU,kBAAYH,EAAOP,OAC1BC,IAAKU,kBAAUJ,EAAON,MAEtB,CAAED,MAAOO,EAAOP,MAAOC,IAAKM,EAAON,KAEvC,OAAO,2BACHK,GADJ,IAECP,UAAW,CACVC,MAAOS,EAAMT,MACbC,IAAKQ,EAAMR,OAId,IAAK,kBACJ,OAAO,2BACHK,GADJ,IAECP,UAAU,2BACNO,EAAMP,WADD,IAERC,MACoB,SAAnBM,EAAMR,SACHY,kBAAYH,EAAOrD,MACnBqD,EAAOrD,SAId,IAAK,gBACJ,OAAO,2BACHoD,GADJ,IAECP,UAAU,2BACNO,EAAMP,WADD,IAERE,IACoB,SAAnBK,EAAMR,SACHa,kBAAUJ,EAAOrD,MACjBqD,EAAOrD,SAId,IAAK,aACJ,OAAO,2BACHoD,GADJ,IAECP,UAAW,CACVC,MAAOY,kBAAUN,EAAMP,UAAUC,MAAO,GACxCC,IAAKW,kBAAUN,EAAMP,UAAUE,IAAK,MAIvC,IAAK,aACJ,OAAO,2BACHK,GADJ,IAECP,UAAW,CACVC,MAAOa,kBAAUP,EAAMP,UAAUC,MAAO,GACxCC,IAAKY,kBAAUP,EAAMP,UAAUE,IAAK,MAIvC,IAAK,oBACJ,IAAIa,EAAWP,EAAOL,aAGtB,IAAK,IAAIjB,KAAU6B,EAClBA,EAAS7B,GAAQ8B,UAChB,YAAaD,EAAS7B,KACnB6B,EAAS7B,GAAQ8B,QAItB,OAAO,2BACHT,GADJ,IAECJ,aAAcY,IAGhB,IAAK,qBACJ,OAAO,2BACHR,GADJ,IAECJ,aAAa,2BACTI,EAAMJ,cADE,kBAEVK,EAAOS,WAFG,2BAGPV,EAAMJ,aAAaK,EAAOS,aAHnB,IAIVD,SAAUT,EAAMJ,aAAaK,EAAOS,YAAYD,cAKpD,IAAK,wBACJ,OAAO,2BACHT,GADJ,IAECJ,aAAa,2BACTI,EAAMJ,cADE,kBAEVK,EAAOS,WAFG,2BAGPV,EAAMJ,aAAaK,EAAOS,aAHnB,IAIVC,MAAOV,EAAOU,YAKlB,IAAK,2BAIJ,IAHA,IAAIC,EAAQZ,EAAMJ,aAGlB,MAFiBiB,OAAOC,KAAKd,EAAMJ,cAEnC,eAA+B,CAA1B,IAAIjB,EAAM,KACdiC,EAAMjC,GAAQgC,MAAQb,EAAoBnB,GAG3C,OAAO,2BACHqB,GADJ,IAECJ,aAAa,eAAMgB,KAGrB,IAAK,iBACJ,OAAO,2BACHZ,GADJ,IAECH,aAAcG,EAAMH,cAGtB,QACC,OAAOG,GCjJK,SAASe,IAAe,IAAD,EAIjCC,qBAAW3B,GAFCG,EAFqB,EAEpCyB,YAAezB,SACf0B,EAHoC,EAGpCA,oBAGKC,EAAuB,SAACC,GAC7BF,EAAoB,CACnBhB,KAAM,SACNV,SAAU4B,EAAEC,OAAOC,SAIrB,OACC,qBAAKlF,UAAU,cAAf,SACC,sBAAKA,UAAU,WAAf,UACC,wBACCmF,QAASJ,EACT/E,UAAS,+BACK,aAAboD,EAA0B,UAAY,YAEvC8B,MAAM,WACNnF,MAAM,WANP,iCAUA,wBACCqF,KAAK,WACLD,QAASJ,EACT/E,UAAS,+BACK,SAAboD,EAAsB,UAAY,YAEnC8B,MAAM,OACNnF,MAAM,OAPP,4B,sDCtBW,SAASsF,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,iBACpC,EAIIV,qBAAW3B,GAHCI,EADhB,EACCwB,YAAexB,UACfD,EAFD,EAECA,SACA0B,EAHD,EAGCA,oBAED,EAAwCS,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQC,cAERC,EAAYC,sBAAW,WAAqBC,GAArB,IAAGZ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OAC5B,wBAAQnF,UAAU,mBAAmBmF,QAASA,EAASW,IAAKA,EAA5D,SACEZ,OAIHa,qBAAU,WACT,IAAQzC,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,IACD,OAAVD,GAA0B,OAARC,GACrBkC,EAAgB/E,EAAc,IAAIsF,KAAQ1C,EAAOC,MAEhD,CAACF,IAEJ0C,qBAAU,WAEJ1C,EAAUC,OAAUD,EAAUE,KAClCuB,EAAoB,CACnBhB,KAAM,YACNR,MAAoB,aAAbF,EAA0B6C,kBAAaP,GAASA,EACvDnC,IACc,aAAbH,EAA0B8C,oBAAeC,kBAAQT,EAAO,QAGzD,CAACA,EAAOrC,EAAUC,MAAOD,EAAUE,IAAKH,EAAU0B,IAYrD,OACC,sBAAK9E,UAAU,qCAAf,UACC,qBAAKA,UAAU,iBAAf,SACC,wBACCA,UAAU,mBACVmF,QAVc,SAACH,GAClBA,EAAEoB,iBACFtB,EAAoB,CAAEhB,KAAM,gBASzB/D,MAAM,iBAHP,4BAQD,sBAAKC,UAAU,kCAAf,UACC,qBACCA,UAAS,kBAAawF,EAAe,SAAW,WADjD,SAGC,wBACCxF,UAAU,yBACVmF,QAASG,EACTvF,MAAM,gBAHP,qBAQD,sBAAKC,UAAU,YAAf,UACC,cAAC,IAAD,CACCK,WAAYA,EACZgG,SAAUhD,EAAUC,MACpBgD,SAAU,SAAC9F,GAAD,OACTsE,EAAoB,CACnBhB,KAAK,kBACLtD,UAGF+F,YAAa,cAACX,EAAD,IACbY,cAAY,EACZC,UAAWpD,EAAUC,MACrBoD,QAASrD,EAAUE,IACnBoD,cAAe,SAAC3B,GAAD,OAAOA,EAAEC,SAAW2B,YAEnC,OACD,cAAC,IAAD,CACCvG,WAAYA,EACZgG,SAAUhD,EAAUE,IACpB+C,SAAU,SAAC9F,GAAD,OACTsE,EAAoB,CACnBhB,KAAK,gBACLtD,UAGF+F,YAAa,cAACX,EAAD,IACbiB,YAAU,EACVJ,UAAWpD,EAAUC,MACrBoD,QAASrD,EAAUE,IACnBuD,QAASzD,EAAUC,MACnByD,YAAa,EACbJ,cAAe,SAAC3B,GAAD,OAAOA,EAAEC,SAAW2B,eAGrC,cAACjC,EAAD,OAED,qBAAK3E,UAAU,eAAf,SACC,wBACCA,UAAU,mBACVmF,QAzEc,SAACH,GAClBA,EAAEoB,iBACFtB,EAAoB,CAAEhB,KAAM,gBAwEzB/D,MAAM,aAHP,gCC7GJ,IACeiH,GADM9D,wBAAc,IAGtB+D,GAAe,CAC3BC,YAAa,CACZhG,GAAI,KACJiG,WAAY,GACZ7E,YAAa,GACb8E,UAAW,GACXhG,YAAa,MAEdiG,WAAY,CACXC,WAAW,EACXC,OAAO,EACPrG,GAAI,KACJsG,OAAQ,GACRC,SAAU,KACVrG,aAAa,GAEdsG,SAAS,EACTC,UAAW,CACVrE,MAAO,GACPC,IAAK,IAENnC,YAAa,GACbC,UAAW,GACXuG,QAAS,GACTC,WAAY,GACZC,OAAQ,IAGF,SAASC,GAAanE,EAAOC,GACnC,OAAQA,EAAOC,MACd,IAAK,gBACJ,IAAIkE,EAAiBnE,EAAO1C,MAG5B6G,EAAeC,SAAQ,SAACC,EAAMlG,GAC7BgG,EAAehG,GAAOoF,UAAY,IAAIpB,KAAKkC,EAAKd,WAChDY,EAAehG,GAAOmG,cAAgB1H,kBACrCuH,EAAehG,GAAOoF,UACtB/G,MAIF,IAAI+H,EAAkBC,kBAAQL,EAAgB,iBAE9C,OAAO,2BACHpE,GADJ,IAEC+D,UAAW,CACVrE,MAAOO,EAAOP,MAAQO,EAAOP,MAAQM,EAAM+D,UAAUrE,MACrDC,IAAKM,EAAON,IAAMM,EAAON,IAAMK,EAAM+D,UAAUpE,KAEhDlC,UAAW+G,IAGb,IAAK,kBACJ,IAAIE,EAAmBzE,EAAO1C,MAO9B,OAJAmH,EAAiBL,SAAQ,SAACC,EAAMlG,GAC/BsG,EAAiBtG,GAAOoF,UAAY,IAAIpB,KAAKkC,EAAKd,cAG5C,2BACHxD,GADJ,IAECxC,YAAakH,IAGf,IAAK,OACJ,IAAIjH,EAAYuC,EAAMvC,UAClBD,EAAcwC,EAAMxC,YAcxB,MAZwB,gBAApByC,EAAO0E,SACVnH,EAAcyC,EAAO9C,OAErBM,EAAUwC,EAAO0E,UAAY1E,EAAO9C,OAGR,gBAAzB8C,EAAO2E,cACVpH,EAAcyC,EAAOtC,YAErBF,EAAUwC,EAAO2E,eAAiB3E,EAAOtC,YAGnC,2BACHqC,GADJ,IAECxC,cACAC,cAGF,IAAK,qBACJ,OAAO,2BACHuC,GADJ,IAECiE,WAAW,2BACPjE,EAAMiE,YADA,kBAERhE,EAAOuB,KAAO,CACdqD,SAAU5E,EAAO4E,SACjBC,MAAO7E,EAAO6E,WAKlB,IAAK,kBACJ,OAAO,2BACH9E,GADJ,IAECsD,YAAY,2BACRrD,EAAOqE,MADA,IAEV9G,YAAayC,EAAOzC,gBAIvB,IAAK,UACJ,OAAO,2BACHwC,GADJ,IAEC8D,SAAU9D,EAAM8D,UAGlB,IAAK,WACJ,OAAO,2BACH9D,GADJ,IAECsD,YAAa,CACZhG,GAAI,EACJkG,UAAWvD,EAAOuD,UAClBhG,YAAayC,EAAOzC,YACpByG,WAAY,MAIf,IAAK,2BACJ,OAAO,2BACHjE,GADJ,IAECsD,YAAY,2BACRtD,EAAMsD,aADC,kBAETrD,EAAO8E,MAAQ9E,EAAOqB,UAI1B,IAAK,oBACJ,OAAO,2BACHtB,GADJ,IAECsD,YAAaD,GAAaC,cAG5B,IAAK,SACJ,OAAO,2BACHtD,GADJ,IAECyD,WAAY,CACXC,WAAW,EACXpG,GAAI2C,EAAO3C,GACXsG,OAAQ3D,EAAO2D,OACfC,SAAU5D,EAAO4D,SACjBrG,YAAayC,EAAOzC,eAIvB,IAAK,WACJ,OAAO,2BACHwC,GADJ,IAECyD,WAAW,2BACPzD,EAAMyD,YADA,IAETC,WAAW,MAId,IAAK,QACJ,OAAO,2BACH1D,GADJ,IAECyD,WAAY,CACXC,WAAW,EACXC,OAAO,EACPrG,GAAI2C,EAAO3C,GACXsG,OAAQ3D,EAAO2D,UAIlB,IAAK,WACJ,OAAO,2BACH5D,GADJ,IAECyD,WAAYJ,GAAaI,aAG3B,QACC,OAAOzD,G,ICnLFgF,GAAqB1I,EAArB0I,UAEFC,GAAgC,CAAE,aAFX3I,EAAV4I,OA8BNC,GAAyB,SAACzF,EAAOC,GAAS,IAAD,EAIjDqB,qBAAWoC,IAFLU,EAF2C,EAEpDvG,MAASuG,QACTsB,EAHoD,EAGpDA,cAHoD,EAKnBzD,oBAAS,GALU,mBAK9C0D,EAL8C,KAKnCC,EALmC,KA4CrD,OArCAnD,qBAAU,WACT,GAAc,OAAVzC,GAA0B,OAARC,EAAc,CACnC,IAAIkD,EAAYhG,kBAAO6C,EAAOjD,GAC1BqG,EAAUjG,kBAAO8C,EAAKlD,GACtBqC,EAAG,UAAMkG,GAAN,4BAAmCnC,EAAnC,YAAgDC,GA2BvD,OAzBe,uCAAG,8BAAAyC,EAAA,6DACjBD,GAAa,GADI,kBAIEE,MAAM1G,EAAK,CAC5BmG,aALe,cAIVQ,EAJU,gBAOGA,EAAIC,OAPP,OAOVC,EAPU,OAShBP,EAAc,CACblF,KAAM,gBACN3C,MAAOoI,EAAKpI,MACZmC,MAAOiG,EAAK5B,UAAUrE,MACtBC,IAAKgG,EAAK5B,UAAUpE,MAGrB2F,GAAa,GAhBG,kDAkBhBM,QAAQC,IAAI,aAAc,KAAMC,SAChCR,GAAa,GAnBG,0DAAH,oDAuBfS,GAEO,WACNT,GAAa,OAGb,CAAC5F,EAAOC,EAAKmE,EAASsB,IAElBC,GAkGKW,GAAwB,SAACxE,GAAU,IAAD,EAI1CR,qBAAWoC,IAFLa,EAFoC,EAE7C1G,MAAS0G,WACTmB,EAH6C,EAG7CA,cAH6C,EAKZzD,oBAAS,GALG,mBAKvC0D,EALuC,KAK5BC,EAL4B,KA2C9C,OApCAnD,qBAAU,WAET,GAAIjE,kBAAQ+F,EAAWzC,IAAQ,CAC9B,IAAI1C,EAAG,UAAMkG,GAAN,gBAAuBxD,GA2B9B,OAzBe,uCAAG,8BAAA+D,EAAA,6DACjBD,GAAa,GADI,kBAIEE,MAAM1G,EAAK,CAC5BmG,aALe,cAIVQ,EAJU,gBAOGA,EAAIC,OAPP,OAOVC,EAPU,OAShBP,EAAc,CACblF,KAAM,qBACNsB,OACAqD,SAAUc,EAAKd,SACfC,MAAOa,EAAKb,QAGbQ,GAAa,GAhBG,kDAkBhBM,QAAQC,IAAI,aAAc,KAAMC,SAChCR,GAAa,GAnBG,0DAAH,oDAuBfS,GAEO,WACNT,GAAa,OAGb,CAAC9D,EAAMyC,EAAYmB,IAEfC,GASKY,GAAkB,SAAC/D,EAAKgE,GACpC/D,qBAAU,WACT,IAAIgE,GAAgB,EAChBC,GAAqB,EAEnBC,EAAW,SAACC,IAEbH,GAAkBC,GAEjBlE,EAAIqE,UAAWrE,EAAIqE,QAAQC,SAASF,EAAMjF,SAE/C6E,EAAQI,IAGHG,EAAqB,SAACH,GAC3BF,EAAqBlE,EAAIqE,QACzBJ,EAAgBjE,EAAIqE,SAAWrE,EAAIqE,QAAQC,SAASF,EAAMjF,SAO3D,OAJA2B,SAAS0D,iBAAiB,YAAaD,GACvCzD,SAAS0D,iBAAiB,aAAcD,GACxCzD,SAAS0D,iBAAiB,QAASL,GAE5B,WACNrD,SAAS2D,oBAAoB,YAAaF,GAC1CzD,SAAS2D,oBAAoB,aAAcF,GAC3CzD,SAAS2D,oBAAoB,QAASN,MAErC,CAACnE,EAAKgE,KChQK,SAASU,GAAT,GAAuC,IAArBlF,EAAoB,EAApBA,kBDoIG,WAAO,IAAD,EACPC,oBAAS,GADF,mBAClC0D,EADkC,KACvBC,EADuB,KAEjCpE,EAAwBF,qBAAW3B,GAAnC6B,oBAERiB,qBAAU,WACT,IAAIrD,EAAG,UAAMkG,GAAN,aAyBP,OAvBe,uCAAG,8BAAAO,EAAA,6DACjBD,GAAa,GADI,kBAIEE,MAAM1G,EAAK,CAC5BmG,aALe,cAIVQ,EAJU,gBAOGA,EAAIC,OAPP,OAOVC,EAPU,OAShBzE,EAAoB,CACnBhB,KAAM,oBACNN,aAAc+F,IAGfL,GAAa,GAdG,kDAgBhBM,QAAQC,IAAI,aAAc,KAAMC,SAChCR,GAAa,GAjBG,0DAAH,oDAqBfS,GAEO,WACNT,GAAa,MAEZ,CAACpE,ICpKJ2F,GAEA,IAAQC,EAAaxK,EAAbwK,SAER,OACC,wBAAQ1K,UAAU,qBAAlB,SACC,sBAAKA,UAAU,8BAAf,UACC,qBAAKA,UAAU,iBAAf,SACC,cAACqF,EAAD,CAAYC,iBAAkBA,MAE/B,sBAAKtF,UAAU,QAAf,UACC,wBACCA,UAAU,uBACVmF,QAAS,kBAAOhF,OAAOwK,SAASC,KAAOF,GACvC3K,MAAM,QAHP,mBAOA,oBAAIC,UAAU,oBAAd,2C,iCCrBU6K,GADK3H,wBAAc,MAGrB4H,GAAc,CAC1B5C,KAAM,GACN6C,YAAY,EACZC,aAAc,KACdvD,SAAU,KACVwD,iBAAiB,GAGX,SAASC,GAAYtH,EAAOC,GAClC,OAAQA,EAAOC,MACd,IAAK,QACJ,OAAO,2BACHF,GADJ,IAECsE,KAAMrE,EAAOqE,KACb6C,YAAY,EACZC,aACCnH,EAAOmH,cAAgB,GAAInH,EAAOmH,eAGrC,IAAK,4BACJ,OAAO,2BACHpH,GADJ,IAEC6D,SAAU5D,EAAOsH,YACjBF,iBAAiB,IAGnB,IAAK,yBACJ,OAAO,2BACHrH,GADJ,IAEC6D,SAAUqD,GAAYrD,SACtBwD,iBAAiB,IAGnB,IAAK,MACJ,OAAOH,GAGR,QACC,OAAOlH,GCrCV,IAkDewH,GAlDHvF,sBAAW,WAA+BC,GAAS,IAArCuF,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,UAAWrL,EAAoB,EAApBA,SAAoB,EAC7BsF,oBAAS,GADoB,mBACtDgG,EADsD,KAC5CC,EAD4C,OAOzD5G,qBAAWiG,IAJdY,YACSrE,EAJmD,EAI3Dc,KAAQd,UACRsE,EAL2D,EAK3DA,cAGEC,EAAU,CAAC,MAAO,MAAO,QAEvBC,EAAiB,YACjBF,GAAiBG,mBAAUR,EAAKjE,IAIrCoE,GAAY,IAgCb,OA5BKM,aAAQT,IACXM,EAAQI,KAAK,SAGVC,aAAOX,KAASS,aAAQT,IAC3BM,EAAQI,KAAK,QAGVR,GACHI,EAAQI,KAAK,YAIb,sBACC/L,UAAW2L,EAAQ3I,KAAK,KACxB8C,IAAKgG,aAAQT,GAAOvF,EAAM,KAC1BmG,WAAYL,EACZM,YAAa,kBAAMV,GAAY,IAC/BW,OAAQ,kBAAMX,GAAY,IAL3B,UAOEF,EAAY,sBAAMtL,UAAU,QAAhB,SAAyBsL,IAAoB,GAC1D,sBAAMtL,UAAU,SAAhB,SAA0BS,kBAAO4K,EAAKhL,KAErCJ,QC9CU,SAASmM,GAAT,GAA+D,IAA3CrM,EAA0C,EAA1CA,MAAOsM,EAAmC,EAAnCA,KAAMlH,EAA6B,EAA7BA,QAASF,EAAoB,EAApBA,OAAQhF,EAAY,EAAZA,SAChE,OACC,wBACCF,MAAOA,EACPC,UAAS,8BAAyBqM,GAClClH,QAASA,EACTF,OAAQA,GAAkB,GAC1BqH,IAAI,aALL,SAOErM,I,aCJW,SAASsM,GAAT,GAA2C,IAAtBrE,EAAqB,EAArBA,KAAM9G,EAAe,EAAfA,YACjCF,EAA6BgH,EAA7BhH,GAAIsL,EAAyBtE,EAAzBsE,UAAWC,EAAcvE,EAAduE,UADiC,EAEvB7H,qBAAWoC,IAApC7F,EAFgD,EAEhDA,MAAO6H,EAFyC,EAEzCA,cA2Ef,OACC,sBAAKhJ,UAAU,YAAf,UACC,cAACoM,GAAD,CACCC,KAAK,OACLtM,MAAM,YACNoF,QAAS,kBAAMhF,OAAOuM,KAAKD,EAAW,WACtCxH,OAAO,SAJR,yBAQA,cAACmH,GAAD,CACCC,KAAK,OACLtM,MAAM,yBACNoF,QAAS,kBAAMhF,OAAOuM,KAAKC,kBAAOH,GAAY,WAH/C,uBAOCpL,EACA,cAACgL,GAAD,CACCC,KAAK,WACLtM,MAAM,qBACNoF,QA9DiB,SAACH,GACrBA,EAAEoB,iBADyB,IAGnBlF,EAAkBgH,EAAlBhH,GAAIkG,EAAcc,EAAdd,UACNmB,EAAW,cACXxH,EAASE,EAAYsH,EAAUpH,GAC/BqH,EAAgBjI,EAAO6G,GACvB7F,EAAcN,EAAYuH,EAAerH,GAEzCyL,EAAStL,EACdP,EACAQ,EACA,CACCP,YAAauH,EACbvG,MAAOjB,EAAO8L,WAAU,SAACC,GAAD,OAAUA,EAAK5L,KAAOA,MAE/C,CAAEF,YAAawH,IAGhBQ,EAAc,CACblF,KAAM,OACN/C,OAAQ6L,EAAOrE,GACfhH,YAAaqL,EAAOpE,GACpBD,WACAC,kBAGDQ,EAAc,CACblF,KAAM,SACN5C,KACAE,aAAa,KA6BZ,6BAQA,cAACgL,GAAD,CACCC,KAAK,aACLtM,MAAM,uBACNoF,QAtGmB,SAACH,GACvBA,EAAEoB,iBAD2B,IAGrBgB,EAA2Bc,EAA3Bd,UAAW9E,EAAgB4F,EAAhB5F,YACbiG,EAAWhI,EAAO6G,GAClBoB,EAAgB,cAEhBoE,EAAStL,EACdL,EAAYsH,EAAUpH,GACtBF,EAAYuH,EAAerH,GAC3B,CAAEH,YAAauH,GACf,CAAEvH,YAAawH,IAGhBQ,EAAc,CACblF,KAAM,OACN/C,OAAQ6L,EAAOrE,GACfhH,YAAaqL,EAAM,YACnBrE,WACAC,kBAGDQ,EAAc,CACblF,KAAM,SACN5C,KACAsG,OAAQ,CACPlF,YAAaD,EAAiBC,GAAa,IAE5ClB,aAAa,KAuEZ,wBAQD,cAACgL,GAAD,CAAUC,KAAK,QAAQtM,MAAM,kBAAkBoF,QAzC/B,WACjB6D,EAAc,CACblF,KAAM,QACN5C,GAAIA,KAsCJ,+B,aC5GY,SAAS6L,GAAT,GAA6C,IAA7B7E,EAA4B,EAA5BA,KAAMlG,EAAsB,EAAtBA,MAAOZ,EAAe,EAAfA,YAC3C,EAGIwD,qBAAWoC,IAFLE,EADV,EACC/F,MAAS+F,YACT8B,EAFD,EAECA,cAGe+B,EACZnG,qBAAWiG,IADdY,YAAeV,WAGAvH,EACZoB,qBAAW3B,GADd4B,YAAerB,aAEhB,EAA0B+B,mBAAS,IAAnC,mBAAOhB,EAAP,KAAcyI,EAAd,KACA,EAAoDzH,mBAAS,MAA7D,mBAAO0H,EAAP,KAA2BC,EAA3B,KAEAnH,qBAAU,WACT,QAAqB5D,IAAjBqB,IAA8B1B,kBAAQ0B,GAM1C,OAFAwJ,EAASxJ,EAAa0E,EAAK5F,aAAaiC,OAEjC,WACNyI,EAAS,OAER,CAAC9E,EAAK5F,YAAakB,IAEtB,IAAM2J,EAAc,SAACnI,GAEhBA,EAAEC,OAAOmI,UAAUhD,SAAS,SAIhCpB,EAAc,CACblF,KAAM,kBACNoE,KAAMA,EACN9G,iBAIIiM,EAAmB,SAACrI,IAY1B,SAAsBsI,EAAtB,GAA4D,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC1CnK,EAAQoK,YAAYC,MAExBT,GAAsB,kBACrBU,uBAAsB,SAAiBC,GACtC,IAEIC,EAAWP,GAFKM,EAAOvK,GAASmK,GAGpCD,EAAKF,EAASQ,SAnBhBC,CAAa/I,EAAEgJ,cAAe,CAC7BT,OAAQ,SAAUU,GACjB,OAAOA,GAERT,KAAM,SAAUF,EAASQ,GACxBR,EAAQY,MAAMC,cAAgBL,EAAW,GAAK,MAE/CL,SAAU,MAiBZ,IAAMW,EAAmB,SAACpJ,GACzBA,EAAEgJ,cAAcE,MAAMC,cAAgB,EACtCE,qBAAqBpB,IAGhBqB,EAAkB,SAACtJ,GAGtBA,EAAEC,OAAOmI,UAAUhD,SAAS,cAC5BpF,EAAEC,OAAOmI,UAAUhD,SAAS,cAE7BiE,qBAAqBpB,GACrBjI,EAAEgJ,cAAcE,MAAMC,cAAgB,IAIxC,SAASI,EAAgBC,GACxB,IAAI7C,EAAU,CACb,OADa,kBAEFzD,EAAKhH,GAFH,oBAEiBgH,EAAK5F,cA6BpC,OAzBkB,IAAhBlB,IAC2C,IAA3CoC,EAAa0E,EAAK5F,aAAa+B,UAChB,IAAhBjD,EAEAuK,EAAQI,KAAK,WAEbJ,EAAQI,KAAK,UAGTjK,kBAAQoF,IAAgBA,EAAYhG,KAAOgH,EAAKhH,IACpDyK,EAAQI,KAAK,eAGVyC,EAASzD,YACZY,EAAQI,KAAK,YAGgB,gBAA1ByC,EAASC,aACZ9C,EAAQI,KAAK,qBACuB,OAA1ByC,EAASC,aACnB9C,EAAQI,KAAK,kBAEbJ,EAAQI,KAAK,cAGPJ,EAAQ3I,KAAK,KAGrB,OAAQlB,kBAAQ0B,GA0CZ,KAzCH,cAAC,KAAD,CAAWkL,YAAW,UAAKxG,EAAKhH,IAAMc,MAAOA,EAA7C,SACE,WAAgDwM,GAAhD,IAAGG,EAAH,EAAGA,SAAUC,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,gBAA7B,OACA,kEACC/I,IAAK6I,GACDC,GACAC,GAHL,IAICC,IAAK5G,EAAKhH,GACVlB,UAAWuO,EAAgBC,GAC3BO,aAAY/M,EACZmD,QAASgI,EACT6B,aAAc3B,EACd4B,aAAcb,EACdc,YAAaZ,IAEb,qBACCtO,UAAU,WACVkO,MAAO,CACNiB,gBAAiB5K,GAHnB,SAMC,mBAAGvE,UAAU,kBAAb,SACE2M,kBAAOzE,EAAKf,WAAY,CAAEiI,MAAO,eAGlCrE,EAYD,GAXA,cAACwB,GAAD,CACC2B,MAAO,CACNiB,gBAAiB5K,EAAM8K,QACtB,OACA,WAGFnH,KAAMA,EACN9G,YAAaA,QCxJL,SAASkO,GAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,YAAavP,EAAmB,EAAnBA,UAAWQ,EAAQ,EAARA,KAC1D,EAA8B+E,oBAAS,GAAvC,mBAAOiK,EAAP,KAAgBC,EAAhB,KAEMzO,GACI,IAATR,EAAiB,cAAgBC,kBAAOD,EAAMH,GAiBzCqP,EAAiBC,mBAfT,WACb,OAAI7N,kBAAQyN,GACJ,KAGDA,EAAYK,KAAI,SAAC1H,EAAMlG,GAAP,OACtB,cAAC+K,GAAD,CACC7E,KAAMA,EAENlG,MAAOA,EACPZ,YAA6B,gBAAhBJ,GAFRkH,EAAKhH,SAOyB,CAACqO,EAAavO,IAEpD,OACC,cAAC,KAAD,CAAWA,YAAaA,EAAxB,SACE,WAA4CwN,GAA5C,IAAGG,EAAH,EAAGA,SAAUkB,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,YAA7B,OACA,6CACChK,IAAK6I,GACDkB,GAFL,IAGC7P,UAAS,mBAAcA,EAAd,YACRwO,EAASuB,eAAiB,eAAiB,QAE5Cf,aAAc,kBAAMS,GAAW,IAC/BR,aAAc,kBAAMQ,GAAW,IAC/BvB,MAAOsB,EAAU,CAAEQ,aAAc,GAAM,KARxC,UAUEN,EACAI,SCxCS,SAASG,GAAT,GAA8C,IAArB5E,EAAoB,EAApBA,IAAKjK,EAAe,EAAfA,YACpC4H,EAAkBpE,qBAAWoC,IAA7BgC,cAYR,OACC,wBAAQhJ,UAAU,eAAemF,QAXZ,SAACH,GACtBA,EAAEoB,iBAEF4C,EAAc,CACblF,KAAM,WACNsD,UAAWiE,GAAY,IAAIrF,KAC3B5E,YAAaA,IAA4B,KAK1C,wBCba,SAAS8O,GAAT,GAA2C,IAAvB/O,EAAsB,EAAtBA,MAAOX,EAAe,EAAfA,KAAMT,EAAS,EAATA,MAE/BgL,EACZnG,qBAAWiG,IADdY,YAAeV,WA6BhB,OA1BuB,WACtB,IAAMoF,EACL,qCACGpF,EAEE,KADH,cAACkF,GAAD,CAAe5E,IAAK7K,EAAMY,aAAa,IAExC,cAACkO,GAAD,CACCtP,UAAU,WACVQ,KAAMA,EACN+O,YAAapO,OAKhB,OAAIpB,EAEF,qCACC,oBAAIC,UAAU,QAAd,SAAuBD,IACtBoQ,KAIIA,EAIFT,G,cCpBO,SAASU,GAAT,GAA4C,IAAxBpQ,EAAuB,EAAvBA,UAAWqQ,EAAY,EAAZA,SAEnChP,EACNuD,qBAAWoC,IADd7F,MAASE,UAGMgC,EACZuB,qBAAW3B,GADd4B,YAAexB,UAGhB0F,GAAuB1F,EAAUC,MAAOD,EAAUE,KAElD,IAAM+M,EAAsBC,uBAAY,WAKvC,IAJA,IAAMC,EAAO,GAET/J,EAAYzC,kBAAYX,EAAUC,OAE7BmN,EAAI,EAAGA,EAAI,EAAGA,IACtBD,EAAKzE,KACJ,qBAAK/L,UAAU,kBAAf,SACES,kBAAO0F,kBAAQM,EAAWgK,GAAIpQ,IADMoQ,IAMxC,OAAO,qBAAKzQ,UAAU,WAAf,SAA2BwQ,MAChC,CAACnN,EAAUC,QAERoN,EAAaH,uBAAY,WAO9B,IANA,IAAMI,EAAO,GAETH,EAAO,GACPnF,EAAMhI,EAAUC,MAChBsN,GAAmB,EAEhBvF,EAAMhI,EAAUE,KAAK,CAC3B,IAAK,IAAIkN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAMI,EACLC,aAAkBzF,IAAQuF,EAE3BJ,EAAKzE,KACJ,cAAC,GAAD,CAECjG,IAAKgG,aAAQT,GAAOgF,EAAW,KAC/BhF,IAAKA,EACLC,UACCuF,EACGpQ,kBAAO4K,EAAKhL,GACZ,GAPL,SAUC,cAAC6P,GAAD,CACC1P,KAAM6K,EACNlK,MAAOE,EAAUd,EAAO8K,IACxB0F,WAAW,EACXC,aAAa,KAbT3F,IAkBPuF,GAAmB,EACnBvF,EAAMlF,kBAAQkF,EAAK,GAGpBsF,EAAK5E,KACJ,qBAAK/L,UAAU,MAAf,SACEwQ,GADwBnF,IAI3BmF,EAAO,GAER,OAAO,qBAAKxQ,UAAU,OAAf,SAAuB2Q,MAC5B,CAACtN,EAAUE,IAAKF,EAAUC,MAAOjC,EAAWgP,IAW/C,OACC,qBAAKrQ,UAAWA,EAAhB,SACsB,OAApBqD,EAAUC,OAAoC,OAAlBD,EAAUE,IATvC,sBAAKvD,UAAU,wBAAf,UACEsQ,IACAI,OASC,O,cC3FS,SAASO,GAAT,GAA8B,IAAdjR,EAAa,EAAbA,UAEpBqB,EACNuD,qBAAWoC,IADd7F,MAASE,UAFiC,EASvCuD,qBAAW3B,GAHd4B,YACCxB,UAAaC,EAP4B,EAO5BA,MAAOC,EAPqB,EAOrBA,IAItBwF,GAAuBzF,EAAOC,GAE9B,IAAMmN,EAAa,WAClB,IAAIF,EAAO,GACPnF,EAAM/H,EACNqI,EAAU,CAAC,WAEf,GAAY,cAARpI,GAA+B,OAARA,EAC1B,KAAO2N,mBAAS7F,IAAQ6F,mBAAS3N,IAC5BuI,aAAQT,IACXM,EAAQI,KAAK,SAEVC,aAAOX,KAASS,aAAQT,IAC3BM,EAAQI,KAAK,QAGdyE,EAAKzE,KACJ,oBAAc/L,UAAW2L,EAAQ3I,KAAK,KAAtC,SACC,cAACkN,GAAD,CACC1P,KAAM6K,EACNlK,MAAOE,EAAUd,EAAO8K,IACxB0F,WAAW,EACXhR,MAAOU,kBAAO4K,EAAKhL,GACnB8Q,eAAe,KANR9F,IAWVA,EAAMlF,kBAAQkF,EAAK,GAIrB,OAAOmF,GAaR,OACC,qBAAKxQ,UAAWA,EAAhB,SACY,OAAVsD,GAA0B,OAARC,EAVnB,mCACC,qBAAKvD,UAAU,mBAAf,SACC,6BAAK0Q,UAQ0C,O,aClErC,SAASU,GAAT,GAA6D,IAAvChM,EAAsC,EAAtCA,KAAMiM,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAarR,EAAY,EAAZA,SAc9D,OAXE,sBACCD,UAAS,iCAA4BoF,EAA5B,YACRkM,EAAc,cAAgB,IAFhC,UAKED,EAAQ,uBAAOE,QAASnM,EAAhB,SAAuBiM,IAAiB,KAChDpR,KCTU,SAASuR,GAAT,GAAwC,IAAxBxR,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SACzC,OACC,sBAAMD,UAAWA,EAAS,eAAWA,GAAc,OAAnD,SACEC,I,cCoBEwR,GAAkB,CACvBvJ,KAAM,GACNwJ,UAAU,GAGLC,GAAmB,CACxBC,SAAU,GACVC,SAAU,IAGX,SAASC,GAAgBlO,EAAOC,GAC/B,OAAQA,EAAOC,MACd,IAAK,MACJ,MAAO,CACNoE,KAAMrE,EAAOqE,KACbwJ,UAAU,GAGZ,IAAK,OACJ,IAAQ/I,EAAU9E,EAAV8E,MACFzD,EAAUrB,EAAVqB,MAMN,MAJc,cAAVyD,IACHzD,EAAQ,IAAIc,KAAKd,IAGX,2BACHtB,GADJ,IAECsE,KAAK,2BACDtE,EAAMsE,MADN,kBAEFS,EAAQzD,MAIZ,IAAK,kBACJ,IAAM6M,EAAUC,SAASnO,EAAOkO,SAC1B/P,IAAQ4B,EAAMsE,KAAKL,WAAWoK,eAAepO,EAAO4E,WACvD7E,EAAMsE,KAAKL,WAAWhE,EAAO4E,UAAUyJ,QAAQH,GAE9CI,GACQ,IAAXnQ,EAAA,uBACO4B,EAAMsE,KAAKL,WAAWhE,EAAO4E,WADpC,CAC+CsJ,KAClC,IAAV/P,EACA,CAAC+P,GADD,uBAGGnO,EAAMsE,KAAKL,WAAWhE,EAAO4E,UAAU7F,MACzC,EACAZ,IALD,aAOG4B,EAAMsE,KAAKL,WAAWhE,EAAO4E,UAAU7F,MACzCZ,EAAQ,KAIb,OAAO,2BACH4B,GADJ,IAECsE,KAAK,2BACDtE,EAAMsE,MADN,IAEHL,WAAW,2BACPjE,EAAMsE,KAAKL,YADL,kBAERhE,EAAO4E,SAAW0J,QAKvB,IAAK,QACJ,OAAOV,GAER,QACC,MAAO,CAAE7N,UAIZ,SAASwO,GAAiBxO,EAAOC,GAChC,OAAQA,EAAOC,MACd,IAAK,WACJ,OAAO,2BACHF,GADJ,IAECgO,SAAU/N,EAAOwO,SAGnB,IAAK,WACJ,OAAO,2BACHzO,GADJ,IAECiO,SAAUhO,EAAOwO,SAGnB,QACC,OAAOzO,GAIK,SAAS0O,KACvB,IACgB9O,EACZoB,qBAAW3B,GADd4B,YAAerB,aAEhB,EAGIoB,qBAAWoC,IAHf,IACC7F,MAAS+F,EADV,EACUA,YAAaW,EADvB,EACuBA,WAAyBS,EADhD,EACmClH,YAClC4H,EAFD,EAECA,cAED,EAAqCuJ,qBACpCT,GACAL,IAFD,mBAAOe,EAAP,KAAiBC,EAAjB,KAIA,EAAuCF,qBACtCH,GACAT,IAFD,mBAAOe,EAAP,KAAkBC,EAAlB,KAIMC,EAAOC,iBAAO,MACdC,EAAUD,iBAAO,IACvB,EAAwBtN,mBAAS,IAAIS,MAArC,mBAAOxF,EAAP,KAAauS,EAAb,KACA,EAA8CxN,mBAAS,IAAvD,mBAAOyN,EAAP,KAAwBC,EAAxB,KACA,EAAoD1N,oBAAS,GAA7D,mBAAO2N,EAAP,KAA2BC,EAA3B,KACA,EAAgD5N,oBAAS,GAAzD,mBAAO6N,EAAP,KAAyBC,EAAzB,KAEQnL,EAAmBsK,EAAnBtK,KAAMwJ,EAAac,EAAbd,SAEbxQ,EAWGgH,EAXHhH,GACAiG,EAUGe,EAVHf,WACAmM,EASGpL,EATHoL,UACAlM,EAQGc,EARHd,UACA9E,EAOG4F,EAPH5F,YACAiR,EAMGrL,EANHqL,aACAC,EAKGtL,EALHsL,MACAhH,EAIGtE,EAJHsE,UACAC,EAGGvE,EAHHuE,UACYgH,GAETvL,EAFHL,WACAzG,GACG8G,EADH9G,YAID2E,qBAAU,WAST,OARK+M,EAAQ3I,QAAQ7H,cACpBwQ,EAAQ3I,QAAQ7H,YAAcA,GAG1BwQ,EAAQ3I,QAAQuJ,OACpBZ,EAAQ3I,QAAQuJ,KAAOJ,GAGjB,WACNR,EAAQ3I,QAAU,MAEjB,CAACmJ,EAAWhR,IAEfyD,qBAAU,WAKT,OAJIqB,GAA2B,cAAdA,GAChB2L,EAAQ,IAAI/M,KAAKoB,IAGX,WACN2L,EAAQ,IAAI/M,SAEX,CAACoB,IAEJrB,qBAAU,WACT,IAAI4N,EAAU,IAEM,IAAhBvS,GACHuS,EAAQ5H,KAAK,UAAW,UACd6H,aAASpT,GACnBmT,EAAQ5H,KAAK,WACHC,aAAOxL,IACjBmT,EAAQ5H,KAAK,UAGd,IAAM8H,EnB5HD,SAA0BzP,GAAyB,IAAfuP,EAAc,uDAAJ,GAChDG,EAAW1P,EACf,GAAIuP,EAAQvR,OAAS,EACpB,IAAK,IAAI0M,KAAOgF,EACXH,EAAQnR,SAASsM,KACpBgF,EAAWC,eAAKD,EAAUhF,IAK7B,OAAOgF,EmBkHaE,CAAiBxQ,EAAcmQ,GAIlD,OAFAV,EAAmBY,GAEZ,WACNZ,EAAmB,OAElB,CAACzS,EAAMY,GAAaoC,IAEvBuC,qBAAU,WACT,IAAQqB,EAA2BF,EAA3BE,UAAW9E,EAAgB4E,EAAhB5E,YAUnB,OARA6Q,KACC/L,IACE0E,aAAQ1E,KAAc4E,aAAO5E,IACd,YAAhB9E,IAKK,WACN6Q,GAAsB,MAErB,CAACjM,IAEJnB,qBAAU,WACT,IAAQ7E,EAAOgG,EAAPhG,GAQR,OAPIA,EAAK,GAAY,IAAPA,IACbuR,EAAiB,CAChB3O,KAAM,MACNoE,KAAMhB,IAID,WACNuL,EAAiB,CAChB3O,KAAM,aAGN,CAACoD,IAEJ,IA2F6B2M,GA3FvBI,GAAa1D,uBAAY,WAC9BkC,EAAiB,CAChB3O,KAAM,UAGPkF,EAAc,CACblF,KAAM,wBAEL,CAAC2O,EAAkBzJ,IA+ChBkL,GAAoB,SAAClP,GAC1ByN,EAAiB,CAChB3O,KAAM,OACN6E,MAAO3D,EAAEC,OAAOG,KAChBF,MAAOF,EAAEC,OAAOC,SAYZiP,GAA2B,SAACnP,GACjCyN,EAAiB,CAChB3O,KAAM,kBACN2E,SAAUzD,EAAEC,OAAOmP,QAAQ,YAAYhP,KACvC2M,QAAS/M,EAAEC,OAAOC,SA0BpB,OAFA2E,GAAgB+I,EAAMqB,IAGrB,qBACCjU,UAAS,mBAAc0R,EAAW,SAAW,YAC7C5L,IAAKgN,EAFN,SAIC,qBAAK9S,UAAU,sBAAf,SACE0R,EACA,sBAAK5L,IAAK8M,EAAM5S,UAAU,mBAA1B,UACC,wBAAQA,UAAU,aAAamF,QAAS8O,GAAxC,2BAGA,uBACCjU,UAAS,yBACRoT,EAAmB,eAAiB,IAErCiB,SA1Ge,SAACrP,GACrBA,EAAEoB,iBAGF,IAAMpE,IAAQZ,IACXkH,EAAiBuE,WAAU,SAACC,GAAD,OAAUA,EAAK5L,KAAOA,KAGpD8H,EAAc,CACblF,KAAM,SACN5C,GAAIA,EACJsG,OAAQ,CACPL,aACAmM,YACAlM,UAAW3G,kBAAO,IAAIuF,KAAKoB,GAAY/G,GACvCiC,YAAaD,EAAiBC,EAAalB,IAC3CmS,eACA1L,WAAY4L,IAEbrS,eACAqG,SAAUzF,IAGXgH,EAAc,CACblF,KAAM,sBAGP2O,EAAiB,CAChB3O,KAAM,WA0EH,UAMC,sBAAK9D,UAAU,kBAAf,UACC,cAACoR,GAAD,CAAYhM,KAAK,aAAjB,SACC,uBACCA,KAAK,aACLlE,GAAG,aACHgE,MAAOyH,kBAAOxF,EAAY,CACzBiI,MAAO,WAERU,YAAY,iBACZxJ,SAAU4N,OAGZ,oBACClU,UAAU,WACV4K,KAAM+B,kBAAOH,GACbvH,OAAO,SACPqH,IAAI,aAJL,iBAMM,IACL,cAACkF,GAAD,CAAMxR,UAAU,cAAhB,+BAKF,sBAAKA,UAAU,SAAf,UACC,sBAAKA,UAAU,eAAf,UAEC,YADC8S,EAAQ3I,QAAQ7H,YAEhB,cAAC8O,GAAD,CAAYhM,KAAK,YAAjB,SACC,sBAAKpF,UAAU,YAAf,UACC,sBAAMA,UAAU,OAAhB,SACC,mBACC4K,KAAM6B,EACNxH,OAAO,SACPqH,IAAI,aAHL,SAKE7J,EACAgK,OAIH,uBACCrH,KAAK,YACLlE,GAAG,YACHgE,MAAOoO,EACPhN,SAAU4N,UAKb,GAED,eAAC9C,GAAD,CAAYhM,KAAK,OAAjB,UACC,sBACCpF,UAAS,qBACQ,IAAhBoB,GACG,WACA,UAJL,UAOC,uBAAOmQ,QAAQ,YAAf,uBAGA,cAAC,IAAD,CACC5K,cAAe,SAAC3B,GAAD,OACdA,EAAEC,SAAW2B,UAEdP,SAAU7F,EACV8T,eAAe,QACfC,eAAa,EACblU,WAAYA,EACZiG,SA9GmB,SAAC9F,GACjB,OAATA,IACHA,EAAO,IAAIwF,MAGZyM,EAAiB,CAChB3O,KAAM,OACN6E,MAAO,YACPzD,MAAO1E,KAuGEgU,SAAUtB,OAGZ,sBAAKlT,UAAU,cAAf,UACC,uBACC8D,KAAK,WACLsB,KAAK,cACLlE,GAAG,cACHuT,QAASrT,GACTkF,SAxIkB,SAACtB,GAC7ByN,EAAiB,CAChB3O,KAAM,OACN6E,MAAO3D,EAAEC,OAAOG,KAChBF,OAAQgD,EAAKlD,EAAEC,OAAOG,WAsId,uBAAOmM,QAAQ,cAAf,+BAKF,cAACH,GAAD,CACChM,KAAK,eACLiM,MAAM,UAFP,SAIC,0BACCjM,KAAK,eACLkB,SAAU4N,GACVvD,KAAM,EACNzL,MAAOyH,kBAAO4G,EAAc,CAC3BnE,MAAO,kBAKX,sBAAKpP,UAAU,gBAAf,UACC,qBAAKA,UAAU,oBAAf,UACuB,IAArBoT,EACA,sBAAKpT,UAAU,gBAAf,UACC,mBACCkO,MAAO,CACNwG,WAAY,QAFd,uDAQA,uBACC5Q,KAAK,SACLqB,QAhMS,WACpB6D,EAAc,CACblF,KAAM,QACN5C,OAGDuR,EAAiB,CAChB3O,KAAM,UAGPuP,GAAoB,IAuLTnO,MAAM,MACNyP,WAAW,IAGZ,uBACC7Q,KAAK,SACLqB,QAAS,kBACRkO,GACC,IAGFnO,MAAM,UAIR,qCACC,uBACCpB,KAAK,SACL9D,UAAU,OACVkF,MACQ,IAAPhE,EACG,OACA,WAGL,uBACC4C,KAAK,SACL9D,UAAU,QACVmF,QAAS,kBACRkO,GACC,IAGFnO,MAAM,gBAKV,sBAAKlF,UAAU,qBAAf,UACC,uBAAOuR,QAAQ,cAAf,yBAGA,wBACCnM,KAAK,cACLkB,SAAU4N,GACVhP,MAAO5C,EAHR,UA1LoBuR,GAgMlBb,EA/LHvO,OAAOC,KAAKmP,IAAYjE,KAAI,SAACrN,GAAD,OAClC,wBAAqB2C,MAAO3C,EAA5B,SACEsR,GAAWtR,GAAQ6C,MADR7C,YAkMP,cAAC6O,GAAD,CAAYhM,KAAK,aAAjB,SACC,oBACCwF,KAAM+B,kBAAOH,GACbvH,OAAO,SACPqH,IAAI,aAHL,2BAKgB,IACf,cAACkF,GAAD,CAAMxR,UAAU,cAAhB,yBAGCwT,EACA,qBACCoB,IAAKpB,EACLqB,IAAG,UAAK1N,KAGT,cAML,eAACiK,GAAD,CAAYhM,KAAK,aAAjB,UACC,qBAAKpF,UAAU,WAAf,SACC,2BAAUoF,KAAK,WAAf,UACC,gDACA,sBAAKpF,UAAU,SAAf,UACC,uBAAOuR,QAAQ,kBAAf,+BAGA,uBACCrQ,GAAG,kBACHkE,KAAK,kBACLtB,KAAK,OACLoB,MAAOwN,EAAUd,SACjBtL,SAAU,SAACtB,GAAD,OACT2N,EAAkB,CACjB7O,KAAM,WACNuO,OAAQrN,EAAEC,OAAOC,cAKrB,qBAAKlF,UAAU,QAAf,SACE6H,EAAW+J,SAASlJ,MAAMkH,KAC1B,WAEC5N,GACK,IAFHoD,EAEE,EAFFA,KAAMsO,EAEJ,EAFIA,KAAM3B,EAEV,EAFUA,QAGd,OAAO3M,EACL0P,cACAtS,SACAkQ,EAAUd,SAASkD,gBAGnB,KADDpC,EAAUd,SAEV,wBAECL,QAASmC,EAFV,UAIC,uBACC5P,KAAK,WACLsB,KAAMsO,EACNxS,GAAIwS,EACJxO,MAAO6M,EACPzL,SACC6N,GAEDM,SACE3S,kBACA2R,MAEA3R,kBACA2R,GAAgB7B,WAEjB6B,GAAgB7B,SAASpP,SACxBuP,KAIFpF,kBAAOvH,EAAM,CACbgK,MAAO,aAxBHpN,GA4BN,aAON,qBAAKhC,UAAU,WAAf,SACC,2BAAUoF,KAAK,WAAf,UACC,0CACA,sBAAKpF,UAAU,SAAf,UACC,uBAAOuR,QAAQ,kBAAf,8BAGA,uBACCrQ,GAAG,kBACHkE,KAAK,kBACLtB,KAAK,OACLoB,MAAOwN,EAAUb,SACjBvL,SAAU,SAACtB,GAAD,OACT2N,EAAkB,CACjB7O,KAAM,WACNuO,OAAQrN,EAAEC,OAAOC,cAKrB,qBAAKlF,UAAU,QAAf,SACE6H,EAAWgK,SAASnJ,MAAMkH,KAC1B,WAEC5N,GACK,IAFHoD,EAEE,EAFFA,KAAMsO,EAEJ,EAFIA,KAAM3B,EAEV,EAFUA,QAGd,OAAO3M,EACL0P,cACAtS,SACAkQ,EAAUb,SAASiD,gBAGnB,KADDpC,EAAUb,SAEV,kCACC,uBACC/N,KAAK,WACLsB,KAAMsO,EACNxS,GAAIwS,EACJxO,MAAO6M,EACPzL,SACC6N,GAEDM,SACE3S,kBACA2R,MAEA3R,kBACA2R,GAAgB5B,WAEjB4B,GAAgB5B,SAASrP,SACxBuP,KAIFpF,kBAAOvH,EAAM,CACbgK,MAAO,aAtBGpN,GA0BZ,sBAUN,SChqBR,IAqBe+S,GArBFlP,sBAAW,WAAeC,GAAS,IAArBuK,EAAoB,EAApBA,SAEVjN,EACZwB,qBAAW3B,GADd4B,YAAezB,SAMhB,OAHAwG,GAAsB,YACtBA,GAAsB,YAGrB,uBAAM5J,UAAU,mBAAhB,UACC,qBAAKA,UAAU,OAAO8F,IAAKA,EAA3B,SACe,aAAb1C,EACA,cAACgN,GAAD,CAAUpQ,UAAU,iBAAiBqQ,SAAUA,IAE/C,cAACY,GAAD,CAAMjR,UAAU,aAAaqQ,SAAUA,MAGzC,cAACiC,GAAD,UCtBY,SAAS0C,KAAc,IAC7BC,EAAsB/U,EAAtB+U,QAASC,EAAahV,EAAbgV,SAEXC,EAAa,SAAC,GAA2B,IAAD,mBAAzBC,EAAyB,KAAnBrV,EAAmB,KAAZkF,EAAY,KAG7C,OAFAA,EAASA,GAAkB,QAG1B,6BACC,oBAAGqH,IAAI,aAAa1B,KAAMwK,EAAMnQ,OAAQA,EAAxC,UACElF,EADF,IACS,sBAAMC,UAAU,OAAhB,+BAMZ,OACC,qBAAIA,UAAU,aAAd,UACEmV,EAAW,CAACD,EAAU,QAAS,WAC/BC,EAAW,CAACF,EAAS,aAAc,cCbxB,SAASI,KAAqB,IAElCjU,EACNwD,qBAAWoC,IADd7F,MAASC,YAKV,OjB4EuC,WAAO,IAAD,EAIzCwD,qBAAWoC,IAFLU,EAFmC,EAE5CvG,MAASuG,QACTsB,EAH4C,EAG5CA,cAH4C,EAKXzD,oBAAS,GALE,mBAKtC0D,EALsC,KAK3BC,EAL2B,KAO7CnD,qBAAU,WACT,IAAIrD,EAAG,UAAMkG,GAAN,sBAyBP,OAvBe,uCAAG,8BAAAO,EAAA,6DACjBD,GAAa,GADI,kBAIEE,MAAM1G,EAAK,CAC5BmG,aALe,cAIVQ,EAJU,gBAOGA,EAAIC,OAPP,OAOVC,EAPU,OAShBP,EAAc,CACblF,KAAM,kBACN3C,MAAOoI,EAAKpI,QAGb+H,GAAa,GAdG,kDAgBhBM,QAAQC,IAAI,aAAc,KAAMC,SAChCR,GAAa,GAjBG,0DAAH,oDAqBfS,GAEO,WACNT,GAAa,MAEZ,CAACF,EAAetB,IiBlHnB4N,GAGC,qCACC,cAAChG,GAAD,CACCtP,UAAU,oBACVQ,MAAM,EACN+O,YAAanO,IAEd,cAAC6O,GAAD,CAAe7O,aAAa,IAC5B,cAAC4T,GAAD,O,aCTY,SAASO,GAAT,GAA8C,IAAhBhR,EAAe,EAAfA,MAAOa,EAAQ,EAARA,KAC3CoQ,EAAuBtV,EAAvBsV,mBACFC,EAAU5C,mBACV6C,EAAW7C,iBAAOtO,GAHmC,EAOvDK,qBAAW3B,GAFCO,EAL2C,EAK1DqB,YAAerB,aACfsB,EAN0D,EAM1DA,oBAN0D,EAQvBS,mBAAS,IARc,mBAQpDoQ,EARoD,KAQxCC,EARwC,OAS/BrQ,oBAAS,GATsB,mBASpDsQ,EAToD,KAS5CC,EAT4C,KAW3D/P,qBAAU,iBACe5D,IAApBsT,EAAQtL,SAA0B5F,IAItCqR,EAAcrR,KACZ,CAACA,IAEJwB,qBAAU,gBAEY5D,IAApBsT,EAAQtL,SACR3G,EAAa4B,GAAMb,QAAUoR,GAC7BD,EAASvL,UAAYwL,IAKtB7Q,EAAoB,CACnBhB,KAAM,wBACNQ,WAAYc,EACZb,MAAOoR,IAGRD,EAASvL,QAAUwL,KACjB,CAACA,EAAYvQ,EAAM5B,EAAcsB,IAEpC,IAAMiR,EAAQxF,uBAAY,kBAAMuF,GAAU,KAAQ,IAGlD,OAFAjM,GAAgB4L,EAASM,GAGxB,sBAAK/V,UAAU,SAAf,UACC,qBACCA,UAAU,SACVkO,MAAO,CAAEiB,gBAAiBwG,GAC1BxQ,QAAS,kBAAM2Q,GAAU,MAGzBD,GACA,sBAAK7V,UAAU,UAAU8F,IAAK2P,EAA9B,UACC,cAAC,KAAD,CACClR,MAAOoR,EACPrP,SAAUsP,EACVxQ,KAAMA,IAGP,qBAAKpF,UAAU,mBAAf,cACyBmC,IAAvBqT,EACE,KACAA,EAAmB5F,KAAI,SAACrL,GACxB,OACC,wBAECvE,UAAU,iBACVkO,MAAO,CAAE8H,WAAYzR,GACrBY,QAAS,kBAAMyQ,EAAcrR,KAHxBA,cC1ED,SAAS0R,GAAT,GAA2D,IAAnC5P,EAAkC,EAAlCA,SAAU6P,EAAwB,EAAxBA,eAAgB9Q,EAAQ,EAARA,KAChE,OACC,qBAAKpF,UAAU,SAAf,SACC,wBACCoF,KAAMA,EACNpF,UAAS,wBAAmBqG,EAAW,GAAK,YAC5ClB,QAAS+Q,EAHV,SAKE7P,EAAW,KAAO,UCFR,SAAS8P,KAAiB,IAChCvN,EAAc1I,EAAd0I,UACFwN,EAAcvD,kBAAO,GAFY,EAMnCjO,qBAAW3B,GAFCO,EAJuB,EAItCqB,YAAerB,aACfsB,EALsC,EAKtCA,oBAEKJ,EAAOD,OAAOC,KAAKlB,GAPc,EAQG+B,oBAAS,GARZ,mBAQhC8Q,EARgC,KAQjBC,EARiB,KAWvCvQ,qBAAU,WACTuQ,EzBkEK,SAA2BlS,GACjC,IAAQV,EAAwBxD,EAAxBwD,oBACJ6S,EAAsB,GAC1B,IAAK,IAAMhU,KAAU6B,EACpBmS,EAAoBhU,GAAU6B,EAAS7B,GAAQgC,MAGhD,OAAQiS,kBAAQ9S,EAAqB6S,GyBzEnBE,CAAkBjT,MACjC,CAACA,IAGJuC,qBAAU,WACT,IAAIjE,kBAAQ0B,GAIZ,IAA4B,IAAxB4S,EAAYjM,QAAhB,CAMA,IAAIzH,EAAG,UAAMkG,EAAN,cAEQ,uCAAG,gCAAAO,EAAA,sDAEjB,IAAS5G,KADLmU,EAAS,GACMlT,EAClBkT,EAAOnU,GAAUiB,EAAajB,GAAQgC,MAHtB,yBAOO6E,MAAM1G,EAAK,CACjCiU,OAAQ,OACR9N,QAAS,CAAE,eAAgB,oBAC3B+N,KAAMC,KAAKC,UAAUJ,KAVN,cAOVK,EAPU,gBAaVA,EAASzN,OAbC,yDAiBhBE,QAAQC,IAAI,KAAMC,SAjBF,0DAAH,qDAqBfC,QA5BCyM,EAAYjM,SAAU,IA6BrB,CAACiM,EAAaxN,EAAWpF,IAE5B,IAAMwT,EAAe,SAAChS,GACrBF,EAAoB,CACnBhB,KAAM,qBACNQ,WAAYU,EAAEC,OAAOG,QAUvB,OACC,sBAAKpF,UAAU,gBAAf,UACC,oBAAIA,UAAU,UAAd,SACE0E,EAAKkL,KAAI,SAACrN,EAAQP,GAAW,IAAD,EACJwB,EAAajB,GAA7BgC,EADoB,EACpBA,MAAOa,EADa,EACbA,KACf,OACC,qBACCpF,UAAS,6BAAwBuC,GADlC,UAIC,cAACgT,GAAD,CAAoBhR,MAAOA,EAAOa,KAAM7C,IACxC,sBAAMvC,UAAU,OAAhB,SAAwBoF,IACxB,cAAC6Q,GAAD,CACC5P,WACC7C,EAAajB,GAAQ8B,QAEtB6R,eAAgBc,EAChB5R,KAAM7C,MATFP,QAeRqU,EACA,wBAAQrW,UAAU,QAAQmF,QA9BH,WACzBL,EAAoB,CACnBhB,KAAM,8BA4BL,0BAGG,QCnGQ,SAASmT,GAAT,GAAmC,IAAXC,EAAU,EAAVA,OACtC,OACC,wBAAQlX,UAAU,oBAAoBmF,QAAS+R,EAA/C,4BCKa,SAASC,KACvB,IAAQC,EAAclX,EAAdkX,UAER,EAGIxS,qBAAW3B,GAFCQ,EADhB,EACCoB,YAAepB,YACfqB,EAFD,EAECA,oBAGD,OACC,wBACC9E,UAAS,8BAAyByD,EAAc,OAAS,UAD1D,UAGC,cAACwT,GAAD,CACCC,OAAQ,kBACPpS,EAAoB,CACnBhB,KAAM,sBAIT,sBAAK9D,UAAU,6BAAf,UACEM,EACA,qBACA,oBACA,cAAC+U,GAAD,KAGA/U,EACA,cACA,gBACA,cAAC6V,GAAD,KAGA7V,EACA,GACA,UACA,qCACC,mBACCN,UAAU,UACV4K,KAAK,iCACL3F,OAAO,SACPqH,IAAI,aAJL,SAMC,qBACCsI,IAAG,UAAKwC,EAAL,gBACHvC,IAAI,8BAGN,qBAAI7U,UAAU,OAAd,UACC,6BACC,mBACC4K,KAAK,oDACL0B,IAAI,aACJrH,OAAO,SAHR,uBAQD,6BACC,mBACC2F,KAAK,sDACL0B,IAAI,aACJrH,OAAO,SAHR,yC,OCzCO,SAASoS,KACvB,MAA+B9E,qBAAWxK,GAAcd,IAAxD,mBAAO9F,EAAP,KAAc6H,EAAd,KACA,EAA2CuJ,qBAC1CrH,GACAJ,IAFD,mBAAOW,EAAP,KAAoB6L,EAApB,KAIA,EAA2C/E,qBAC1C5O,EACAR,GAFD,mBAAO0B,EAAP,KAAoBC,EAApB,KAIA,EvBhB6B,SAACyS,EAAczI,GAAS,IAAD,EAC1BvJ,oBAAS,WAClC,IAAMiS,EAAcrX,OAAOsX,aAAaC,QAAQ5I,GAChD,OAAuB,OAAhB0I,EAAuBX,KAAKc,MAAMH,GAAeD,KAHL,mBAC7CrS,EAD6C,KACtC0S,EADsC,KAUpD,OAJA7R,qBAAU,WACT5F,OAAOsX,aAAaI,QAAQ/I,EAAK+H,KAAKC,UAAU5R,MAC9C,CAAC4J,EAAK5J,IAEF,CAACA,EAAO0S,GuBMSE,CACvB,CACC1U,SAAU,YAEX,eAJD,mBAAO2U,EAAP,KAAaC,EAAb,KAOM3H,EAAWwC,mBACXoF,EAAUpF,mBAGFvK,EAGVnH,EAHHC,YACW4G,EAER7G,EAFHE,UACA6F,EACG/F,EADH+F,YAEO0B,EAA2B1I,EAA3B0I,UAAWsP,EAAgBhY,EAAhBgY,KAAMpP,EAAU5I,EAAV4I,MAEzB/C,qBAAU,WAETjB,EAAoB,CACnBhB,KAAM,SACNV,SAAU2U,EAAK3U,aAGd,IAEH2C,qBAAU,WAETiS,EAAQ,CACP5U,SAAUyB,EAAYzB,aAErB,CAAC4U,EAASnT,EAAYzB,WAGzB2C,qBAAU,WACT,MAEI5E,EADHkG,WAAcC,EADf,EACeA,UAAWpG,EAD1B,EAC0BA,GAAIsG,EAD9B,EAC8BA,OAAQpG,EADtC,EACsCA,YAAaqG,EADnD,EACmDA,SAAUF,EAD7D,EAC6DA,MAG7D,IAAkB,IAAdD,QAA6BnF,IAAPjB,EAAkB,CAC3C8H,EAAc,CACblF,KAAM,aAKP,IAAIpB,EAAG,UAAMkG,EAAN,WAENlG,IADa,IAAV6E,EACA,gBAAarG,EAAb,YAAmBgX,GAEX,IAAPhX,EACA,cAAWgX,GAEX,iBAAchX,EAAd,YAAoBgX,GAIzB,IAAIrP,EAAU,CACb,eAAgB,oBAIhBA,EAAQ,cAAgBC,EAGzB,IAAIqP,EAAW,CACd3Q,OAAS1F,kBAAQ0F,GAAmB,GAATA,EAC3BpG,eAGgB,OAAbqG,IACH0Q,EAAS1Q,SAAWA,GAGN,uCAAG,4BAAA0B,EAAA,+EAIOC,MAAM1G,EAAK,CACjCiU,OAAQ,OACR9N,UACA+N,KAAMC,KAAKC,UAAUqB,KAPN,cAIVpB,EAJU,gBAUVA,EAASzN,OAVC,OAYhBgO,EAAoB,CACnBxT,KAAM,QAGPkF,EAAc,CACblF,KAAM,aAGPkF,EAAc,CACblF,KAAM,YArBS,kDA0BhB0F,QAAQC,IAAI,KAAMC,SA1BF,0DAAH,oDA+BfC,MAEC,CACFf,EACAsP,EACApP,EACA3H,EACAsK,EACA6L,EACAtO,IAGD,IAAMoP,EAAoB,SAACpX,GAAD,MACT,gBAAhBA,GA+JD,OACC,qCACC,qBAAKhB,UAAU,yBAAf,SACC,sBAAKA,UAAU,UAAf,UACC,cAACwR,GAAD,8BACA,mBAAGxR,UAAU,UAAb,4CAGF,qBAAKA,UAtBP,WACC,IAEI2L,EAAU,CAAC,cAQf,OANoB,IAJI9G,EAAhBpB,YAKPkI,EAAQI,KAAK,eAEbJ,EAAQI,KAAK,iBAGPJ,EAAQ3I,KAAK,KAWHqV,GAAhB,SACC,cAAC,EAAYC,SAAb,CACCpT,MAAO,CAAEL,cAAaC,uBADvB,SAGC,eAAC,GAAawT,SAAd,CAAuBpT,MAAO,CAAE/D,QAAO6H,iBAAvC,UACC,cAACwB,GAAD,CAAQlF,iBA1KY,WACxB,IAAMI,EAAQ,IAAIM,KAGjBtF,EACCgF,EACAb,EAAYxB,UAAUC,MACtBuB,EAAYxB,UAAUE,KAGvB0U,EAAQ9N,QAAQoO,OAAO,CACtBC,IAAKnI,EAASlG,QAAQsO,UACtBC,SAAU,WAGX5T,EAAoB,CACnBhB,KAAM,kBACNtD,KAAMkF,OA2JJ,cAAC,GAAY4S,SAAb,CACCpT,MAAO,CAAEuG,cAAa6L,uBADvB,SAGC,eAAC,KAAD,CACCqB,UA1GW,SAAC7L,GAClB,IAAQ/L,EAAwB+L,EAAxB/L,OAAQQ,EAAgBuL,EAAhBvL,YAChB,EAEIkK,EADHvD,KAAQhH,EADT,EACSA,GAAe0X,EADxB,EACaxR,UAA0B9E,EADvC,EACuCA,YAIvC,GAAKf,EAAL,CAIA,IAAI0J,EAAkBmN,EAAkB7W,EAAYP,aAE9CoG,E5BhBuB,SAACA,EAAWpG,EAAaiK,GACvD,IAAIzK,EAAMqY,EAEV,IAAwB,IAApB5N,EACH4N,EAAYpY,kBAAO2G,EAAW/G,OACxB,CACNG,EAAOsY,kBAAS9X,GAEhB,IAAM6M,EAAO,CACZkL,EAAGC,kBAAS5R,GACZ6R,EAAGC,kBAAW9R,IAEf5G,EAAO2Y,kBAAS3Y,EAAMqN,EAAKkL,GAC3BvY,EAAO4Y,kBAAW5Y,EAAMqN,EAAKoL,GAE7BJ,EAAYpY,kBAAOD,EAAMH,GAG1B,MAAO,CAAEG,OAAMqY,a4BFIQ,CACjBT,EACArX,EAAYP,YACZiK,GAGD,GAAIA,GAAmBlK,EAAOC,cAAgBO,EAAYP,YAAa,CAEtE,IAAMsY,E5BjFyB,SAACC,EAAMC,EAAYC,GACpD,IAAM7M,EAASjL,MAAMC,KAAK2X,GAC1B,EAAkB3M,EAAO7K,OAAOyX,EAAY,GAArCvX,EAAP,oBAGA,OAFA2K,EAAO7K,OAAO0X,EAAU,EAAGxX,GAEpB2K,E4B4ES8M,CACbzY,EAAYF,EAAOC,YAAaG,GAChCJ,EAAOiB,MACPT,EAAYS,OAGbgH,EAAc,CACblF,KAAM,kBACN3C,MAAOmY,SAEF,GAAIvY,EAAOC,cAAgBO,EAAYP,YAAa,CAE1D,IAAM4L,EAAStL,EACdL,EAAYF,EAAOC,YAAaG,GAChCF,EAAYM,EAAYP,YAAaG,GACrCJ,EACAQ,GAGDyH,EAAc,CACblF,KAAM,OACN/C,OAAQ6L,EAAO7L,EAAOC,aACtBO,YAAaqL,EAAOrL,EAAYP,aAChCuH,SAAUqE,EAAOrE,SACjBC,cAAeoE,EAAOpE,gBAKxBQ,EAAc,CACblF,KAAM,SACN5C,KACAE,YAAa6J,EACbzD,OAAQ,CACPJ,UAAWA,EAAUyR,UACrBvW,YAAaD,EAAiBC,EAAa2I,IAE5CxD,SAAUwD,EAAkB1J,EAAYS,MAAQ,OAI7CkF,EAAYhG,KAAOA,GACtB8H,EAAc,CACblF,KAAM,2BACN6E,MAAO,YACPzD,MAAOkC,EAAU5G,OAInB8W,EAAoB,CAAExT,KAAM,UAqCtB6V,YA3Ja,SAAC7M,GACpB,IAAI8M,EAAsB9Y,EAAsBgM,GAS1C5E,IANsB,IAAxB0R,EACQtR,EAEAN,EAAe8E,EAAK/L,OAAOC,cAGjB6Y,MAAK,SAACC,GAC3B,OAAOC,OAAOjN,EAAK4B,eAAiBqL,OAAOD,EAAE5Y,OAE1C8J,IAAelK,EAAsBgM,IACtCA,EAAK/L,OAAO2N,YAGf4I,EAAoB,CACnBxT,KAAM,QACNoE,KAAMA,EACN0R,sBACA5O,kBAuIKgP,aAnIc,SAAClN,GACrB,GAAyB,OAArBA,EAAKvL,YAAT,CAIA,IAAI0J,EAAkBmN,EAAkBtL,EAAK/L,OAAOC,cAG5B,IAApBiK,EACHqM,EAAoB,CACnBxT,KAAM,4BACNqH,YAAa2B,EAAKvL,YAAYS,SAGX,IAApBiJ,IACgC,IAAhCQ,EAAYR,iBAEZqM,EAAoB,CACnBxT,KAAM,6BA8GH,UAKC,cAACqT,GAAD,IACA,cAAC,GAAD,CAAMrR,IAAKmS,EAAS5H,SAAUA,mBCjVtC,ICSkB4J,GDGHC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCMLQ,IADOxa,OAAOC,gBAAkB,IAChCua,aACRV,GAAmBrT,SAASgU,cAAcD,MAO1CE,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC1D,GAAD,MAED4C,IAOFC,M","file":"static/js/main.2b964849.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Widget({ title, className, children }) {\n\treturn (\n\t\t<div className={`widget ${className}`}>\n\t\t\t{title ? <h3 className=\"widgetTitle\">{title}</h3> : null}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import Widget from \"../components/common/Widget\";\nimport { omit, isEmpty, isEqual } from \"lodash\";\nimport {\n\tformat,\n\tparseISO,\n\tgetHours,\n\tgetMinutes,\n\tsetHours,\n\tsetMinutes,\n} from \"date-fns\";\n\nexport const DEBUG_MODE =\n\tprocess.env.REACT_APP_DEBUG_MODE === \"true\" ? true : false;\n\nexport const wp =\n\tDEBUG_MODE === true\n\t\t? {\n\t\t\t\tnonce: 0,\n\t\t\t\trouteBase: \"http://localhost/wp-json/calendario/v1\",\n\t\t\t\tuser: 1,\n\t\t\t\tadminUrl: \"\",\n\t\t\t\tpluginUrl: \"//localhost/wp-content/plugins/rhdwp-calendario/\",\n\t\t\t\tpostsUrl: \"\",\n\t\t\t\ttrashUrl: \"\",\n\t\t\t\tblogUrl: \"//localhost\",\n\t\t\t\tdefaultStatusColors: {\n\t\t\t\t\tpublish: \"dodgerblue\",\n\t\t\t\t\tfuture: \"olivedrab\",\n\t\t\t\t\tdraft: \"darkgray\",\n\t\t\t\t\tpending: \"orange\",\n\t\t\t\t\tprivate: \"brown\",\n\t\t\t\t},\n\t\t\t\tpresetStatusColors: [\n\t\t\t\t\t\"darkgray\",\n\t\t\t\t\t\"violet\",\n\t\t\t\t\t\"darkorchid\",\n\t\t\t\t\t\"dodgerblue\",\n\t\t\t\t\t\"skyblue\",\n\t\t\t\t\t\"olivedrab\",\n\t\t\t\t\t\"mediumseagreen\",\n\t\t\t\t\t\"lightsalmon\",\n\t\t\t\t\t\"orange\",\n\t\t\t\t\t\"brown\",\n\t\t\t\t],\n\t\t  }\n\t\t: {\n\t\t\t\t...window.rhdReactPlugin,\n\t\t  };\n\nexport const dateFormat = {\n\tday: \"d\",\n\tdate: \"yyyy-MM-dd\",\n\tdateTime: \"yyyy-MM-dd h:mm aa\",\n\tyear: \"yyyy\",\n\tdayName: \"EEEE\",\n\tmonthName: \"MMMM\",\n\tmonthShort: \"MMM\",\n\tfullDate: \"EEEE,  MMMM dd, yyyy\",\n\tdaylessDate: \"MMMM dd, yyyy\",\n};\n\n/**\n * Produces a filtered list of post status objects.\n *\n * @param {Array} exclude keys to exclude.\n * @return {Object} The filtered postStatuses object.\n */\nexport function filterStatusList(statuses, exclude = []) {\n\tlet filtered = statuses;\n\tif (exclude.length > 0) {\n\t\tfor (let key in filtered) {\n\t\t\tif (exclude.includes(key)) {\n\t\t\t\tfiltered = omit(filtered, key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filtered;\n}\n\n/**\n * Checks whether or not the user has customized the color palette.\n *\n * @param {Object} statuses\n * @returns {boolean}\n */\nexport function haveColorsChanged(statuses) {\n\tconst { defaultStatusColors } = wp;\n\tlet currentStatusColors = {};\n\tfor (const status in statuses) {\n\t\tcurrentStatusColors[status] = statuses[status].color;\n\t}\n\n\treturn !isEqual(defaultStatusColors, currentStatusColors);\n}\n\n/**\n * Renders a styled Widget.\n *\n * @param {string} title\n * @param {string} className\n * @param {*} children The widget content\n * @returns\n */\nexport const renderWidget = (title, className, children) => {\n\treturn (\n\t\t<Widget title={title} className={`widget__${className}`}>\n\t\t\t{children}\n\t\t</Widget>\n\t);\n};\n\n/**\n * Retrieves a calendar day's key (format: yyyy-MM-dd)\n *\n * @param {Date}\n * @returns {string}\n */\nexport const dayKey = (date) => format(date, dateFormat.date);\n\n/**\n * Checks if a date is between 2 dates.\n *\n * @param {Date} date The target date\n * @param {Date} min Start of the range\n * @param {Date} max End of the range\n * @returns\n */\nexport const dateIsBetween = (date, min, max) =>\n\tdate.getTime() >= min.getTime() && date.getTime() <= max.getTime();\n\n/**\n * Determines if an item is being dragged is coming from the Unscheduled drafts area.\n *\n * @param {Post} item Dragged post\n * @param {string} item.source.droppableId The drop area ID\n * @returns {boolean} True if unscheduled, false otherwise\n */\nexport const isDraggingUnscheduled = ({ source: { droppableId } }) =>\n\tdroppableId === \"unscheduled\" ? true : false;\n\n/**\n * Retrieves a list of posts.\n *\n * @param {string} id\n * @param {Array|Object} posts All posts\n * @returns {Array} The posts list\n */\nexport const getPostList = (id, posts) => {\n\tlet list;\n\tif (id === \"unscheduled\") {\n\t\tlist = posts.unscheduled;\n\t} else {\n\t\tlist = posts.scheduled[id];\n\t}\n\n\treturn list;\n};\n\n/**\n *\n * @param {Object|Array} list The post list\n * @param {number} startIndex\n * @param {number} endIndex\n * @returns\n */\nexport const reorderUnscheduled = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n *\n * @param {Array} source\n * @param {Array} destination\n * @param {Object} droppableSource\n * @param {string} droppableSource.droppableId List ID\n * @param {number} [droppableSource.index = null] The starting index of the item to move\n * @param {Object} droppableDestination\n * @param {string} droppableDestination.droppableId List ID\n * @param {number} [droppableDestination.index = null] The ending index of the item to move\n * @returns\n */\nexport const moveItem = (\n\tsource,\n\tdestination,\n\tdroppableSource,\n\tdroppableDestination\n) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = !isEmpty(destination) ? Array.from(destination) : [];\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tlet destinationIndex =\n\t\tdroppableDestination.index !== undefined\n\t\t\t? droppableDestination.index\n\t\t\t: !isEmpty(destination)\n\t\t\t? destination.length\n\t\t\t: 0;\n\n\tdestClone.splice(destinationIndex, 0, removed);\n\n\tconst result = {\n\t\t[droppableSource.droppableId]: sourceClone,\n\t\t[droppableDestination.droppableId]: destClone,\n\t\tsourceId: droppableSource.droppableId,\n\t\tdestinationId: droppableDestination.droppableId,\n\t};\n\n\treturn result;\n};\n\n/**\n * Filters and formats the post_date param during drag and drop operations.\n *\n * @param {Date} post_date\n * @param {string} droppableId\n * @param {boolean} overUnscheduled\n * @returns {DraggedPostDate}\n */\nexport const draggedPostDate = (post_date, droppableId, overUnscheduled) => {\n\tlet date, formatted;\n\n\tif (overUnscheduled === true) {\n\t\tformatted = format(post_date, dateFormat.dateTime);\n\t} else {\n\t\tdate = parseISO(droppableId);\n\n\t\tconst time = {\n\t\t\th: getHours(post_date),\n\t\t\tm: getMinutes(post_date),\n\t\t};\n\t\tdate = setHours(date, time.h);\n\t\tdate = setMinutes(date, time.m);\n\n\t\tformatted = format(date, dateFormat.dateTime);\n\t}\n\n\treturn { date, formatted };\n};\n\n/**\n * Converts non-allowed unscheduled post statuses to \"draft\"\n *\n * @param {string} post_status\n * @param {boolean} unscheduled\n * @returns {string} The filtered post status\n */\nexport function filterPostStatus(post_status, unscheduled) {\n\tlet allowedUnscheduledStatuses = [\"draft\", \"private\", \"pending\"];\n\tlet status = post_status;\n\n\tif (unscheduled === true) {\n\t\tstatus = allowedUnscheduledStatuses.includes(status) ? status : \"draft\";\n\t}\n\n\treturn status;\n}\n\n/**\n * Strips a slug from a permalink\n *\n * @param {string} url The permalink\n * @param {string} slug The post slug\n * @returns {string} The filtered URL\n */\nexport const stripPermalinkSlug = (url) => {\n\t// Remove trailing slash, if necessary\n\tif (url.substr(-1) === \"/\") {\n\t\turl = url.slice(0, -1);\n\t}\n\n\tlet parts = url.split(\"/\");\n\tparts.pop();\n\n\treturn `${parts.join(\"/\")}/`;\n};\n","import { createContext } from \"react\";\nimport { wp } from \"./lib/utils\";\nimport { addMonths, subMonths, startOfWeek, endOfWeek } from \"date-fns\";\n\nconst ViewContext = createContext({});\nexport default ViewContext;\n\nexport const initialViewOptions = {\n\tviewMode: \"\",\n\tviewRange: {\n\t\tstart: null,\n\t\tend: null,\n\t},\n\tpostStatuses: {},\n\tsidebarOpen: true,\n};\n\nconst { defaultStatusColors } = wp;\n\nexport function viewReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.viewMode ? action.viewMode : state.viewMode,\n\t\t\t\tviewRange: action.viewRange\n\t\t\t\t\t? action.viewRange\n\t\t\t\t\t: state.viewRange,\n\t\t\t};\n\n\t\tcase \"SET_RANGE\":\n\t\t\tlet range =\n\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstart: startOfWeek(action.start),\n\t\t\t\t\t\t\tend: endOfWeek(action.end),\n\t\t\t\t\t  }\n\t\t\t\t\t: { start: action.start, end: action.end };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: range.start,\n\t\t\t\t\tend: range.end,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tstart:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? startOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_RANGE_END\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\t...state.viewRange,\n\t\t\t\t\tend:\n\t\t\t\t\t\tstate.viewMode !== \"list\"\n\t\t\t\t\t\t\t? endOfWeek(action.date)\n\t\t\t\t\t\t\t: action.date,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"NEXT_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: addMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: addMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"PREV_MONTH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewRange: {\n\t\t\t\t\tstart: subMonths(state.viewRange.start, 1),\n\t\t\t\t\tend: subMonths(state.viewRange.end, 1),\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUSES\":\n\t\t\tlet statuses = action.postStatuses;\n\n\t\t\t// Don't overwrite visibility, if set\n\t\t\tfor (let status in statuses) {\n\t\t\t\tstatuses[status].visible =\n\t\t\t\t\t\"visible\" in statuses[status]\n\t\t\t\t\t\t? statuses[status].visible\n\t\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: statuses,\n\t\t\t};\n\n\t\tcase \"TOGGLE_POST_STATUS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tvisible: !state.postStatuses[action.postStatus].visible,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_POST_STATUS_COLOR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: {\n\t\t\t\t\t...state.postStatuses,\n\t\t\t\t\t[action.postStatus]: {\n\t\t\t\t\t\t...state.postStatuses[action.postStatus],\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"RESET_POST_STATUS_COLORS\":\n\t\t\tlet reset = state.postStatuses;\n\t\t\tlet statusKeys = Object.keys(state.postStatuses);\n\n\t\t\tfor (let status of statusKeys) {\n\t\t\t\treset[status].color = defaultStatusColors[status];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostStatuses: { ...reset },\n\t\t\t};\n\n\t\tcase \"TOGGLE_SIDEBAR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsidebarOpen: !state.sidebarOpen,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function ViewOptions() {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\tconst handleViewModeChange = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"viewOptions\">\n\t\t\t<div className=\"viewMode\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon viewMode__input ${\n\t\t\t\t\t\tviewMode === \"calendar\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"calendar\"\n\t\t\t\t\ttitle=\"Calendar\"\n\t\t\t\t>\n\t\t\t\t\tcalendar_view_month\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tname=\"viewMode\"\n\t\t\t\t\tonClick={handleViewModeChange}\n\t\t\t\t\tclassName={`icon viewMode__input ${\n\t\t\t\t\t\tviewMode === \"list\" ? \"active \" : \"inactive\"\n\t\t\t\t\t}`}\n\t\t\t\t\tvalue=\"list\"\n\t\t\t\t\ttitle=\"List\"\n\t\t\t\t>\n\t\t\t\t\tview_list\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { forwardRef, useContext, useEffect, useState } from \"react\";\nimport ViewOptions from \"./ViewOptions\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays, startOfToday, startOfMonth, endOfMonth } from \"date-fns\";\n\nimport ViewContext from \"../ViewContext\";\nimport { dateFormat, dateIsBetween } from \"../lib/utils\";\n\nexport default function MainHeader({ handleTodayClick }) {\n\tconst {\n\t\tviewOptions: { viewRange },\n\t\tviewMode,\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [todayInRange, setTodayInRange] = useState(true);\n\n\tconst today = startOfToday();\n\n\tconst DateInput = forwardRef(({ value, onClick }, ref) => (\n\t\t<button className=\"viewRange__input\" onClick={onClick} ref={ref}>\n\t\t\t{value}\n\t\t</button>\n\t));\n\n\tuseEffect(() => {\n\t\tconst { start, end } = viewRange;\n\t\tif (start !== null && end !== null) {\n\t\t\tsetTodayInRange(dateIsBetween(new Date(), start, end));\n\t\t}\n\t}, [viewRange]);\n\n\tuseEffect(() => {\n\t\t// set a sensible default range\n\t\tif (!viewRange.start && !viewRange.end) {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE\",\n\t\t\t\tstart: viewMode === \"calendar\" ? startOfMonth(today) : today,\n\t\t\t\tend:\n\t\t\t\t\tviewMode === \"calendar\" ? endOfMonth() : addDays(today, 30),\n\t\t\t});\n\t\t}\n\t}, [today, viewRange.start, viewRange.end, viewMode, viewOptionsDispatch]);\n\n\tconst nextMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"NEXT_MONTH\" });\n\t};\n\n\tconst prevMonth = (e) => {\n\t\te.preventDefault();\n\t\tviewOptionsDispatch({ type: \"PREV_MONTH\" });\n\t};\n\n\treturn (\n\t\t<div className=\"calendarListHeader row flex-middle\">\n\t\t\t<div className=\"col col__start\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={prevMonth}\n\t\t\t\t\ttitle=\"Previous Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_left\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"col col__center mainViewOptions\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`toToday ${todayInRange ? \"hidden\" : \"visible\"}`}\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon today todayButton\"\n\t\t\t\t\t\tonClick={handleTodayClick}\n\t\t\t\t\t\ttitle=\"Jump to Today\"\n\t\t\t\t\t>\n\t\t\t\t\t\ttoday\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viewRange\">\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.start}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_START`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" to \"}\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat={dateFormat.daylessDate}\n\t\t\t\t\t\tselected={viewRange.end}\n\t\t\t\t\t\tonChange={(date) =>\n\t\t\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\t\t\ttype: `SET_RANGE_END`,\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomInput={<DateInput />}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={viewRange.start}\n\t\t\t\t\t\tendDate={viewRange.end}\n\t\t\t\t\t\tminDate={viewRange.start}\n\t\t\t\t\t\tmonthsShown={2}\n\t\t\t\t\t\tcloseOnScroll={(e) => e.target === document}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ViewOptions />\n\t\t\t</div>\n\t\t\t<div className=\"col col__end\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"icon dateChevron\"\n\t\t\t\t\tonClick={nextMonth}\n\t\t\t\t\ttitle=\"Next Month\"\n\t\t\t\t>\n\t\t\t\t\tchevron_right\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { createContext } from \"react\";\nimport { dateFormat } from \"./lib/utils\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nconst PostsContext = createContext({});\nexport default PostsContext;\n\nexport const initialPosts = {\n\tcurrentPost: {\n\t\tid: null,\n\t\tpost_title: \"\",\n\t\tpost_status: \"\",\n\t\tpost_date: \"\",\n\t\tunscheduled: null,\n\t},\n\tupdatePost: {\n\t\tupdateNow: false,\n\t\ttrash: false,\n\t\tid: null,\n\t\tparams: {},\n\t\tnewIndex: null,\n\t\tunscheduled: false,\n\t},\n\trefetch: false,\n\tdateRange: {\n\t\tstart: \"\",\n\t\tend: \"\",\n\t},\n\tunscheduled: [],\n\tscheduled: [],\n\ttrashed: [],\n\ttaxonomies: {},\n\tlocale: \"\",\n};\n\nexport function postsReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_SCHEDULED\":\n\t\t\tlet scheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tscheduledPosts.forEach((post, index) => {\n\t\t\t\tscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t\tscheduledPosts[index].post_date_day = format(\n\t\t\t\t\tscheduledPosts[index].post_date,\n\t\t\t\t\tdateFormat.date\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet scheduledByDate = groupBy(scheduledPosts, \"post_date_day\");\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdateRange: {\n\t\t\t\t\tstart: action.start ? action.start : state.dateRange.start,\n\t\t\t\t\tend: action.end ? action.end : state.dateRange.end,\n\t\t\t\t},\n\t\t\t\tscheduled: scheduledByDate,\n\t\t\t};\n\n\t\tcase \"SET_UNSCHEDULED\":\n\t\t\tlet unscheduledPosts = action.posts;\n\n\t\t\t// cast the date as a Date object\n\t\t\tunscheduledPosts.forEach((post, index) => {\n\t\t\t\tunscheduledPosts[index].post_date = new Date(post.post_date);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled: unscheduledPosts,\n\t\t\t};\n\n\t\tcase \"MOVE\":\n\t\t\tlet scheduled = state.scheduled;\n\t\t\tlet unscheduled = state.unscheduled;\n\n\t\t\tif (action.sourceId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.source;\n\t\t\t} else {\n\t\t\t\tscheduled[action.sourceId] = action.source;\n\t\t\t}\n\n\t\t\tif (action.destinationId === \"unscheduled\") {\n\t\t\t\tunscheduled = action.destination;\n\t\t\t} else {\n\t\t\t\tscheduled[action.destinationId] = action.destination;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunscheduled,\n\t\t\t\tscheduled,\n\t\t\t};\n\n\t\tcase \"SET_TAXONOMY_TERMS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttaxonomies: {\n\t\t\t\t\t...state.taxonomies,\n\t\t\t\t\t[action.name]: {\n\t\t\t\t\t\ttaxonomy: action.taxonomy,\n\t\t\t\t\t\tterms: action.terms,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"SET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...action.post,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"REFETCH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trefetch: !state.refetch,\n\t\t\t};\n\n\t\tcase \"NEW_POST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tpost_date: action.post_date,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t\ttaxonomies: {},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATE_CURRENTPOST_FIELD\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: {\n\t\t\t\t\t...state.currentPost,\n\t\t\t\t\t[action.field]: action.value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UNSET_CURRENTPOST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPost: initialPosts.currentPost,\n\t\t\t};\n\n\t\tcase \"UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tparams: action.params,\n\t\t\t\t\tnewIndex: action.newIndex,\n\t\t\t\t\tunscheduled: action.unscheduled,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"UPDATING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\t...state.updatePost,\n\t\t\t\t\tupdateNow: false,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TRASH\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: {\n\t\t\t\t\tupdateNow: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tparams: action.params,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"COMPLETE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdatePost: initialPosts.updatePost,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { useState, useEffect, useContext /* useRef */ } from \"react\";\nimport { wp, dateFormat } from \"../lib/utils\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { DEBUG_MODE } from \"../lib/utils\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst { routeBase, nonce } = wp;\n\nconst headers = DEBUG_MODE !== true ? { \"X-WP-Nonce\": nonce } : {};\n\n/**\n * Uses localStorage to save view-specific user options.\n *\n * @param {*} defaultValue The default option value\n * @param {string} key The option key\n * @returns {[state, setter]} The useState state and setter\n */\nexport const useStickyState = (defaultValue, key) => {\n\tconst [value, setValue] = useState(() => {\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Date} start The range's start\n * @param {Date} end The range's end\n * @returns {boolean} The current loading state\n */\nexport const useFetchScheduledPosts = (start, end) => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (start !== null && end !== null) {\n\t\t\tlet startDate = format(start, dateFormat.date);\n\t\t\tlet endDate = format(end, dateFormat.date);\n\t\t\tlet url = `${routeBase}/posts/scheduled/${startDate}/${endDate}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_SCHEDULED\",\n\t\t\t\t\t\tposts: data.posts,\n\t\t\t\t\t\tstart: data.dateRange.start,\n\t\t\t\t\t\tend: data.dateRange.end,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [start, end, refetch, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'unscheduled' posts from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchUnscheduledPosts = () => {\n\tconst {\n\t\tposts: { refetch },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/posts/unscheduled`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tpostsDispatch({\n\t\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\t\tposts: data.posts,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [postsDispatch, refetch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves the set of post statuses from the server\n *\n * @returns {boolean} The current loading state\n */\nexport const useFetchPostStatuses = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { viewOptionsDispatch } = useContext(ViewContext);\n\n\tuseEffect(() => {\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tsetIsLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\theaders,\n\t\t\t\t});\n\t\t\t\tconst data = await res.json();\n\n\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\ttype: \"SET_POST_STATUSES\",\n\t\t\t\t\tpostStatuses: data,\n\t\t\t\t});\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tsetIsLoading(false);\n\t\t};\n\t}, [viewOptionsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves all terms of a taxonomy\n *\n * @param {string} name The taxonomy name (slug) to fetch\n * @returns {boolean} The current loading state\n */\nexport const useFetchTaxonomyTerms = (name) => {\n\tconst {\n\t\tposts: { taxonomies },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Only fetch categories if not already set\n\t\tif (isEmpty(taxonomies[name])) {\n\t\t\tlet url = `${routeBase}/tax/${name}`;\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(url, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await res.json();\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"SET_TAXONOMY_TERMS\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttaxonomy: data.taxonomy,\n\t\t\t\t\t\tterms: data.terms,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"REST error\", error.message);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\n\t\t\treturn () => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\t\t}\n\t}, [name, taxonomies, postsDispatch]);\n\n\treturn isLoading;\n};\n\n/**\n * Retrieves 'scheduled' posts from the server\n * @param {Object} ref The element's ref\n * @param {Function} end The handler function\n * @returns {void}\n */\nexport const useClickOutside = (ref, handler) => {\n\tuseEffect(() => {\n\t\tlet startedInside = false;\n\t\tlet startedWhenMounted = false;\n\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if `mousedown` or `touchstart` started inside ref element\n\t\t\tif (startedInside || !startedWhenMounted) return;\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) return;\n\n\t\t\thandler(event);\n\t\t};\n\n\t\tconst validateEventStart = (event) => {\n\t\t\tstartedWhenMounted = ref.current;\n\t\t\tstartedInside = ref.current && ref.current.contains(event.target);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", validateEventStart);\n\t\tdocument.addEventListener(\"touchstart\", validateEventStart);\n\t\tdocument.addEventListener(\"click\", listener);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"touchstart\", validateEventStart);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t};\n\t}, [ref, handler]);\n};\n","import React from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport { useFetchPostStatuses } from \"../lib/hooks\";\nimport { wp } from \"../lib/utils\";\n\nexport default function Header({ handleTodayClick }) {\n\tuseFetchPostStatuses();\n\n\tconst { postsUrl } = wp;\n\n\treturn (\n\t\t<header className=\"calendario__header\">\n\t\t\t<div className=\"calendario__header__content\">\n\t\t\t\t<div className=\"calendarHeader\">\n\t\t\t\t\t<MainHeader handleTodayClick={handleTodayClick} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"icon closeCalendario\"\n\t\t\t\t\t\tonClick={() => (window.location.href = postsUrl)}\n\t\t\t\t\t\ttitle=\"Close\"\n\t\t\t\t\t>\n\t\t\t\t\t\tclose\n\t\t\t\t\t</button>\n\t\t\t\t\t<h1 className=\"calendario__title\">editorial calendar.io</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { createContext } from \"react\";\n\nconst DragContext = createContext(null);\nexport default DragContext;\n\nexport const initialDrag = {\n\tpost: {},\n\tisDragging: false,\n\tcurrentIndex: null,\n\tnewIndex: null,\n\toverUnscheduled: false,\n};\n\nexport function dragReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: action.post,\n\t\t\t\tisDragging: true,\n\t\t\t\tcurrentIndex:\n\t\t\t\t\taction.currentIndex >= 0 ? action.currentIndex : false,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_UNSCHEDULED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: action.draggedOver,\n\t\t\t\toverUnscheduled: true,\n\t\t\t};\n\n\t\tcase \"DRAGGING_OVER_CALENDAR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewIndex: initialDrag.newIndex,\n\t\t\t\toverUnscheduled: false,\n\t\t\t};\n\n\t\tcase \"END\": {\n\t\t\treturn initialDrag;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { forwardRef, useContext, useState } from \"react\";\nimport { dateFormat } from \"../lib/utils\";\nimport { format, isToday, isPast, isSameDay } from \"date-fns\";\n\nimport DragContext from \"../DragContext\";\n\nconst Day = forwardRef(({ day, monthName, children }, ref) => {\n\tconst [dragOver, setDragOver] = useState(false);\n\tconst {\n\t\tdraggedPost: {\n\t\t\tpost: { post_date },\n\t\t\tisUnscheduled,\n\t\t},\n\t} = useContext(DragContext);\n\tvar classes = [\"day\", \"col\", \"cell\"];\n\n\tconst handleDragOver = () => {\n\t\tif (!isUnscheduled && isSameDay(day, post_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDragOver(true);\n\t};\n\n\tconst renderDay = () => {\n\t\tif (isToday(day)) {\n\t\t\tclasses.push(\"today\");\n\t\t}\n\n\t\tif (isPast(day) && !isToday(day)) {\n\t\t\tclasses.push(\"past\");\n\t\t}\n\n\t\tif (dragOver) {\n\t\t\tclasses.push(\"dragOver\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classes.join(\" \")}\n\t\t\t\tref={isToday(day) ? ref : null}\n\t\t\t\tonDragOver={handleDragOver}\n\t\t\t\tonDragLeave={() => setDragOver(false)}\n\t\t\t\tonDrop={() => setDragOver(false)}\n\t\t\t>\n\t\t\t\t{monthName ? <span className=\"month\">{monthName}</span> : \"\"}\n\t\t\t\t<span className=\"number\">{format(day, dateFormat.day)}</span>\n\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderDay();\n});\n\nexport default Day;\n","import React from \"react\";\n\nexport default function PostLink({ title, icon, onClick, target, children }) {\n\treturn (\n\t\t<button\n\t\t\ttitle={title}\n\t\t\tclassName={`icon postLink icon__${icon}`}\n\t\t\tonClick={onClick}\n\t\t\ttarget={target ? target : \"\"}\n\t\t\trel=\"noreferrer\"\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostLink from \"./common/PostLink\";\nimport { getPostList, moveItem, dayKey, filterPostStatus } from \"../lib/utils\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function PostLinks({ post, unscheduled }) {\n\tconst { id, edit_link, view_link } = post;\n\tconst { posts, postsDispatch } = useContext(PostsContext);\n\n\tconst unschedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { post_date, post_status } = post;\n\t\tconst sourceId = dayKey(post_date);\n\t\tconst destinationId = \"unscheduled\";\n\n\t\tconst result = moveItem(\n\t\t\tgetPostList(sourceId, posts),\n\t\t\tgetPostList(destinationId, posts),\n\t\t\t{ droppableId: sourceId },\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid,\n\t\t\tparams: {\n\t\t\t\tpost_status: filterPostStatus(post_status, true),\n\t\t\t},\n\t\t\tunscheduled: true,\n\t\t});\n\t};\n\n\tconst schedulePost = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { id, post_date } = post;\n\t\tconst sourceId = \"unscheduled\";\n\t\tconst source = getPostList(sourceId, posts);\n\t\tconst destinationId = dayKey(post_date);\n\t\tconst destination = getPostList(destinationId, posts);\n\n\t\tconst result = moveItem(\n\t\t\tsource,\n\t\t\tdestination,\n\t\t\t{\n\t\t\t\tdroppableId: sourceId,\n\t\t\t\tindex: source.findIndex((item) => item.id === id),\n\t\t\t},\n\t\t\t{ droppableId: destinationId }\n\t\t);\n\n\t\tpostsDispatch({\n\t\t\ttype: \"MOVE\",\n\t\t\tsource: result[sourceId],\n\t\t\tdestination: result[destinationId],\n\t\t\tsourceId,\n\t\t\tdestinationId,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid,\n\t\t\tunscheduled: false,\n\t\t});\n\t};\n\n\tconst trashPost = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tid: id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"postLinks\">\n\t\t\t<PostLink\n\t\t\t\ticon=\"view\"\n\t\t\t\ttitle=\"View Post\"\n\t\t\t\tonClick={() => window.open(view_link, \"_blank\")}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\topen_in_new\n\t\t\t</PostLink>\n\t\t\t<PostLink\n\t\t\t\ticon=\"edit\"\n\t\t\t\ttitle=\"Edit Post in a new tab\"\n\t\t\t\tonClick={() => window.open(decode(edit_link), \"_blank\")}\n\t\t\t>\n\t\t\t\tmode_edit\n\t\t\t</PostLink>\n\t\t\t{unscheduled ? (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"schedule\"\n\t\t\t\t\ttitle=\"Schedule this post\"\n\t\t\t\t\tonClick={schedulePost}\n\t\t\t\t>\n\t\t\t\t\tevent_available\n\t\t\t\t</PostLink>\n\t\t\t) : (\n\t\t\t\t<PostLink\n\t\t\t\t\ticon=\"unschedule\"\n\t\t\t\t\ttitle=\"Unschedule this post\"\n\t\t\t\t\tonClick={unschedulePost}\n\t\t\t\t>\n\t\t\t\t\tevent_busy\n\t\t\t\t</PostLink>\n\t\t\t)}\n\t\t\t<PostLink icon=\"trash\" title=\"Trash this post\" onClick={trashPost}>\n\t\t\t\tdelete_forever\n\t\t\t</PostLink>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PostLinks from \"./PostLinks\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport DragContext from \"../DragContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Post({ post, index, unscheduled }) {\n\tconst {\n\t\tposts: { currentPost },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst [color, setColor] = useState(\"\");\n\tconst [animationRequestId, setAnimationRequestId] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (postStatuses === undefined || isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColor(postStatuses[post.post_status].color);\n\n\t\treturn () => {\n\t\t\tsetColor(\"\");\n\t\t};\n\t}, [post.post_status, postStatuses]);\n\n\tconst handleClick = (e) => {\n\t\t// Skip if clicking a QuickLink button\n\t\tif (e.target.classList.contains(\"icon\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostsDispatch({\n\t\t\ttype: \"SET_CURRENTPOST\",\n\t\t\tpost: post,\n\t\t\tunscheduled,\n\t\t});\n\t};\n\n\tconst handleMouseEnter = (e) => {\n\t\tanimateLinks(e.currentTarget, {\n\t\t\ttiming: function (timeFraction) {\n\t\t\t\treturn timeFraction;\n\t\t\t},\n\t\t\tdraw: function (element, progress) {\n\t\t\t\telement.style.paddingBottom = progress + 30 + \"px\";\n\t\t\t},\n\t\t\tduration: 50,\n\t\t});\n\t};\n\n\tfunction animateLinks(element, { timing, draw, duration }) {\n\t\tlet start = performance.now();\n\n\t\tsetAnimationRequestId(() =>\n\t\t\trequestAnimationFrame(function animate(time) {\n\t\t\t\tlet timeFraction = (time - start) / duration;\n\n\t\t\t\tlet progress = timing(timeFraction);\n\t\t\t\tdraw(element, progress);\n\t\t\t})\n\t\t);\n\t}\n\n\tconst handleMouseLeave = (e) => {\n\t\te.currentTarget.style.paddingBottom = 0;\n\t\tcancelAnimationFrame(animationRequestId);\n\t};\n\n\tconst handleMouseDown = (e) => {\n\t\t// Close the postLinks drawer if we're clicking or dragging, but not on the drawer itself\n\t\tif (\n\t\t\t!e.target.classList.contains(\"postLinks\") &&\n\t\t\t!e.target.classList.contains(\"postLink\")\n\t\t) {\n\t\t\tcancelAnimationFrame(animationRequestId);\n\t\t\te.currentTarget.style.paddingBottom = 0;\n\t\t}\n\t};\n\n\tfunction draggableStyles(snapshot) {\n\t\tlet classes = [\n\t\t\t\"post\",\n\t\t\t`post-id-${post.id} status__${post.post_status}`,\n\t\t];\n\n\t\tif (\n\t\t\t(unscheduled === false &&\n\t\t\t\tpostStatuses[post.post_status].visible === true) ||\n\t\t\tunscheduled === true\n\t\t) {\n\t\t\tclasses.push(\"visible\");\n\t\t} else {\n\t\t\tclasses.push(\"hidden\");\n\t\t}\n\n\t\tif (!isEmpty(currentPost) && currentPost.id === post.id) {\n\t\t\tclasses.push(\"currentPost\");\n\t\t}\n\n\t\tif (snapshot.isDragging) {\n\t\t\tclasses.push(\"dragging\");\n\t\t}\n\n\t\tif (snapshot.draggingOver === \"unscheduled\") {\n\t\t\tclasses.push(\"over__unscheduled\");\n\t\t} else if (snapshot.draggingOver !== null) {\n\t\t\tclasses.push(\"over__calendar\");\n\t\t} else {\n\t\t\tclasses.push(\"over__none\");\n\t\t}\n\n\t\treturn classes.join(\" \");\n\t}\n\n\treturn !isEmpty(postStatuses) ? (\n\t\t<Draggable draggableId={`${post.id}`} index={index}>\n\t\t\t{({ innerRef, draggableProps, dragHandleProps }, snapshot) => (\n\t\t\t\t<li\n\t\t\t\t\tref={innerRef}\n\t\t\t\t\t{...draggableProps}\n\t\t\t\t\t{...dragHandleProps}\n\t\t\t\t\tkey={post.id}\n\t\t\t\t\tclassName={draggableStyles(snapshot)}\n\t\t\t\t\tdata-index={index}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\tonMouseEnter={handleMouseEnter}\n\t\t\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\t\t\tonMouseDown={handleMouseDown}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"postData\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className=\"postData__title\">\n\t\t\t\t\t\t\t{decode(post.post_title, { scope: \"strict\" })}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!isDragging ? (\n\t\t\t\t\t\t<PostLinks\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: color.replace(\n\t\t\t\t\t\t\t\t\t/,1\\)/,\n\t\t\t\t\t\t\t\t\t\",0.75)\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\tunscheduled={unscheduled}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</Draggable>\n\t) : null;\n}\n","import React, { useState, useMemo } from \"react\";\nimport Post from \"./Post\";\nimport { dateFormat } from \"../lib/utils\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { format } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\n\nexport default function PostList({ renderPosts, className, date }) {\n\tconst [hovered, setHovered] = useState(false);\n\n\tconst droppableId =\n\t\tdate === false ? \"unscheduled\" : format(date, dateFormat.date);\n\n\tconst posts = () => {\n\t\tif (isEmpty(renderPosts)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn renderPosts.map((post, index) => (\n\t\t\t<Post\n\t\t\t\tpost={post}\n\t\t\t\tkey={post.id}\n\t\t\t\tindex={index}\n\t\t\t\tunscheduled={droppableId === \"unscheduled\" ? true : false}\n\t\t\t/>\n\t\t));\n\t};\n\n\tconst renderPostList = useMemo(posts, [renderPosts, droppableId]);\n\n\treturn (\n\t\t<Droppable droppableId={droppableId}>\n\t\t\t{({ innerRef, droppableProps, placeholder }, snapshot) => (\n\t\t\t\t<ul\n\t\t\t\t\tref={innerRef}\n\t\t\t\t\t{...droppableProps}\n\t\t\t\t\tclassName={`postList ${className} ${\n\t\t\t\t\t\tsnapshot.isDraggingOver ? \"draggingOver\" : \"idle\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonMouseEnter={() => setHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setHovered(false)}\n\t\t\t\t\tstyle={hovered ? { marginBottom: 0 } : null}\n\t\t\t\t>\n\t\t\t\t\t{renderPostList}\n\t\t\t\t\t{placeholder}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</Droppable>\n\t);\n}\n","import React, { useContext } from \"react\";\n\nimport PostsContext from \"../../PostsContext\";\n\nexport default function NewPostButton({ day, unscheduled }) {\n\tconst { postsDispatch } = useContext(PostsContext);\n\n\tconst handleNewPost = (e) => {\n\t\te.preventDefault();\n\n\t\tpostsDispatch({\n\t\t\ttype: \"NEW_POST\",\n\t\t\tpost_date: day ? day : new Date(),\n\t\t\tunscheduled: unscheduled ? unscheduled : false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<button className=\"icon newPost\" onClick={handleNewPost}>\n\t\t\tadd_circle\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport DragContext from \"../DragContext\";\n\nexport default function DayPosts({ posts, date, title }) {\n\tconst {\n\t\tdraggedPost: { isDragging },\n\t} = useContext(DragContext);\n\n\tconst renderPostList = () => {\n\t\tconst renderList = (\n\t\t\t<>\n\t\t\t\t{!isDragging ? (\n\t\t\t\t\t<NewPostButton day={date} unscheduled={false} />\n\t\t\t\t) : null}\n\t\t\t\t<PostList\n\t\t\t\t\tclassName=\"dayPosts\"\n\t\t\t\t\tdate={date}\n\t\t\t\t\trenderPosts={posts}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\n\t\tif (title) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"title\">{title}</h4>\n\t\t\t\t\t{renderList}\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn renderList;\n\t\t}\n\t};\n\n\treturn renderPostList();\n}\n","import React, { useContext, useCallback } from \"react\";\nimport Day from \"./Day\";\nimport DayPosts from \"./DayPosts\";\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport {\n\tformat,\n\taddDays,\n\tstartOfWeek,\n\tisFirstDayOfMonth,\n\tisToday,\n} from \"date-fns\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function Calendar({ className, todayRef }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\tconst {\n\t\tviewOptions: { viewRange },\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(viewRange.start, viewRange.end);\n\n\tconst renderDaysHeaderRow = useCallback(() => {\n\t\tconst days = [];\n\n\t\tlet startDate = startOfWeek(viewRange.start);\n\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tdays.push(\n\t\t\t\t<div className=\"col col__center\" key={i}>\n\t\t\t\t\t{format(addDays(startDate, i), dateFormat.dayName)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <div className=\"days row\">{days}</div>;\n\t}, [viewRange.start]);\n\n\tconst renderDays = useCallback(() => {\n\t\tconst rows = [];\n\n\t\tlet days = [];\n\t\tlet day = viewRange.start;\n\t\tlet firstCalendarDay = true;\n\n\t\twhile (day < viewRange.end) {\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst dayIsFirstDay =\n\t\t\t\t\tisFirstDayOfMonth(day) || firstCalendarDay;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<Day\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tref={isToday(day) ? todayRef : null}\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tmonthName={\n\t\t\t\t\t\t\tdayIsFirstDay\n\t\t\t\t\t\t\t\t? format(day, dateFormat.monthShort)\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\trenderEmpty={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Day>\n\t\t\t\t);\n\n\t\t\t\tfirstCalendarDay = false;\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className=\"row\" key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn <div className=\"body\">{rows}</div>;\n\t}, [viewRange.end, viewRange.start, scheduled, todayRef]);\n\n\tconst renderCalendar = () => {\n\t\treturn (\n\t\t\t<div className=\"view__calendar__inner\">\n\t\t\t\t{renderDaysHeaderRow()}\n\t\t\t\t{renderDays()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{viewRange.start !== null && viewRange.end !== null\n\t\t\t\t? renderCalendar()\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport DayPosts from \"./DayPosts\";\nimport { dateFormat, dayKey } from \"../lib/utils\";\nimport { format, addDays, endOfDay, isToday, isPast } from \"date-fns\";\n\nimport { useFetchScheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nexport default function List({ className }) {\n\tconst {\n\t\tposts: { scheduled },\n\t} = useContext(PostsContext);\n\n\tconst {\n\t\tviewOptions: {\n\t\t\tviewRange: { start, end },\n\t\t},\n\t} = useContext(ViewContext);\n\n\tuseFetchScheduledPosts(start, end);\n\n\tconst renderDays = () => {\n\t\tlet days = [];\n\t\tlet day = start;\n\t\tlet classes = [\"listDay\"];\n\n\t\tif (end !== \"undefined\" && end !== null) {\n\t\t\twhile (endOfDay(day) <= endOfDay(end)) {\n\t\t\t\tif (isToday(day)) {\n\t\t\t\t\tclasses.push(\"today\");\n\t\t\t\t}\n\t\t\t\tif (isPast(day) && !isToday(day)) {\n\t\t\t\t\tclasses.push(\"past\");\n\t\t\t\t}\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<li key={day} className={classes.join(\" \")}>\n\t\t\t\t\t\t<DayPosts\n\t\t\t\t\t\t\tdate={day}\n\t\t\t\t\t\t\tposts={scheduled[dayKey(day)]}\n\t\t\t\t\t\t\tallowDrag={true}\n\t\t\t\t\t\t\ttitle={format(day, dateFormat.fullDate)}\n\t\t\t\t\t\t\tnewPostButton={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn days;\n\t};\n\n\tconst renderList = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"view__list__days\">\n\t\t\t\t\t<ul>{renderDays()}</ul>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{start !== null && end !== null ? renderList() : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function FieldGroup({ name, label, inlineLabel, children }) {\n\tconst renderInput = () => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`fieldGroup fieldGroup__${name} ${\n\t\t\t\t\tinlineLabel ? \"inlineLabel\" : \"\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{label ? <label htmlFor={name}>{label}</label> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn renderInput();\n}\n","import React from \"react\";\n\nexport default function Icon({ className, children }) {\n\treturn (\n\t\t<span className={className ? `icon ${className}` : \"icon\"}>\n\t\t\t{children}\n\t\t</span>\n\t);\n}\n","import React, {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tuseState,\n\tuseReducer,\n\tuseCallback,\n} from \"react\";\nimport FieldGroup from \"./common/FieldGroup\";\nimport Icon from \"./common/Icon\";\nimport { useClickOutside } from \"../lib/hooks\";\nimport {\n\tdateFormat,\n\tfilterPostStatus,\n\tfilterStatusList,\n\tstripPermalinkSlug,\n} from \"../lib/utils\";\nimport DatePicker from \"react-datepicker\";\nimport { format, isFuture, isPast, isToday } from \"date-fns\";\nimport { isEmpty } from \"lodash\";\nimport { decode } from \"html-entities\";\n\nimport PostsContext from \"../PostsContext\";\nimport ViewContext from \"../ViewContext\";\n\nconst initialEditPost = {\n\tpost: {},\n\teditMode: false,\n};\n\nconst initialTaxFilter = {\n\tcategory: \"\",\n\tpost_tag: \"\",\n};\n\nfunction editPostReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn {\n\t\t\t\tpost: action.post,\n\t\t\t\teditMode: true,\n\t\t\t};\n\n\t\tcase \"EDIT\":\n\t\t\tconst { field } = action;\n\t\t\tvar { value } = action;\n\n\t\t\tif (field === \"post_date\") {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\t[field]: value,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"TOGGLE_TAXONOMY\":\n\t\t\tconst term_id = parseInt(action.term_id);\n\t\t\tconst index = state.post.taxonomies.hasOwnProperty(action.taxonomy)\n\t\t\t\t? state.post.taxonomies[action.taxonomy].indexOf(term_id)\n\t\t\t\t: false;\n\t\t\tlet termList =\n\t\t\t\tindex === -1\n\t\t\t\t\t? [...state.post.taxonomies[action.taxonomy], term_id]\n\t\t\t\t\t: index === false\n\t\t\t\t\t? [term_id]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...state.post.taxonomies[action.taxonomy].slice(\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\ttaxonomies: {\n\t\t\t\t\t\t...state.post.taxonomies,\n\t\t\t\t\t\t[action.taxonomy]: termList,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase \"CLEAR\":\n\t\t\treturn initialEditPost;\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n}\n\nfunction taxFilterReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"category\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategory: action.filter,\n\t\t\t};\n\n\t\tcase \"post_tag\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost_tag: action.filter,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default function EditPost() {\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t} = useContext(ViewContext);\n\tconst {\n\t\tposts: { currentPost, taxonomies, unscheduled: unscheduledPosts },\n\t\tpostsDispatch,\n\t} = useContext(PostsContext);\n\tconst [editPost, editPostDispatch] = useReducer(\n\t\teditPostReducer,\n\t\tinitialEditPost\n\t);\n\tconst [taxFilter, taxFilterDispatch] = useReducer(\n\t\ttaxFilterReducer,\n\t\tinitialTaxFilter\n\t);\n\tconst node = useRef(null);\n\tconst initial = useRef({});\n\tconst [date, setDate] = useState(new Date());\n\tconst [allowedStatuses, setAllowedStatuses] = useState({});\n\tconst [datePickerDisabled, setDatePickerDisabled] = useState(false);\n\tconst [trashPostClicked, setTrashPostClicked] = useState(false);\n\n\tconst { post, editMode } = editPost;\n\tconst {\n\t\tid,\n\t\tpost_title,\n\t\tpost_name,\n\t\tpost_date,\n\t\tpost_status,\n\t\tpost_excerpt,\n\t\timage,\n\t\tedit_link,\n\t\tview_link,\n\t\ttaxonomies: post_taxonomies,\n\t\tunscheduled,\n\t} = post;\n\n\t// Save the original slug\n\tuseEffect(() => {\n\t\tif (!initial.current.post_status) {\n\t\t\tinitial.current.post_status = post_status;\n\t\t}\n\n\t\tif (!initial.current.slug) {\n\t\t\tinitial.current.slug = post_name;\n\t\t}\n\n\t\treturn () => {\n\t\t\tinitial.current = {};\n\t\t};\n\t}, [post_name, post_status]);\n\n\tuseEffect(() => {\n\t\tif (post_date && post_date !== \"undefined\") {\n\t\t\tsetDate(new Date(post_date));\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetDate(new Date());\n\t\t};\n\t}, [post_date]);\n\n\tuseEffect(() => {\n\t\tlet exclude = [];\n\n\t\tif (unscheduled === true) {\n\t\t\texclude.push(\"publish\", \"future\");\n\t\t} else if (isFuture(date)) {\n\t\t\texclude.push(\"publish\");\n\t\t} else if (isPast(date)) {\n\t\t\texclude.push(\"future\");\n\t\t}\n\n\t\tconst statusList = filterStatusList(postStatuses, exclude);\n\n\t\tsetAllowedStatuses(statusList);\n\n\t\treturn () => {\n\t\t\tsetAllowedStatuses({});\n\t\t};\n\t}, [date, unscheduled, postStatuses]);\n\n\tuseEffect(() => {\n\t\tconst { post_date, post_status } = currentPost;\n\n\t\tsetDatePickerDisabled(\n\t\t\tpost_date &&\n\t\t\t\t(isToday(post_date) || isPast(post_date)) &&\n\t\t\t\tpost_status === \"publish\"\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t);\n\n\t\treturn () => {\n\t\t\tsetDatePickerDisabled(false);\n\t\t};\n\t}, [currentPost]);\n\n\tuseEffect(() => {\n\t\tconst { id } = currentPost;\n\t\tif (id > 0 || id === 0) {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"SET\",\n\t\t\t\tpost: currentPost,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\teditPostDispatch({\n\t\t\t\ttype: \"CLEAR\",\n\t\t\t});\n\t\t};\n\t}, [currentPost]);\n\n\tconst closeModal = useCallback(() => {\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\t}, [editPostDispatch, postsDispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// If unscheduled, get the current index to pass along\n\t\tconst index = unscheduled\n\t\t\t? unscheduledPosts.findIndex((item) => item.id === id)\n\t\t\t: false;\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid: id,\n\t\t\tparams: {\n\t\t\t\tpost_title,\n\t\t\t\tpost_name,\n\t\t\t\tpost_date: format(new Date(post_date), dateFormat.dateTime),\n\t\t\t\tpost_status: filterPostStatus(post_status, unscheduled),\n\t\t\t\tpost_excerpt,\n\t\t\t\ttaxonomies: post_taxonomies,\n\t\t\t},\n\t\t\tunscheduled,\n\t\t\tnewIndex: index,\n\t\t});\n\n\t\tpostsDispatch({\n\t\t\ttype: \"UNSET_CURRENTPOST\",\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\t};\n\n\tconst trashHandler = () => {\n\t\tpostsDispatch({\n\t\t\ttype: \"TRASH\",\n\t\t\tid,\n\t\t});\n\n\t\teditPostDispatch({\n\t\t\ttype: \"CLEAR\",\n\t\t});\n\n\t\tsetTrashPostClicked(false);\n\t};\n\n\tconst handleInputChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: e.target.value,\n\t\t});\n\t};\n\n\tconst handleCheckboxToggle = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: e.target.name,\n\t\t\tvalue: !post[e.target.name],\n\t\t});\n\t};\n\n\tconst handleTermCheckboxChange = (e) => {\n\t\teditPostDispatch({\n\t\t\ttype: \"TOGGLE_TAXONOMY\",\n\t\t\ttaxonomy: e.target.closest(\"fieldset\").name,\n\t\t\tterm_id: e.target.value,\n\t\t});\n\t};\n\n\tconst handleInputDateChange = (date) => {\n\t\tif (date === null) {\n\t\t\tdate = new Date();\n\t\t}\n\n\t\teditPostDispatch({\n\t\t\ttype: \"EDIT\",\n\t\t\tfield: \"post_date\",\n\t\t\tvalue: date,\n\t\t});\n\t};\n\n\tconst renderStatusOptions = (statusList) => {\n\t\treturn Object.keys(statusList).map((status) => (\n\t\t\t<option key={status} value={status}>\n\t\t\t\t{statusList[status].name}\n\t\t\t</option>\n\t\t));\n\t};\n\n\tuseClickOutside(node, closeModal);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`editPost ${editMode ? \"active\" : \"inactive\"}`}\n\t\t\tref={initial}\n\t\t>\n\t\t\t<div className=\"editPost__container\">\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<div ref={node} className=\"editPost__editor\">\n\t\t\t\t\t\t<button className=\"close icon\" onClick={closeModal}>\n\t\t\t\t\t\t\thighlight_off\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName={`editPost__form ${\n\t\t\t\t\t\t\t\ttrashPostClicked ? \"trashConfirm\" : \"\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"editPost__title\">\n\t\t\t\t\t\t\t\t<FieldGroup name=\"post_title\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"post_title\"\n\t\t\t\t\t\t\t\t\t\tid=\"post_title\"\n\t\t\t\t\t\t\t\t\t\tvalue={decode(post_title, {\n\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"New Post Title\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"editLink\"\n\t\t\t\t\t\t\t\t\thref={decode(edit_link)}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit{\" \"}\n\t\t\t\t\t\t\t\t\t<Icon className=\"open_in_new\">\n\t\t\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t\t<div className=\"header__left\">\n\t\t\t\t\t\t\t\t\t{initial.current.post_status ===\n\t\t\t\t\t\t\t\t\t\"publish\" ? (\n\t\t\t\t\t\t\t\t\t\t<FieldGroup name=\"post_name\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"permalink\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"base\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={view_link}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stripPermalinkSlug(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tview_link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"post_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={post_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<FieldGroup name=\"date\">\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName={`post_date ${\n\t\t\t\t\t\t\t\t\t\t\t\tunscheduled === true\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"inactive\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"active\"\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_date\">\n\t\t\t\t\t\t\t\t\t\t\t\tPost Date\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\tcloseOnScroll={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\te.target === document\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\n\t\t\t\t\t\t\t\t\t\t\t\tshowTimeInput\n\t\t\t\t\t\t\t\t\t\t\t\tdateFormat={dateFormat.dateTime}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputDateChange}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={datePickerDisabled}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"unscheduled\"\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={unscheduled}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxToggle}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"unscheduled\">\n\t\t\t\t\t\t\t\t\t\t\t\tUnscheduled\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Excerpt\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tname=\"post_excerpt\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\t\t\tvalue={decode(post_excerpt, {\n\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"header__right\">\n\t\t\t\t\t\t\t\t\t<div className=\"editPost__buttons\">\n\t\t\t\t\t\t\t\t\t\t{trashPostClicked === true ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"trash confirm\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you sure you want to\n\t\t\t\t\t\t\t\t\t\t\t\t\tTrash this post?\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={trashHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"Yes\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* TODO bind ESC to cancel */}\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"No\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Save\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Update\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"trash\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTrashPostClicked(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"fieldGroup__status\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"post_status\">\n\t\t\t\t\t\t\t\t\t\t\tPost Status\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tname=\"post_status\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={post_status}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{renderStatusOptions(\n\t\t\t\t\t\t\t\t\t\t\t\tallowedStatuses\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<FieldGroup name=\"post_thumb\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={decode(edit_link)}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tFeatured Image{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Icon className=\"open_in_new\">\n\t\t\t\t\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t\t\t\t{image ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={`${post_title}`}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<FieldGroup name=\"taxonomies\">\n\t\t\t\t\t\t\t\t<div className=\"taxonomy\">\n\t\t\t\t\t\t\t\t\t<fieldset name=\"category\">\n\t\t\t\t\t\t\t\t\t\t<legend>Categories</legend>\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter\">\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"category_filter\">\n\t\t\t\t\t\t\t\t\t\t\t\tSearch Categories\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"category_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"category_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={taxFilter.category}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilterDispatch({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"category\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"terms\">\n\t\t\t\t\t\t\t\t\t\t\t{taxonomies.category.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ name, slug, term_id },\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.category.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.category ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.category.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"taxonomy\">\n\t\t\t\t\t\t\t\t\t<fieldset name=\"post_tag\">\n\t\t\t\t\t\t\t\t\t\t<legend>Tags</legend>\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter\">\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"category_filter\">\n\t\t\t\t\t\t\t\t\t\t\t\tSearch Post Tags\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"post_tag_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"post_tag_filter\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={taxFilter.post_tag}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilterDispatch({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"post_tag\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"terms\">\n\t\t\t\t\t\t\t\t\t\t\t{taxonomies.post_tag.terms.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ name, slug, term_id },\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.post_tag.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttaxFilter.post_tag ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={slug}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={term_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleTermCheckboxChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isEmpty(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.post_tag\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_taxonomies.post_tag.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tterm_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{decode(name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope: \"strict\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { forwardRef, useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport List from \"./List\";\nimport EditPost from \"./EditPost\";\nimport { useFetchTaxonomyTerms } from \"../lib/hooks\";\n\nimport ViewContext from \"../ViewContext\";\n\nconst Main = forwardRef(({ todayRef }, ref) => {\n\tconst {\n\t\tviewOptions: { viewMode },\n\t} = useContext(ViewContext);\n\n\tuseFetchTaxonomyTerms(\"category\");\n\tuseFetchTaxonomyTerms(\"post_tag\");\n\n\treturn (\n\t\t<main className=\"calendario__main\">\n\t\t\t<div className=\"view\" ref={ref}>\n\t\t\t\t{viewMode === \"calendar\" ? (\n\t\t\t\t\t<Calendar className=\"view__calendar\" todayRef={todayRef} />\n\t\t\t\t) : (\n\t\t\t\t\t<List className=\"view__list\" todayRef={todayRef} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<EditPost />\n\t\t</main>\n\t);\n});\nexport default Main;\n","import React from \"react\";\nimport { wp } from \"../lib/utils\";\n\nexport default function AdminLinks() {\n\tconst { blogUrl, trashUrl } = wp;\n\n\tconst renderLink = ([link, title, target]) => {\n\t\ttarget = target ? target : \"_self\";\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a rel=\"noreferrer\" href={link} target={target}>\n\t\t\t\t\t{title} <span className=\"icon\">open_in_new</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ul className=\"adminLinks\">\n\t\t\t{renderLink([trashUrl, \"Trash\", \"_blank\"])}\n\t\t\t{renderLink([blogUrl, \"View Posts\", \"_blank\"])}\n\t\t</ul>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport PostList from \"./PostList\";\nimport AdminLinks from \"./AdminLinks\";\nimport NewPostButton from \"./common/NewPostButton\";\nimport { useFetchUnscheduledPosts } from \"../lib/hooks\";\n\nimport PostsContext from \"../PostsContext\";\n\nexport default function UnscheduledDrafts() {\n\tconst {\n\t\tposts: { unscheduled },\n\t} = useContext(PostsContext);\n\n\tuseFetchUnscheduledPosts();\n\n\treturn (\n\t\t<>\n\t\t\t<PostList\n\t\t\t\tclassName=\"unscheduledDrafts\"\n\t\t\t\tdate={false}\n\t\t\t\trenderPosts={unscheduled}\n\t\t\t/>\n\t\t\t<NewPostButton unscheduled={true} />\n\t\t\t<AdminLinks />\n\t\t</>\n\t);\n}\n","import React, {\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport { wp } from \"../../lib/utils\";\nimport { useClickOutside } from \"../../lib/hooks\";\n\nimport ViewContext from \"../../ViewContext\";\n\nimport { HexColorPicker } from \"react-colorful\";\n\nexport default function ColorPickerPopover({ color, name }) {\n\tconst { presetStatusColors } = wp;\n\tconst popover = useRef();\n\tconst previous = useRef(color);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst [colorValue, setColorValue] = useState(\"\");\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (popover.current === undefined && !color) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorValue(color);\n\t}, [color]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tpopover.current === undefined ||\n\t\t\tpostStatuses[name].color === colorValue ||\n\t\t\tprevious.current === colorValue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"SET_POST_STATUS_COLOR\",\n\t\t\tpostStatus: name,\n\t\t\tcolor: colorValue,\n\t\t});\n\n\t\tprevious.current = colorValue;\n\t}, [colorValue, name, postStatuses, viewOptionsDispatch]);\n\n\tconst close = useCallback(() => setIsOpen(false), []);\n\tuseClickOutside(popover, close);\n\n\treturn (\n\t\t<div className=\"picker\">\n\t\t\t<div\n\t\t\t\tclassName=\"swatch\"\n\t\t\t\tstyle={{ backgroundColor: colorValue }}\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t/>\n\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"popover\" ref={popover}>\n\t\t\t\t\t<HexColorPicker\n\t\t\t\t\t\tcolor={colorValue}\n\t\t\t\t\t\tonChange={setColorValue}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"picker__swatches\">\n\t\t\t\t\t\t{presetStatusColors === undefined\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: presetStatusColors.map((color) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"picker__swatch\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorValue(color)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ selected, toggleSelected, name }) {\n\treturn (\n\t\t<div className=\"toggle\">\n\t\t\t<button\n\t\t\t\tname={name}\n\t\t\t\tclassName={`dialog-button ${selected ? \"\" : \"disabled\"}`}\n\t\t\t\tonClick={toggleSelected}\n\t\t\t>\n\t\t\t\t{selected ? \"ON\" : \"OFF\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ColorPickerPopover from \"./common/ColorPickerPopover\";\nimport ToggleButton from \"./common/ToggleButton\";\nimport { wp, haveColorsChanged } from \"../lib/utils\";\nimport { isEmpty } from \"lodash\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function StatusFilters() {\n\tconst { routeBase } = wp;\n\tconst firstUpdate = useRef(true);\n\tconst {\n\t\tviewOptions: { postStatuses },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\tconst keys = Object.keys(postStatuses);\n\tconst [colorsChanged, setColorsChanged] = useState(false);\n\n\t// Maintain state for color defaults\n\tuseEffect(() => {\n\t\tsetColorsChanged(haveColorsChanged(postStatuses));\n\t}, [postStatuses]);\n\n\t// Updates the server when the dispatch is updated (after debounce)\n\tuseEffect(() => {\n\t\tif (isEmpty(postStatuses)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate.current === true) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// update server\n\t\tlet url = `${routeBase}/statuses`;\n\n\t\tconst fetchData = async () => {\n\t\t\tlet colors = {};\n\t\t\tfor (let status in postStatuses) {\n\t\t\t\tcolors[status] = postStatuses[status].color;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(colors),\n\t\t\t\t});\n\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\tawait response.json();\n\n\t\t\t\t// do something else?\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, [firstUpdate, routeBase, postStatuses]);\n\n\tconst toggleStatus = (e) => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"TOGGLE_POST_STATUS\",\n\t\t\tpostStatus: e.target.name,\n\t\t});\n\t};\n\n\tconst handleResetColors = () => {\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"RESET_POST_STATUS_COLORS\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"statusFilters\">\n\t\t\t<ul className=\"filters\">\n\t\t\t\t{keys.map((status, index) => {\n\t\t\t\t\tconst { color, name } = postStatuses[status];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`filterItem status__${status}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ColorPickerPopover color={color} name={status} />\n\t\t\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\tpostStatuses[status].visible ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggleSelected={toggleStatus}\n\t\t\t\t\t\t\t\tname={status}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{colorsChanged ? (\n\t\t\t\t<button className=\"reset\" onClick={handleResetColors}>\n\t\t\t\t\tReset Colors\n\t\t\t\t</button>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function DrawerHandle({ toggle }) {\n\treturn (\n\t\t<button className=\"drawerHandle icon\" onClick={toggle}>\n\t\t\tdrag_indicator\n\t\t</button>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport UnscheduledDrafts from \"./UnscheduledDrafts\";\nimport StatusFilters from \"./StatusFilters\";\nimport DrawerHandle from \"./common/DrawerHandle\";\nimport { renderWidget } from \"../lib/utils\";\nimport { wp } from \"../lib/utils\";\n\nimport ViewContext from \"../ViewContext\";\n\nexport default function Sidebar() {\n\tconst { pluginUrl } = wp;\n\n\tconst {\n\t\tviewOptions: { sidebarOpen },\n\t\tviewOptionsDispatch,\n\t} = useContext(ViewContext);\n\n\treturn (\n\t\t<aside\n\t\t\tclassName={`calendario__sidebar ${sidebarOpen ? \"open\" : \"closed\"}`}\n\t\t>\n\t\t\t<DrawerHandle\n\t\t\t\ttoggle={() =>\n\t\t\t\t\tviewOptionsDispatch({\n\t\t\t\t\t\ttype: \"TOGGLE_SIDEBAR\",\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<div className=\"calendario__sidebar__inner\">\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Unscheduled Drafts\",\n\t\t\t\t\t\"unscheduledDrafts\",\n\t\t\t\t\t<UnscheduledDrafts />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"Post Status\",\n\t\t\t\t\t\"statusFilters\",\n\t\t\t\t\t<StatusFilters />\n\t\t\t\t)}\n\n\t\t\t\t{renderWidget(\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"support\",\n\t\t\t\t\t<>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"rhdLogo\"\n\t\t\t\t\t\t\thref=\"https://roundhouse-designs.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${pluginUrl}rhd-logo.png`}\n\t\t\t\t\t\t\t\talt=\"Roundhouse Designs logo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul className=\"docs\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/wiki\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSupport\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/gaswirth/rhdwp-calendario/issues\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReport a Bug\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</aside>\n\t);\n}\n","import React, { useEffect, /*useState,*/ useReducer, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Sidebar from \"./components/Sidebar\";\nimport Icon from \"./components/common/Icon\";\nimport { useStickyState } from \"./lib/hooks\";\nimport {\n\tdateIsBetween,\n\tisDraggingUnscheduled,\n\treorderUnscheduled,\n\tgetPostList,\n\tmoveItem,\n\twp,\n\tdraggedPostDate,\n\tDEBUG_MODE,\n\tfilterPostStatus,\n} from \"./lib/utils\";\nimport { isEmpty } from \"lodash\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport PostsContext, { postsReducer, initialPosts } from \"./PostsContext\";\nimport DragContext, { dragReducer, initialDrag } from \"./DragContext\";\nimport ViewContext, { viewReducer, initialViewOptions } from \"./ViewContext\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n\tconst [posts, postsDispatch] = useReducer(postsReducer, initialPosts);\n\tconst [draggedPost, draggedPostDispatch] = useReducer(\n\t\tdragReducer,\n\t\tinitialDrag\n\t);\n\tconst [viewOptions, viewOptionsDispatch] = useReducer(\n\t\tviewReducer,\n\t\tinitialViewOptions\n\t);\n\tconst [view, setView] = useStickyState(\n\t\t{\n\t\t\tviewMode: \"calendar\",\n\t\t},\n\t\t\"viewOptions\"\n\t);\n\n\tconst todayRef = useRef();\n\tconst mainRef = useRef();\n\n\tconst {\n\t\tunscheduled: unscheduledPosts,\n\t\tscheduled: scheduledPosts,\n\t\tcurrentPost,\n\t} = posts;\n\tconst { routeBase, user, nonce } = wp;\n\n\tuseEffect(() => {\n\t\t// Update the context initially\n\t\tviewOptionsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tviewMode: view.viewMode,\n\t\t});\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Store the values if it's updated elsewhere\n\t\tsetView({\n\t\t\tviewMode: viewOptions.viewMode,\n\t\t});\n\t}, [setView, viewOptions.viewMode]);\n\n\t// Send the update!\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tupdatePost: { updateNow, id, params, unscheduled, newIndex, trash },\n\t\t} = posts;\n\n\t\tif (updateNow === true && id !== undefined) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATING\",\n\t\t\t});\n\n\t\t\t// Check if this is a new post, a post to trash, or an existing post,\n\t\t\t//   and set the proper URL\n\t\t\tlet url = `${routeBase}/posts/`;\n\t\t\tif (trash === true) {\n\t\t\t\turl += `trash/${id}/${user}`;\n\t\t\t} else {\n\t\t\t\tif (id === 0) {\n\t\t\t\t\turl += `new/${user}`;\n\t\t\t\t} else {\n\t\t\t\t\turl += `update/${id}/${user}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t};\n\n\t\t\tif (DEBUG_MODE !== true) {\n\t\t\t\theaders[\"X-WP-Nonce\"] = nonce;\n\t\t\t}\n\n\t\t\tlet postData = {\n\t\t\t\tparams: !isEmpty(params) ? params : {},\n\t\t\t\tunscheduled,\n\t\t\t};\n\n\t\t\tif (newIndex !== null) {\n\t\t\t\tpostData.newIndex = newIndex;\n\t\t\t}\n\n\t\t\tconst fetchData = async () => {\n\t\t\t\t// setIsLoading(true);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify(postData),\n\t\t\t\t\t});\n\t\t\t\t\t// const data = await response.json(); // If you need to catch the response...\n\t\t\t\t\tawait response.json();\n\n\t\t\t\t\tdraggedPostDispatch({\n\t\t\t\t\t\ttype: \"END\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"COMPLETE\",\n\t\t\t\t\t});\n\n\t\t\t\t\tpostsDispatch({\n\t\t\t\t\t\ttype: \"REFETCH\",\n\t\t\t\t\t});\n\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t\t// setIsLoading(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchData();\n\t\t}\n\t}, [\n\t\trouteBase,\n\t\tuser,\n\t\tnonce,\n\t\tposts,\n\t\tdraggedPost,\n\t\tdraggedPostDispatch,\n\t\tpostsDispatch,\n\t]);\n\n\tconst isOverUnscheduled = (droppableId) =>\n\t\tdroppableId === \"unscheduled\" ? true : false;\n\n\tconst handleTodayClick = () => {\n\t\tconst today = new Date();\n\n\t\tif (\n\t\t\tdateIsBetween(\n\t\t\t\ttoday,\n\t\t\t\tviewOptions.viewRange.start,\n\t\t\t\tviewOptions.viewRange.end\n\t\t\t)\n\t\t) {\n\t\t\tmainRef.current.scroll({\n\t\t\t\ttop: todayRef.current.offsetTop,\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t});\n\t\t} else {\n\t\t\tviewOptionsDispatch({\n\t\t\t\ttype: \"SET_RANGE_START\",\n\t\t\t\tdate: today,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragStart = (item) => {\n\t\tlet draggingUnscheduled = isDraggingUnscheduled(item);\n\n\t\tlet postList;\n\t\tif (draggingUnscheduled === true) {\n\t\t\tpostList = unscheduledPosts;\n\t\t} else {\n\t\t\tpostList = scheduledPosts[item.source.droppableId];\n\t\t}\n\n\t\tconst post = postList.find((p) => {\n\t\t\treturn Number(item.draggableId) === Number(p.id);\n\t\t});\n\t\tlet currentIndex = isDraggingUnscheduled(item)\n\t\t\t? item.source.draggableId\n\t\t\t: false;\n\n\t\tdraggedPostDispatch({\n\t\t\ttype: \"START\",\n\t\t\tpost: post,\n\t\t\tdraggingUnscheduled,\n\t\t\tcurrentIndex,\n\t\t});\n\t};\n\n\tconst onDragUpdate = (item) => {\n\t\tif (item.destination === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(item.source.droppableId);\n\n\t\t// only dispatch if an update is necessary\n\t\tif (overUnscheduled === true) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_UNSCHEDULED\",\n\t\t\t\tdraggedOver: item.destination.index,\n\t\t\t});\n\t\t} else if (\n\t\t\toverUnscheduled === false &&\n\t\t\tdraggedPost.overUnscheduled === true\n\t\t) {\n\t\t\tdraggedPostDispatch({\n\t\t\t\ttype: \"DRAGGING_OVER_CALENDAR\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDragEnd = (item) => {\n\t\tconst { source, destination } = item;\n\t\tconst {\n\t\t\tpost: { id, post_date: post_date_raw, post_status },\n\t\t} = draggedPost;\n\n\t\t// dropped outside a list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet overUnscheduled = isOverUnscheduled(destination.droppableId);\n\n\t\tconst post_date = draggedPostDate(\n\t\t\tpost_date_raw,\n\t\t\tdestination.droppableId,\n\t\t\toverUnscheduled\n\t\t);\n\n\t\tif (overUnscheduled && source.droppableId === destination.droppableId) {\n\t\t\t// Reorder\n\t\t\tconst items = reorderUnscheduled(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"SET_UNSCHEDULED\",\n\t\t\t\tposts: items,\n\t\t\t});\n\t\t} else if (source.droppableId !== destination.droppableId) {\n\t\t\t// Move\n\t\t\tconst result = moveItem(\n\t\t\t\tgetPostList(source.droppableId, posts),\n\t\t\t\tgetPostList(destination.droppableId, posts),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"MOVE\",\n\t\t\t\tsource: result[source.droppableId],\n\t\t\t\tdestination: result[destination.droppableId],\n\t\t\t\tsourceId: result.sourceId,\n\t\t\t\tdestinationId: result.destinationId,\n\t\t\t});\n\t\t}\n\n\t\t// Run the update\n\t\tpostsDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tid,\n\t\t\tunscheduled: overUnscheduled,\n\t\t\tparams: {\n\t\t\t\tpost_date: post_date.formatted,\n\t\t\t\tpost_status: filterPostStatus(post_status, overUnscheduled),\n\t\t\t},\n\t\t\tnewIndex: overUnscheduled ? destination.index : null,\n\t\t});\n\n\t\t// If doing a post edit, save the post date\n\t\tif (currentPost.id === id) {\n\t\t\tpostsDispatch({\n\t\t\t\ttype: \"UPDATE_CURRENTPOST_FIELD\",\n\t\t\t\tfield: \"post_date\",\n\t\t\t\tvalue: post_date.date,\n\t\t\t});\n\t\t}\n\n\t\tdraggedPostDispatch({ type: \"END\" });\n\t};\n\n\tfunction appClass() {\n\t\tconst { sidebarOpen } = viewOptions;\n\n\t\tlet classes = [\"calendario\"];\n\n\t\tif (sidebarOpen === true) {\n\t\t\tclasses.push(\"sidebarOpen\");\n\t\t} else {\n\t\t\tclasses.push(\"sidebarClosed\");\n\t\t}\n\n\t\treturn classes.join(\" \");\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mobileOrientationCheck\">\n\t\t\t\t<div className=\"message\">\n\t\t\t\t\t<Icon>screen_rotation</Icon>\n\t\t\t\t\t<p className=\"caption\">Please rotate your device</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={appClass()}>\n\t\t\t\t<ViewContext.Provider\n\t\t\t\t\tvalue={{ viewOptions, viewOptionsDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PostsContext.Provider value={{ posts, postsDispatch }}>\n\t\t\t\t\t\t<Header handleTodayClick={handleTodayClick} />\n\n\t\t\t\t\t\t<DragContext.Provider\n\t\t\t\t\t\t\tvalue={{ draggedPost, draggedPostDispatch }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\t\t\tonDragUpdate={onDragUpdate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t\t<Main ref={mainRef} todayRef={todayRef} />\n\t\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t</DragContext.Provider>\n\t\t\t\t\t</PostsContext.Provider>\n\t\t\t\t</ViewContext.Provider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport \"./lib/typedefs\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DEBUG_MODE } from \"./lib/utils\";\n\nvar reactAppData, appAnchorElement;\nif (DEBUG_MODE !== true) {\n\t// live values\n\treactAppData = window.rhdReactPlugin || {};\n\tconst { appSelector } = reactAppData;\n\tappAnchorElement = document.querySelector(appSelector);\n} else {\n\t// Dev\n\tappAnchorElement = document.getElementById(\"root\");\n}\n\nif (appAnchorElement) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tappAnchorElement\n\t);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}